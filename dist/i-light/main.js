(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error('Cannot find module "' + req + '".');
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _not_found_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./not-found.component */ "./src/app/not-found.component.ts");
/* harmony import */ var _guard_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guard/can-deactivate-guard.service */ "./src/app/guard/can-deactivate-guard.service.ts");
/* harmony import */ var _selective_preloading_strategy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./selective-preloading-strategy */ "./src/app/selective-preloading-strategy.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _home_home_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./home/home.routes */ "./src/app/home/home.routes.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var appRoutes = [
    { path: 'login', component: _login_login_component__WEBPACK_IMPORTED_MODULE_5__["LoginComponent"] }
].concat(_home_home_routes__WEBPACK_IMPORTED_MODULE_6__["HomeRoutes"], [
    { path: '**', component: _not_found_component__WEBPACK_IMPORTED_MODULE_2__["PageNotFoundComponent"] },
]);
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(appRoutes, {
                    // enableTracing: true, // <-- debugging purposes only
                    preloadingStrategy: _selective_preloading_strategy__WEBPACK_IMPORTED_MODULE_4__["SelectivePreloadingStrategy"],
                })
            ],
            exports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]
            ],
            providers: [
                _guard_can_deactivate_guard_service__WEBPACK_IMPORTED_MODULE_3__["CanDeactivateGuard"],
                _selective_preloading_strategy__WEBPACK_IMPORTED_MODULE_4__["SelectivePreloadingStrategy"]
            ]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());

/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: app-routing.module.ts
@time: 2018 / 7 / 2 17: 18

*/


/***/ }),

/***/ "./src/app/app.component.html":
/*!************************************!*\
  !*** ./src/app/app.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n\r\n<router-outlet></router-outlet>\r\n<router-outlet name=\"popup\"></router-outlet>"

/***/ }),

/***/ "./src/app/app.component.scss":
/*!************************************!*\
  !*** ./src/app/app.component.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AppComponent = /** @class */ (function () {
    function AppComponent(router) {
        this.router = router;
        this.title = 'app';
    }
    AppComponent.prototype.ngOnInit = function () {
        this.router.events
            .subscribe(function (event) {
            $(window).scrollTop(0);
        });
    };
    AppComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.scss */ "./src/app/app.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: tokenGetter, AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenGetter", function() { return tokenGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./material.module */ "./src/app/material.module.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var ngx_cookie__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-cookie */ "./node_modules/ngx-cookie/fesm5/ngx-cookie.js");
/* harmony import */ var angular_gridster2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! angular-gridster2 */ "./node_modules/angular-gridster2/fesm5/angular-gridster2.js");
/* harmony import */ var _home_home_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./home/home.module */ "./src/app/home/home.module.ts");
/* harmony import */ var _service_service_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./service/service.module */ "./src/app/service/service.module.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./home/home.component */ "./src/app/home/home.component.ts");
/* harmony import */ var _home_device_device_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./home/device/device.component */ "./src/app/home/device/device.component.ts");
/* harmony import */ var _home_user_user_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./home/user/user.component */ "./src/app/home/user/user.component.ts");
/* harmony import */ var _home_monitor_monitor_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./home/monitor/monitor.component */ "./src/app/home/monitor/monitor.component.ts");
/* harmony import */ var _home_application_application_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./home/application/application.component */ "./src/app/home/application/application.component.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./guard/auth-guard.service */ "./src/app/guard/auth-guard.service.ts");
/* harmony import */ var _guard_auth_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./guard/auth.service */ "./src/app/guard/auth.service.ts");
/* harmony import */ var _windowserver__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./windowserver */ "./src/app/windowserver.ts");
/* harmony import */ var _not_found_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./not-found.component */ "./src/app/not-found.component.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _auth0_angular_jwt__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @auth0/angular-jwt */ "./node_modules/@auth0/angular-jwt/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./index */ "./src/app/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
























 // HTTP_INTERCEPTORS,


function tokenGetter() {
    return localStorage.getItem('token');
}
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_12__["AppComponent"],
                _login_login_component__WEBPACK_IMPORTED_MODULE_13__["LoginComponent"],
                _home_home_component__WEBPACK_IMPORTED_MODULE_14__["HomeComponent"],
                _not_found_component__WEBPACK_IMPORTED_MODULE_23__["PageNotFoundComponent"],
                _home_device_device_component__WEBPACK_IMPORTED_MODULE_15__["DeviceComponent"],
                _home_user_user_component__WEBPACK_IMPORTED_MODULE_16__["UserComponent"],
                _home_monitor_monitor_component__WEBPACK_IMPORTED_MODULE_17__["MonitorComponent"],
                _home_application_application_component__WEBPACK_IMPORTED_MODULE_18__["ApplicationComponent"],
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ReactiveFormsModule"],
                _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModule"].forRoot(),
                _angular_http__WEBPACK_IMPORTED_MODULE_6__["HttpModule"],
                ngx_cookie__WEBPACK_IMPORTED_MODULE_7__["CookieModule"].forRoot(),
                _app_routing_module__WEBPACK_IMPORTED_MODULE_19__["AppRoutingModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__["BrowserAnimationsModule"],
                _home_home_module__WEBPACK_IMPORTED_MODULE_9__["HomeModule"],
                angular_gridster2__WEBPACK_IMPORTED_MODULE_8__["GridsterModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_2__["MaterialModule"],
                _service_service_module__WEBPACK_IMPORTED_MODULE_10__["ServiceModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_11__["SharedModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_24__["HttpClientModule"],
                _auth0_angular_jwt__WEBPACK_IMPORTED_MODULE_25__["JwtModule"].forRoot({
                    config: {
                        tokenGetter: tokenGetter
                    }
                })
            ],
            exports: [],
            providers: [
                _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_20__["AuthGuard"], _guard_auth_service__WEBPACK_IMPORTED_MODULE_21__["AuthService"], _windowserver__WEBPACK_IMPORTED_MODULE_22__["WindowRef"], _index__WEBPACK_IMPORTED_MODULE_26__["httpInterceptorProviders"],
            ],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_12__["AppComponent"]],
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/data/calamity-list.ts":
/*!***************************************!*\
  !*** ./src/app/data/calamity-list.ts ***!
  \***************************************/
/*! exports provided: CALAMITYLIST */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CALAMITYLIST", function() { return CALAMITYLIST; });
var CALAMITYLIST = {
    'light_list': [
        {
            'id': '300001',
            'type': 1,
            'name': '楼宇坍塌1',
            'point': [113.924862, 22.507287],
            'lat': '22.496739',
            'lng': '113.920522',
            'offline': 1,
            'light_level': 1,
            'error': 0,
        },
        {
            'id': '300002',
            'type': 1,
            'name': '楼宇坍塌2',
            'point': [113.938229, 22.490692],
            'lat': '22.496113',
            'lng': '113.920913',
            'offline': 0,
            'light_level': 2,
            'error': 0,
        },
        {
            'id': '300003',
            'type': 1,
            'name': '楼宇坍塌3',
            'point': [113.948182, 22.503213],
            'lat': '22.49757',
            'lng': '113.920122',
            'offline': 0,
            'light_level': 3,
            'error': 0,
        },
        {
            'id': '300004',
            'type': 2,
            'name': '山体滑坡1',
            'point': [113.903555, 22.501277],
            'lat': '22.496885',
            'lng': '113.919952',
            'offline': 0,
            'light_level': 1,
            'error': 0,
        },
        {
            'id': '300005',
            'type': 2,
            'name': '山体滑坡2',
            'point': [113.920515, 22.50732],
            'lat': '22.497361',
            'lng': '113.923235',
            'offline': 0,
            'light_level': 3,
            'error': 0,
        },
        {
            'id': '300006',
            'type': 2,
            'name': '山体滑坡3',
            'point': [113.942757, 22.489823],
            'lat': '22.496393',
            'lng': '113.919781',
            'offline': 1,
            'light_level': 2,
            'error': 0,
        },
        {
            'id': '300007',
            'type': 3,
            'name': '异味臭气1',
            'point': [113.945164, 22.50929],
            'lat': '22.497632',
            'lng': '113.922642',
            'offline': 1,
            'light_level': 1,
            'error': 0,
        },
        {
            'id': '300008',
            'type': 3,
            'name': '异味臭气2',
            'point': [113.937187, 22.508689],
            'lat': '22.497987',
            'lng': '113.921852',
            'offline': 0,
            'light_level': 2,
            'error': 0,
        },
        {
            'id': '300009',
            'type': 3,
            'name': '异味臭气3',
            'point': [113.928563, 22.492495],
            'lat': '22.498279',
            'lng': '113.921151',
            'offline': 1,
            'light_level': 3,
            'error': 0,
        },
        {
            'id': '300010',
            'type': 4,
            'name': '燃气泄漏1',
            'point': [113.931294, 22.501811],
            'lat': '22.49853',
            'lng': '113.920378',
            'offline': 1,
            'light_level': 1,
            'error': 0,
        },
        {
            'id': '300011',
            'type': 4,
            'name': '燃气泄漏2',
            'point': [113.919437, 22.494365],
            'lat': '22.49557',
            'lng': '113.922229',
            'offline': 0,
            'light_level': 2,
            'error': 0,
        },
        {
            'id': '300012',
            'type': 4,
            'name': '燃气泄漏3',
            'point': [113.947392, 22.489256],
            'lat': '22.495863',
            'lng': '113.921515',
            'offline': 1,
            'light_level': 3,
            'error': 0,
        },
        {
            'id': '300013',
            'type': 5,
            'name': '道路积水1',
            'point': [113.940062, 22.50318],
            'lat': '22.496388',
            'lng': '113.920419',
            'offline': 1,
            'light_level': 1,
            'error': 0,
        },
        {
            'id': '300014',
            'type': 5,
            'name': '道路积水2',
            'point': [113.937151, 22.49767],
            'lat': '22.498012',
            'lng': '113.922485',
            'offline': 1,
            'light_level': 2,
            'error': 0,
        },
        {
            'id': '300015',
            'type': 5,
            'name': '道路积水3',
            'point': [113.919616, 22.492962],
            'lat': '22.498559',
            'lng': '113.922777',
            'offline': 1,
            'light_level': 3,
            'error': 0,
        },
    ],
};


/***/ }),

/***/ "./src/app/data/map-list.ts":
/*!**********************************!*\
  !*** ./src/app/data/map-list.ts ***!
  \**********************************/
/*! exports provided: MAPLIST */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAPLIST", function() { return MAPLIST; });
var MAPLIST = {
    'code': 0,
    'msg': 'ok',
    'val': {
        'light_list': [
            {
                'id': '300001',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                'build_date': '2003\u5e74',
                'lat': '22.496739',
                'lng': '113.920522',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 0,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 50,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300002',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                'build_date': '2003\u5e74',
                'lat': '22.496113',
                'lng': '113.920913',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 0,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496113',
                        'lng': '113.920913',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD002',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496113',
                                'lng': '113.920913',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 10,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496113',
                        'lng': '113.920913',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG002',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496113',
                                'lng': '113.920913',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 20000,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496113',
                        'lng': '113.920913',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD002',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496113',
                                'lng': '113.920913',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 33,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD002',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496113',
                                'lng': '113.920913',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT002',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 4号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496113',
                                'lng': '113.920913',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                ]
            },
            {
                'id': '300003',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                'build_date': '2003\u5e74',
                'lat': '22.49757',
                'lng': '113.920122',
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49757',
                        'lng': '113.920122',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD003',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49757',
                                'lng': '113.920122',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49757',
                        'lng': '113.920122',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG003',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49757',
                        'lng': '113.920122',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD003',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49757',
                                'lng': '113.920122',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 50,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD003',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49757',
                                'lng': '113.920122',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT003',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 21-1号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49757',
                                'lng': '113.920122',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                ]
            },
            {
                'id': '300004',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                'build_date': '2003\u5e74',
                'lat': '22.496885',
                'lng': '113.919952',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496885',
                        'lng': '113.919952',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD004',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496885',
                                'lng': '113.919952',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496885',
                        'lng': '113.919952',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG004',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496885',
                                'lng': '113.919952',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496885',
                        'lng': '113.919952',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD004',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496885',
                                'lng': '113.919952',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 50,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD004',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496885',
                                'lng': '113.919952',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT004',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 17号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496885',
                                'lng': '113.919952',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                ]
            },
            {
                'id': '300006',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                'build_date': '2003\u5e74',
                'lat': '22.496393',
                'lng': '113.919781',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 0,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496393',
                        'lng': '113.919781',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD006',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496393',
                        'lng': '113.919781',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG006',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496393',
                        'lng': '113.919781',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD006',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 50,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT006',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496393',
                        'lng': '113.919781',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ006',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 11号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496393',
                                'lng': '113.919781',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300005',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                'build_date': '2003\u5e74',
                'lat': '22.497361',
                'lng': '113.923235',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.497361',
                        'lng': '113.923235',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD005',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.497361',
                                'lng': '113.923235',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.497361',
                        'lng': '113.923235',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG005',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.497361',
                        'lng': '113.923235',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD005',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.497361',
                                'lng': '113.923235',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 33,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD005',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.497361',
                                'lng': '113.923235',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT005',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.497361',
                                'lng': '113.923235',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                ]
            },
            {
                'id': '300007',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 2号',
                'build_date': '2003\u5e74',
                'lat': '22.497632',
                'lng': '113.922642',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300008',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 4号',
                'build_date': '2003\u5e74',
                'lat': '22.497987',
                'lng': '113.921852',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300009',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                'build_date': '2003\u5e74',
                'lat': '22.498279',
                'lng': '113.921151',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498279',
                        'lng': '113.921151',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD009',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498279',
                                'lng': '113.921151',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498279',
                        'lng': '113.921151',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498279',
                        'lng': '113.921151',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD009',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498279',
                                'lng': '113.921151',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 33,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD009',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498279',
                                'lng': '113.921151',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT009',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 10号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498279',
                                'lng': '113.921151',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                ]
            },
            {
                'id': '300010',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                'build_date': '2003\u5e74',
                'lat': '22.49853',
                'lng': '113.920378',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300011',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                'build_date': '2003\u5e74',
                'lat': '22.49557',
                'lng': '113.922229',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49557',
                        'lng': '113.922229',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49557',
                        'lng': '113.922229',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49557',
                        'lng': '113.922229',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 34,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49557',
                        'lng': '113.922229',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 南海大道, 1518号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49557',
                                'lng': '113.922229',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300012',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                'build_date': '2003\u5e74',
                'lat': '22.495863',
                'lng': '113.921515',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495863',
                        'lng': '113.921515',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495863',
                                'lng': '113.921515',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495863',
                        'lng': '113.921515',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495863',
                                'lng': '113.921515',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495863',
                        'lng': '113.921515',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495863',
                                'lng': '113.921515',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495863',
                                'lng': '113.921515',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495863',
                        'lng': '113.921515',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 2号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495863',
                                'lng': '113.921515',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300013',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                'build_date': '2003\u5e74',
                'lat': '22.496388',
                'lng': '113.920419',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496388',
                        'lng': '113.920419',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496388',
                                'lng': '113.920419',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496388',
                        'lng': '113.920419',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496388',
                                'lng': '113.920419',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496388',
                        'lng': '113.920419',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496388',
                                'lng': '113.920419',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 32,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496388',
                                'lng': '113.920419',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                                'build_date': '2003\u5e74',
                                'lat': '22.496388',
                                'lng': '113.920419',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496388',
                        'lng': '113.920419',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300014',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                'build_date': '2003\u5e74',
                'lat': '22.498012',
                'lng': '113.922485',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498012',
                        'lng': '113.922485',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498012',
                        'lng': '113.922485',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498012',
                        'lng': '113.922485',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 33,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496388',
                        'lng': '113.920419',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498012',
                                'lng': '113.922485',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 123,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300016',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                'build_date': '2003\u5e74',
                'lat': '22.498559',
                'lng': '113.922777',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498288',
                        'lng': '113.92262',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498288',
                        'lng': '113.92262',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498288',
                        'lng': '113.92262',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 32,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                        'build_date': '2003\u5e74',
                        'lat': '22.498288',
                        'lng': '113.92262',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ002',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业五路, 30号',
                                'build_date': '2003\u5e74',
                                'lat': '22.498288',
                                'lng': '113.92262',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 155,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300017',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 8号',
                'build_date': '2003\u5e74',
                'lat': '22.49901',
                'lng': '113.923019',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 1,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 1,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ003',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 1,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 112,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300018',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 15号',
                'build_date': '2003\u5e74',
                'lat': '22.496681',
                'lng': '113.919238',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310181',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 15号',
                        'build_date': '2003\u5e74',
                        'lat': '22.496681',
                        'lng': '113.919238',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG001',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300019',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.495395',
                'lng': '113.919166',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300020',
                'name': '灯柱',
                'address': '广东省, 深圳市, 南山区, 工业五路, 14号',
                'build_date': '2003\u5e74',
                'lat': '22.498847',
                'lng': '113.9197',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 1,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310001',
                        'name': '灯',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'LD001',
                                'name': '太阳能智能路灯',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '照度',
                                        'value': 50,
                                        'Unit': 'LUX' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310002',
                        'name': '网关',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'WG001',
                                'name': '华为智能网关',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '流量',
                                        'value': 10,
                                        'Unit': 'kb/s' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                    {
                        'id': '310003',
                        'name': '环境箱',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49853',
                        'lng': '113.920378',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                id: 'WD001',
                                name: '智安纳温度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '深圳市南山区蛇口工业4路智安纳温度传感器WD001温度50摄氏度数据异常',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '温度',
                                        'value': 30,
                                        'Unit': '摄氏度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'SD001',
                                name: '智安纳湿度传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '湿度',
                                        'value': 25,
                                        'Unit': '度' // 单位
                                    },
                                ],
                            },
                            {
                                id: 'QT001',
                                name: '智安纳气体传感器',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 27号',
                                'build_date': '2003\u5e74',
                                'lat': '22.49853',
                                'lng': '113.920378',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'has_child': 0,
                                'parameters': [
                                    {
                                        'name': '臭氧浓度5',
                                        'value': 5,
                                        'Unit': 'ml/立方米' // 单位
                                    },
                                ],
                            }
                        ],
                    },
                    {
                        'id': '310004',
                        'name': '地震探测器',
                        'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                        'build_date': '2003\u5e74',
                        'lat': '22.496739',
                        'lng': '113.920522',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 1,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'DZ001',
                                'name': '智安纳地震传感器',
                                'address': '广东省, 深圳市, 南山区, 工业四路, 6',
                                'build_date': '2003\u5e74',
                                'lat': '22.496739',
                                'lng': '113.920522',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 1,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '震值',
                                        'value': 0,
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    },
                ]
            },
            {
                'id': '300021',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.498472',
                'lng': '113.924184',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300022',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.498046',
                'lng': '113.923978',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300023',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.497328',
                'lng': '113.9236',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300024',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.496493',
                'lng': '113.923178',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300025',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.496193',
                'lng': '113.923016',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300026',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.495542',
                'lng': '113.922558',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300027',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.493697',
                'lng': '113.919801',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300028',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.494891',
                'lng': '113.919432',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300029',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.494365',
                'lng': '113.923448',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.49545',
                        'lng': '113.923915',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300030',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.496811',
                'lng': '113.924669',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
            {
                'id': '300031',
                'name': '井盖',
                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                'build_date': '2003\u5e74',
                'lat': '22.498948',
                'lng': '113.924615',
                'parameters': [],
                'prop_num': 2,
                'is_active': 1,
                'is_online': 0,
                'is_disabled': 1,
                'is_exception': 0,
                'exception_Information': [],
                'has_child': 1,
                'children': [
                    {
                        'id': '310191',
                        'name': '井盖',
                        'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                        'build_date': '2003\u5e74',
                        'lat': '22.495395',
                        'lng': '113.919166',
                        'prop_num': 2,
                        'is_active': 1,
                        'is_online': 0,
                        'is_disabled': 1,
                        'is_exception': 0,
                        'exception_Information': '',
                        'has_child': 1,
                        'children': [
                            {
                                'id': 'JG002',
                                'name': '智安纳防盗井盖',
                                'address': '广东省, 深圳市, 南山区, 沿山路, 9-3号',
                                'build_date': '2003\u5e74',
                                'lat': '22.495395',
                                'lng': '113.919166',
                                'prop_num': 2,
                                'is_active': 1,
                                'is_online': 0,
                                'is_disabled': 1,
                                'is_exception': 0,
                                'exception_Information': '',
                                'parameters': [
                                    {
                                        'name': '状态',
                                        'value': '离线',
                                        'Unit': '' // 单位
                                    },
                                ],
                            },
                        ],
                    }
                ]
            },
        ],
    }
};


/***/ }),

/***/ "./src/app/data/route-tree.ts":
/*!************************************!*\
  !*** ./src/app/data/route-tree.ts ***!
  \************************************/
/*! exports provided: ROUTETREE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTETREE", function() { return ROUTETREE; });
// 路由
var ROUTETREE = [
    {
        id: 1,
        icon: 'fa fa-home nav-icon',
        routeLink: 'homepage',
        routeTitel: '首页',
        isCollapsed: false,
        hasRight: true,
    },
    // {
    //     id: 1,
    //     icon: 'fa fa-home nav-icon',
    //     routeLink: 'dashbord',
    //     routeTitel: '概览',
    //     isCollapsed: false,
    //     hasRight: true,
    // },
    {
        id: 4,
        icon: 'fa  fa-building nav-icon',
        routeLink: 'application',
        routeTitel: '智慧城市',
        isCollapsed: true,
        hasRight: true,
        children: [
            {
                id: 21,
                icon: 'fa fa-bolt nav-icon-s',
                routeLink: 'application/calamity',
                routeTitel: '灾害报警',
            },
            // {
            //     id: 21,
            //     icon: 'fa fa-snowflake-o nav-icon-s',
            //     routeLink: 'application/environment',
            //     routeTitel: '环境监测',
            // },
            {
                id: 21,
                icon: 'fa fa-tint nav-icon-s',
                routeLink: 'application/water',
                routeTitel: '水质监测',
            },
            {
                id: 21,
                // icon: 'fa fa-snowflake-o nav-icon-s',
                icon: 'fa fa-cloud nav-icon-s',
                routeLink: 'application/air',
                routeTitel: '空气质量',
            },
            {
                id: 21,
                icon: 'fa fa-lightbulb-o nav-icon-s',
                routeLink: 'application/light',
                routeTitel: '智慧照明',
            },
            {
                id: 21,
                icon: 'fa fa-life-ring nav-icon-s',
                routeLink: 'application/cover',
                routeTitel: '窨井管理',
            },
            // {
            //     id: 21,
            //     icon: 'fa fa-shield nav-icon-s',
            //     routeLink: 'application/security',
            //     routeTitel: '智慧安防',
            // },
            {
                id: 21,
                icon: 'fa fa-car nav-icon-s',
                routeLink: 'application/traffic',
                routeTitel: '智慧交通',
            },
        ]
    },
    {
        id: 1,
        icon: 'fa fa-desktop nav-icon',
        routeLink: 'monitor',
        routeTitel: '设备监控',
        isCollapsed: false,
        hasRight: true,
    },
    {
        id: 1,
        icon: 'fa fa-map nav-icon',
        routeLink: 'device',
        routeTitel: '设备管理',
        isCollapsed: true,
        hasRight: false,
        children: [
            {
                id: 21,
                icon: 'fa fa-window-restore nav-icon-s',
                routeLink: 'device/devices',
                routeTitel: '设备',
            },
            // {
            //     id: 21,
            //     icon: 'fa fa-map-o nav-icon-s',
            //     routeLink: 'device/survey',
            //     routeTitel: '设备',
            // },
            {
                id: 21,
                icon: 'fa fa-product-hunt nav-icon-s',
                routeLink: 'device/product',
                routeTitel: '产品',
            },
            {
                id: 21,
                icon: 'fa fa-map-marker nav-icon-s',
                routeLink: 'device/position',
                routeTitel: '位置',
            },
        ]
    },
    // {
    //     id: 1,
    //     icon: 'fa fa-cogs nav-icon ',
    //     routeLink: 'rule',
    //     routeTitel: '规则设置',
    //     isCollapsed: true,
    //     hasRight: false,
    //     children: [
    //         {
    //             id: 21,
    //             icon: 'fa fa-bullhorn nav-icon-s',
    //             routeLink: 'rule/alert',
    //             routeTitel: '报警规则设置',
    //         },
    //         {
    //             id: 1,
    //             icon: 'fa fa-sliders nav-icon-s ',
    //             routeLink: 'rule/control',
    //             routeTitel: '控制策略设置',
    //             isCollapsed: false,
    //             hasRight: false,
    //         },
    //     ]
    // },
    // {
    //     id: 1,
    //     icon: 'fa fa-bar-chart nav-icon',
    //     routeLink: 'energy',
    //     routeTitel: '能源管理',
    //     isCollapsed: true,
    //     hasRight: false,
    //     children: [
    //         {
    //             id: 21,
    //             icon: 'fa fa-line-chart nav-icon-s',
    //             routeLink: 'energy/report',
    //             routeTitel: '报表',
    //         },
    //         {
    //             id: 21,
    //             icon: 'fa fa-th-list nav-icon-s',
    //             routeLink: 'energy/survey',
    //             routeTitel: '概览',
    //         },
    //     ]
    // },
    {
        id: 3,
        icon: 'fa fa-wrench nav-icon',
        routeLink: 'user',
        routeTitel: '系统管理',
        isCollapsed: true,
        hasRight: true,
        children: [{
                id: 11,
                icon: 'fa fa-user-o nav-icon-s',
                routeLink: 'user/admin',
                routeTitel: '用户管理',
            }, {
                id: 12,
                icon: 'fa fa-user-secret nav-icon-s',
                routeLink: 'user/right',
                routeTitel: '角色管理',
            }]
    },
];


/***/ }),

/***/ "./src/app/guard/auth-guard.service.ts":
/*!*********************************************!*\
  !*** ./src/app/guard/auth-guard.service.ts ***!
  \*********************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth.service */ "./src/app/guard/auth.service.ts");
/* harmony import */ var ngx_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-cookie */ "./node_modules/ngx-cookie/fesm5/ngx-cookie.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AuthGuard = /** @class */ (function () {
    function AuthGuard(authService, router, _cookieService) {
        this.authService = authService;
        this.router = router;
        this._cookieService = _cookieService;
    }
    AuthGuard.prototype.canActivate = function (route, state) {
        var url = state.url;
        return this.checkLogin(url);
    };
    AuthGuard.prototype.canActivateChild = function (route, state) {
        return this.canActivate(route, state);
    };
    AuthGuard.prototype.canLoad = function (route) {
        var url = "/" + route.path;
        return this.checkLogin(url);
    };
    AuthGuard.prototype.checkLogin = function (url) {
        if (this._cookieService.getObject('currentUser')) {
            // if (sessionStorage.getItem('currentUser')) {
            // logged in so return true
            return true;
        }
        else {
            // not logged in so redirect to login page
            this.router.navigate(['/login']);
            return false;
        }
        // if (this.authService.isLoggedIn) { return true; }
        // // Store the attempted URL for redirecting
        // this.authService.redirectUrl = url;
        // // Create a dummy session id
        // const sessionId = 123456789;
        // // Set our navigation extras object
        // // that contains our global query params and fragment
        // const navigationExtras: NavigationExtras = {
        //     queryParams: { 'session_id': sessionId },
        //     fragment: 'anchor'
        // };
        // // Navigate to the login page with extras
        // // this.router.navigate(['/login'], navigationExtras);
        // this.router.navigate(['/login']);
        // return false;
    };
    AuthGuard = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], ngx_cookie__WEBPACK_IMPORTED_MODULE_3__["CookieService"]])
    ], AuthGuard);
    return AuthGuard;
}());

/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/guard/auth.service.ts":
/*!***************************************!*\
  !*** ./src/app/guard/auth.service.ts ***!
  \***************************************/
/*! exports provided: AuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/ */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var ngx_cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-cookie */ "./node_modules/ngx-cookie/fesm5/ngx-cookie.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _windowserver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../windowserver */ "./src/app/windowserver.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// import { UserLoginService} from '../service/user.login.service';





var AuthService = /** @class */ (function () {
    function AuthService(http, winRef, _cookieService, router) {
        this.http = http;
        this.winRef = winRef;
        this._cookieService = _cookieService;
        this.router = router;
        this.isLoggedIn = false;
        this.HEROES = {
            token: Date(),
            userId: 'lsq1098',
            status: 200,
            username: 'admin',
            password: '123456'
        };
        // set token if saved in local storage
        var currentUser;
        if (this._cookieService.getObject('currentUser')) {
            // currentUser = JSON.parse(this._cookieService.getObject('currentUser'));
            currentUser = this._cookieService.getObject('currentUser');
        }
        this.token = currentUser && currentUser.token;
    }
    AuthService.prototype.login = function (username, password) {
        var _this = this;
        return Object(rxjs___WEBPACK_IMPORTED_MODULE_1__["of"])(this.HEROES).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["delay"])(1000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (val) {
            // console.log(val);
            if (val.status === 200) {
                var token = val.token;
                var userId = val.userId;
                if (token && username === val.username && password === val.password) {
                    _this.token = token;
                    // 设置全局变量
                    // this.winRef.nativeWindow.userId = this.userId;
                    _this._cookieService.putObject('currentUser', { loginName: username, token: token, userId: userId });
                    // localStorage.setItem('token', token);
                    _this.isLoggedIn = true;
                    return true;
                }
                else {
                    _this.isLoggedIn = false;
                    return false;
                }
            }
        }));
    };
    AuthService.prototype.login1 = function (userName, password) {
        var _this = this;
        return this.http.post('/security/login', { 'userName': userName, 'password': password })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            // console.log(res);
            if (res.status === 200) {
                // localStorage.setItem('access_token', res['_body']);
                console.log(res['_body']);
                var token = res['_body'];
                if (token) {
                    _this.token = token;
                    // 设置全局变量
                    // this.winRef.nativeWindow.userId = this.userId;
                    // this._cookieService.putObject('aaaaaa', JSON.stringify({ loginName: userName }));
                    _this._cookieService.putObject('currentUser', JSON.stringify({ loginName: userName, token: token }));
                    localStorage.setItem('token', token);
                    // this._cookieService.putObject('bbbbbb', JSON.stringify({ loginName: userName }));
                    _this.isLoggedIn = true;
                    return true;
                }
                else {
                    _this.isLoggedIn = false;
                    return false;
                }
            }
            else if (res.status === 400) {
                console.log('400');
                return res.json().toString();
            }
            else {
                console.log('500');
            }
        }));
    };
    AuthService.prototype.logout = function () {
        this.isLoggedIn = false;
        this.token = null;
        this._cookieService.remove('currentUser');
        localStorage.removeItem('token');
        this.router.navigate(['/login']);
    };
    AuthService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_http__WEBPACK_IMPORTED_MODULE_3__["Http"],
            _windowserver__WEBPACK_IMPORTED_MODULE_6__["WindowRef"], ngx_cookie__WEBPACK_IMPORTED_MODULE_4__["CookieService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], AuthService);
    return AuthService;
}());

/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: auth.service.ts
@time: 2018 / 7 / 2 17: 18

*/


/***/ }),

/***/ "./src/app/guard/can-deactivate-guard.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/guard/can-deactivate-guard.service.ts ***!
  \*******************************************************/
/*! exports provided: CanDeactivateGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CanDeactivateGuard", function() { return CanDeactivateGuard; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var CanDeactivateGuard = /** @class */ (function () {
    function CanDeactivateGuard() {
    }
    CanDeactivateGuard.prototype.canDeactivate = function (component) {
        return component.canDeactivate ? component.canDeactivate() : true;
    };
    CanDeactivateGuard = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], CanDeactivateGuard);
    return CanDeactivateGuard;
}());

/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/home/airreport/airreport.component.html":
/*!*********************************************************!*\
  !*** ./src/app/home/airreport/airreport.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"air-data-report\">\r\n  <!-- 左侧 -->\r\n  <div class=\"air-left\">\r\n      <div class=\"title\">\r\n        <span>监测点</span>\r\n      </div>\r\n      <!-- 导航栏 -->\r\n      <div class=\"sidebar-inner\">\r\n          <ul class=\"first-menu\">\r\n              <li *ngFor=\"let device of devicelist; let i = index\" class=\"cur-pointer nav-item\" (click)=\"selectPoint(i, device)\" \r\n                [ngClass]=\"{'active': i == deviceIndx}\">\r\n                <span>{{device.description}}</span>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n  </div>\r\n\r\n  <!-- 右侧 -->\r\n  <div class=\"air-right\">\r\n    <!-- 监测点信息 -->\r\n    <div  class=\"point-info\">\r\n\r\n\r\n        <!-- 右侧，下半部-->\r\n        <div class=\"panel-default info-form\">\r\n\r\n            <!-- 右侧，上半部，头部，简短信息 -->\r\n            <div class=\"car-header\" *ngIf=\"currentdevice\">\r\n              <span class=\"car-title\">{{currentdevice.description}}</span>\r\n              <button type=\"button\" class=\"close\" aria-label=\"Close\">\r\n                <!-- <span aria-hidden=\"true\">&times;</span> -->\r\n                <span>\r\n                  <i class=\"fa fa-arrow-circle-o-left fa-lg cur-pointer color-btn-text\" (click)=\"jumpHandle('home/application/air')\"></i>\r\n                </span>\r\n              </button>\r\n              \r\n\r\n            </div>\r\n            <div class=\"extral-margin\" >\r\n              <label class=\" text-label\">设备名称：</label>\r\n              <span class=\" text-label\" *ngIf=\"currentdevice\">{{currentdevice.name}}</span>\r\n            </div>\r\n            <div class=\"extral-margin\">\r\n              <label class=\" text-label\">设备状态：</label>\r\n              <span class=\" text-label\" *ngIf=\"currentdevice\">{{getdevicestatus(currentdevice.offline)}}</span>\r\n            </div>\r\n            <hr>\r\n\r\n            <div class=\"d-inline\">\r\n            \r\n                <div class=\"d-inline-block extral-margin\">\r\n                  <label class=\" text-label\">开始时间：</label>\r\n\r\n                    <div class=\"d-inline-block\">\r\n                      <div class=\"input-group\">\r\n                        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"startDate\" ngbDatepicker\r\n                           #ad=\"ngbDatepicker\">\r\n                        <div class=\"input-group-append\">\r\n                          <button class=\"btn btn-primary \" (click)=\"ad.toggle()\" type=\"button\">\r\n                            <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                          </button>\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!-- <div class=\"d-inline-block\">\r\n                      <label style=\"margin-left: 21px;\">\r\n                        <ngb-timepicker [(ngModel)]=\"startTime\" ></ngb-timepicker>\r\n                      </label>\r\n                    </div> -->\r\n                </div>\r\n\r\n                <div class=\"d-inline-block extral-margin\">\r\n                  <label class=\" text-label\">结束时间：</label>\r\n                \r\n                  <div class=\"d-inline-block\">\r\n                    <div class=\"input-group\">\r\n                      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"endDate\" ngbDatepicker #bd=\"ngbDatepicker\">\r\n                      <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-primary \" (click)=\"bd.toggle()\" type=\"button\">\r\n                          <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                \r\n                    </div>\r\n                \r\n                  </div>\r\n                  <!-- <div class=\"d-inline-block\">\r\n                    <label style=\"margin-left: 21px;\">\r\n                      <ngb-timepicker [(ngModel)]=\"endTime\"></ngb-timepicker>\r\n                    </label>\r\n                  </div> -->\r\n                \r\n                \r\n                </div>\r\n\r\n                <div class=\"d-inline-block extral-margin\">\r\n                    <button class=\"btn btn-bg extral-margin search-btn\" (click)=\"dataSearch()\">搜索</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"btns\">\r\n              <!-- <button class=\"btn btn-bg extral-margin\" (click)=\"dataSearch()\">搜索</button> -->\r\n              <button class=\"btn btn-bg extral-margin\" (click)=\"exportTable()\" [disabled]='historydatalistItems.length ==0'>导出报表</button>\r\n              <button class=\"btn btn-bg\" (click)=\"openGenerateTables()\" [disabled]='historydatalistItems.length ==0'>生成图表</button>\r\n            </div>\r\n            <!--当前设备详细数据展示-->\r\n            <div id=\"exportableTable\">\r\n              <table class=\"table table-hover\">\r\n                <thead class=\"table-header\">\r\n                  <tr>\r\n                    <!-- <th><input type=\"checkbox\" value=\"\"></th> -->\r\n                    <th>采集时间</th>\r\n                    <th>PM2.5</th>\r\n                    <th>PM10</th>\r\n                    <th>TVOC</th>\r\n                    <th>温度</th>\r\n                    <th>湿度</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n              \r\n                  <tr *ngFor=\"let historydate of historydatalistItems\">\r\n                    <td>{{historydate.timestamp}}</td>\r\n                    <td>{{historydate.pm25}}</td>\r\n                    <td>{{historydate.pm10}}</td>\r\n                    <td>{{historydate.tvoc}}</td>\r\n                    <td>{{historydate.temperature}}</td>\r\n                    <td>{{historydate.humidity}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n\r\n          <div *ngIf=\" historydatalistItems.length ==0\">无数据！</div>\r\n          <!-- 分页 开始-->\r\n          <div *ngIf=\" historydatalistItems.length > 0\">\r\n            <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\"\r\n              [ellipses]=\"false\" [boundaryLinks]=\"true\" (pageChange) = \"pageChange()\"></ngb-pagination>\r\n          </div>\r\n\r\n            <!-- 分页 结束 -->\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<!-- modal: 生成图表 -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <span class=\"modal-title\">可视化报表</span>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  \r\n\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"c('Close click')\">关闭</button>\r\n    </div>\r\n  </ng-template>"

/***/ }),

/***/ "./src/app/home/airreport/airreport.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/home/airreport/airreport.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".air-data-report {\n  width: 100%;\n  height: 100%;\n  display: flex; }\n  .air-data-report .air-left {\n    width: 300px;\n    min-height: calc(100vh);\n    background-color: #e9edf1; }\n  .air-data-report .title {\n    padding: 10px 15px;\n    background-color: rgba(153, 153, 153, 0.5);\n    font-size: 20px; }\n  .air-data-report .title-right {\n    padding: 0;\n    font-size: 20px; }\n  .air-data-report .air-right {\n    width: calc(100vw - 350px);\n    height: 100%;\n    position: relative; }\n  .sidebar-inner {\n  background-color: #e9edf1; }\n  .first-menu {\n  padding-left: 0px; }\n  .first-menu .nav-item:hover > .nav-link {\n    color: #b8eefa;\n    background-color: white; }\n  .first-menu .nav-item span {\n    padding: 0 15px; }\n  .info-top {\n  height: 150px;\n  margin: 15px;\n  position: relative; }\n  .info-top .extral-margin {\n    margin-right: 80px; }\n  .info-top .text-label {\n    border: none;\n    padding-left: 0px; }\n  .info-top .backtoair {\n    position: absolute;\n    right: 35px; }\n  .info-top .brief-info {\n    position: absolute;\n    bottom: 20px; }\n  .info-top .form-control {\n    font-size: 14px;\n    height: 37px; }\n  .extral-margin {\n  margin-right: 10px; }\n  .search-btn {\n  height: calc(2.25rem + 2px);\n  margin-bottom: 5px; }\n  .info-form {\n  margin: 15px; }\n  .btns {\n  text-align: right;\n  margin-bottom: 10px; }\n  .modal-header, .modal-footer {\n  padding: 5px 15px; }\n  .dash {\n  position: absolute;\n  top: 0;\n  width: 100%; }\n  .first-menu li {\n  height: 56px;\n  line-height: 56px;\n  border-bottom: 1px solid #ccc; }\n  .first-menu li:hover {\n  background-color: rgba(0, 0, 0, 0.075); }\n  .input-group .form-control {\n  width: 120px; }\n"

/***/ }),

/***/ "./src/app/home/airreport/airreport.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/home/airreport/airreport.component.ts ***!
  \*******************************************************/
/*! exports provided: AirreportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AirreportComponent", function() { return AirreportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../service/airmonitor.service */ "./src/app/service/airmonitor.service.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/FileSaver.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var now = new Date();
var AirreportComponent = /** @class */ (function () {
    function AirreportComponent(modalService, router, airmonitorService, config) {
        this.modalService = modalService;
        this.router = router;
        this.airmonitorService = airmonitorService;
        this.historydatalist = []; // 指定设备的历史数据集合
        this.historydatalistItems = [];
        this.deviceIndx = 0;
        this.page = 1;
        this.startDate = { year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() }; // 开始日期
        this.endDate = { year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() }; // 开始日期
        this.startTime = { hour: 0, minute: 0, second: 0 };
        this.endTime = { hour: 23, minute: 59, second: 59 };
        this.seconds = true;
        this.fields = [
            { id: 1, name: 'pm25', type: 'PM2.5' },
            { id: 2, name: 'pm10', type: 'PM10' },
            { id: 3, name: 'tvoc', type: 'TVOC' },
            { id: 3, name: 'temperature', type: '温度' },
            { id: 3, name: 'humidity', type: '湿度' },
        ];
        this.aggs = [
            { id: 1, name: 'avg', type: '平均值' },
            { id: 2, name: 'max', type: '最大值' },
            { id: 3, name: 'min', type: '最小值' },
        ];
        this.intervals = [
            { id: 1, name: 'm', type: '分钟' },
            { id: 2, name: 'h', type: '小时' },
            { id: 3, name: 'd', type: '天' },
        ];
        this.dashtrue = false; // 可视化图表
        // 获取坐标范围
        this.NorthEast = JSON.parse(localStorage.getItem('NE'));
        this.SouthWest = JSON.parse(localStorage.getItem('SW'));
        config.spinners = false; // 时间控制
    }
    AirreportComponent.prototype.ngOnInit = function () {
        this.getDevices();
    };
    // 根据当前坐标范围，获取所有在内的设备
    AirreportComponent.prototype.getDevices = function () {
        var that = this;
        this.airmonitorService.getAirDevice(this.NorthEast, this.SouthWest).subscribe({
            next: function (val) {
                that.devicelist = val;
                that.currentdevice = val[0];
            },
            complete: function () {
                that.getHistoryData();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 点击左侧监测点
    AirreportComponent.prototype.selectPoint = function (index, device) {
        this.currentdevice = device;
        this.deviceIndx = index;
        this.getHistoryData();
    };
    // 获取指定设备的历史数据记录
    AirreportComponent.prototype.getHistoryData = function () {
        var that = this;
        var fromdate1 = '2018-01-01T00:00';
        var todate1 = '2018-12-30T23:59';
        var smonth = this.startDate.month.toString().length > 1 ? this.startDate.month.toString() : "0" + this.startDate.month.toString();
        var sday = this.startDate.day.toString().length > 1 ? this.startDate.day.toString() : "0" + this.startDate.day.toString();
        var shour = this.startTime.hour.toString().length > 1 ? this.startTime.hour.toString() : "0" + this.startTime.hour.toString();
        var sminute = this.startTime.minute.toString().length > 1 ? this.startTime.minute.toString() : "0" + this.startTime.minute.toString();
        var emonth = this.endDate.month.toString().length > 1 ? this.endDate.month.toString() : "0" + this.endDate.month.toString();
        var eday = this.endDate.day.toString().length > 1 ? this.endDate.day.toString() : "0" + this.endDate.day.toString();
        var ehour = this.endTime.hour.toString().length > 1 ? this.endTime.hour.toString() : "0" + this.endTime.hour.toString();
        var eminute = this.endTime.minute.toString().length > 1 ? this.endTime.minute.toString() : "0" + this.endTime.minute.toString();
        var fromdate = this.fromdate =
            this.startDate.year + "-" + smonth + "-" + sday + "T" + shour + ":" + sminute;
        var todate = this.todate = this.endDate.year + "-" + emonth + "-" + eday + "T" + ehour + ":" + eminute;
        var page = this.page;
        var pageSize = 10;
        this.airmonitorService.getHistoryData(this.currentdevice.id, fromdate, todate, page, pageSize).subscribe({
            next: function (val) {
                that.historydatalist = val;
                that.historydatalistItems = val.items;
                that.total = val.total;
                // console.log(that.historydatalist);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 分页获取数据
    AirreportComponent.prototype.pageChange = function () {
        this.getHistoryData();
    };
    // 搜索
    AirreportComponent.prototype.dataSearch = function () {
        this.getHistoryData();
    };
    // 本地存储数据
    AirreportComponent.prototype.getStatistics = function () {
        // id: number, field: string, agg: string, from: string, to: string, interval: string
        var that = this;
        var id = this.currentdevice.id;
        var field = this.fields[0].name;
        var agg = this.aggs[0].name;
        var fromdate = this.fromdate;
        var todate = this.todate;
        var interval = this.intervals[0].name;
        localStorage.setItem('dash_data', JSON.stringify({ id: id, agg: agg, fromdate: fromdate, todate: todate, interval: interval }));
    };
    // 路由跳转
    AirreportComponent.prototype.jumpHandle = function (url) {
        this.router.navigate([url]);
    };
    // 获取当前设备的离线状态
    AirreportComponent.prototype.getdevicestatus = function (val) {
        if (val.offline) {
            return '离线';
        }
        else {
            return '在线';
        }
    };
    // 导出表格
    AirreportComponent.prototype.exportTable = function () {
        var blob = new Blob([document.getElementById('exportableTable').innerHTML], {
            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'
        });
        Object(file_saver__WEBPACK_IMPORTED_MODULE_4__["saveAs"])(blob, 'test.xls');
    };
    // 生成图表
    AirreportComponent.prototype.openGenerateTables = function () {
        var that = this;
        this.dashtrue = true;
        this.getStatistics();
        this.jumpHandle('home/dashbord');
    };
    AirreportComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    AirreportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-airreport',
            template: __webpack_require__(/*! ./airreport.component.html */ "./src/app/home/airreport/airreport.component.html"),
            styles: [__webpack_require__(/*! ./airreport.component.scss */ "./src/app/home/airreport/airreport.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_3__["AirmonitorService"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbTimepickerConfig"]])
    ], AirreportComponent);
    return AirreportComponent;
}());



/***/ }),

/***/ "./src/app/home/airreport/airreport.routes.ts":
/*!****************************************************!*\
  !*** ./src/app/home/airreport/airreport.routes.ts ***!
  \****************************************************/
/*! exports provided: AirreportRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AirreportRoutes", function() { return AirreportRoutes; });
/* harmony import */ var _airreport_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./airreport.component */ "./src/app/home/airreport/airreport.component.ts");

var AirreportRoutes = [
    {
        path: 'airreport',
        component: _airreport_component__WEBPACK_IMPORTED_MODULE_0__["AirreportComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/application/air/air.component.html":
/*!*********************************************************!*\
  !*** ./src/app/home/application/air/air.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n  <!-- 选择区域 -->\r\n  <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n    <!-- 城市列表 -->\r\n    <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n            <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n            <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n            <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n        </span>\r\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n            <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n                <dl *ngFor=\"let item of map_model.cityList\">\r\n                    <dt>{{item.name}}</dt>\r\n                    <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                        <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n                    </dd>\r\n                </dl>\r\n            </div>\r\n    \r\n        </div>\r\n    \r\n    </div>\r\n    \r\n    <!-- 区域列表 -->\r\n    <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n            <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n            <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n    \r\n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n            <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n                <ul class=\"arealist\" data-type=\"area\">\r\n                    <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                        <em>不限</em>\r\n                    </li> -->\r\n                    <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                        (click)=\"selecteblock(node)\">\r\n                        <em>{{node.name}}</em>\r\n                    </li>\r\n    \r\n                </ul>\r\n                <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n                    <ul class=\"blocklist\" data-type=\"block\">\r\n                        <!-- <li data-val=\"0\">不限</li> -->\r\n                        <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n    \r\n                    </ul>\r\n                </div>\r\n    \r\n    \r\n            </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n    </div>\r\n      <select name=\"profile\" [(ngModel)]=\"indexofHtml\" (change)=\"onIndexChange()\"\r\n        class=\"form-control d-inline-block sel-area-block select-item\"\r\n        [ngClass]=\"{'first': indexofHtml.name=='PM2.5', 'second': true, 'third': false}\">\r\n            <option *ngFor=\"let index of allIndexs\" [ngValue]=\"index\" >\r\n                {{ index.name }}\r\n            </option>\r\n       </select>\r\n  </div>\r\n\r\n  <div class=\"data-monitor\">\r\n      <button class=\"btn btn-bg\" (click)=\"jumpHandle()\">监测大数据</button>\r\n  </div>\r\n  <!-- <div class=\"legend\">\r\n      <ul>\r\n        <li class=\"color-level-1\">优</li>\r\n        <li class=\"color-level-2\">良</li>\r\n        <li class=\"color-level-3\">轻度污染</li>\r\n        <li class=\"color-level-4\">污染</li>\r\n        <li class=\"color-level-5\">严重污染</li>\r\n      </ul>\r\n  </div> -->\r\n\r\n  <!-- 地图 -->\r\n  <div #map6 id=\"map_container6 \" class=\"map_container no-fulls-map\"></div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/home/application/air/air.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/home/application/air/air.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_warp {\n  position: relative; }\n\n.map_container {\n  width: 100%; }\n\n.select-item {\n  padding: 5px 15px;\n  text-align: center; }\n\n.data-monitor {\n  position: absolute;\n  top: 15px;\n  right: 70px;\n  z-index: 3000; }\n\n.legend {\n  position: absolute;\n  bottom: 0;\n  left: 20px;\n  z-index: 3000; }\n\n.legend ul {\n    padding: 0; }\n\n.legend ul li {\n      margin: 0;\n      padding: 5px 10px;\n      text-align: center;\n      color: white;\n      box-sizing: border-box;\n      border-radius: 0px;\n      border: 1px solid #666666; }\n\n.color-level-1 {\n  background-color: #86ab61; }\n\n.color-level-2 {\n  background-color: #4eb4cf; }\n\n.color-level-3 {\n  background-color: #eda636; }\n\n.color-level-4 {\n  background-color: #d84e4a; }\n\n.color-level-5 {\n  background-color: #10110e; }\n"

/***/ }),

/***/ "./src/app/home/application/air/air.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/home/application/air/air.component.ts ***!
  \*******************************************************/
/*! exports provided: AirComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AirComponent", function() { return AirComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../service/airmonitor.service */ "./src/app/service/airmonitor.service.ts");
/* harmony import */ var _service_circle_overlay_air_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../service/circle-overlay-air.service */ "./src/app/service/circle-overlay-air.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AirComponent = /** @class */ (function () {
    function AirComponent(monitorService, airmonitorService, router) {
        this.monitorService = monitorService;
        this.airmonitorService = airmonitorService;
        this.router = router;
        /*
      model:object
      airdevicelist: array // 空气检测设备列表
      */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
      */
        this.map_model = {}; // 存储数据
        this.visible = true; // 控制可视区域
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.allIndexs = [
            {
                id: '',
                name: 'PM2.5'
            },
            {
                id: '',
                name: 'PM10'
            },
            {
                id: '',
                name: 'TVOC'
            },
            {
                id: '',
                name: '温度'
            },
            {
                id: '',
                name: '湿度'
            },
        ];
        this.indexofHtml = this.allIndexs[0];
        this.currentAirIndex = 'PM2.5';
        this.model.airdevicelist = []; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    AirComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
    };
    // 百度地图API功能
    AirComponent.prototype.addBeiduMap = function () {
        var _this = this;
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
            minZoom: 11,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.950723, 22.558888); // 坐标可以通过百度地图坐标拾取器获取
        map.centerAndZoom(point, 15); // 设置中心和地图显示级别
        // map.setMapStyle({ style: 'googlelite' });
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.getAirdevices(); // 获取地图上的点
        this.timer = setInterval(function () {
            _this.getAirdevices(); // 获取地图上的点
        }, 5000);
        map.enableScrollWheelZoom(true); // 启动滚轮放大缩小，默认禁用
        // const marker = new BMap.Marker(point);  // 创建标注
        // map.addOverlay(marker);               // 将标注添加到地图中
        this.dragendOff(map);
        this.zoomendOff(map);
    };
    // 添加地图内的设备标记
    // 监控-拖动地图事件-显示用户拖动地图后地图中心的经纬度信息。
    AirComponent.prototype.dragendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('dragend', function () {
            that.model.airdevicelist = [];
            baiduMap.clearOverlays();
            that.getAirdevices(); // 获取数据-添加标注
        });
    };
    // 监控-地图缩放事件-地图缩放后的级别。
    AirComponent.prototype.zoomendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('zoomend', function () {
            // if (that.isqueryPoint === true) {
            //   that.isqueryPoint = false;
            // } else {
            that.model.airdevicelist = [];
            baiduMap.clearOverlays();
            that.getAirdevices(); // 添加标注
            // console.log('地图缩放至：' + baiduMap.getZoom() + '级');
            // }
        });
    };
    // 获取设备坐标点
    AirComponent.prototype.getAirdevices = function () {
        var that = this;
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
        localStorage.setItem('NE', JSON.stringify(NorthEast));
        localStorage.setItem('SW', JSON.stringify(SouthWest));
        var compar;
        var value;
        this.airmonitorService.getAirDevice(NorthEast, SouthWest).subscribe({
            next: function (val) {
                // value = val;
                var curIndex = that.currentAirIndex;
                compar = that.comparison(that.model.airdevicelist, val);
                // console.log(compar);
                value = that.judgeChange(compar.a_arr, compar.b_arr, curIndex);
                that.changeMarker(value); // 替换
                that.deleMarker(compar.a_surplus); // 删除
                // that.deleMarker(value); // 删除
                that.addCertainMarker(compar.b_surplus, curIndex); // 添加
                // that.addPoint(value); // 添加
                that.model.airdevicelist = val; // 变为新值
            },
            complete: function () {
                // that.addCertainMarker(value, that.currentAirIndex);
            },
            error: function (error) {
                console.log(error);
                console.log(NorthEast);
                console.log(SouthWest);
            }
        });
    };
    // 交并补
    AirComponent.prototype.comparison = function (a, b) {
        var a_arr = [];
        var b_arr = [];
        var a_surplus = [];
        var b_surplus = [];
        var i = 0;
        for (var j = 0; j < b.length; j++) {
            while (i < a.length && a[i].id < b[j].id) {
                a_surplus.push(a[i]);
                i++;
            }
            if (i >= a.length || a[i].id > b[j].id) {
                b_surplus.push(b[j]);
            }
            else {
                a_arr.push(a[i]);
                i++;
                b_arr.push(b[j]);
            }
        }
        return {
            a_arr: a_arr,
            b_arr: b_arr,
            a_surplus: a_surplus,
            b_surplus: b_surplus,
        };
    };
    // 判断变化值
    AirComponent.prototype.judgeChange = function (a, b, curIndex) {
        var changePoint = [];
        var length = a.length < b.length ? a.length : b.length;
        var value;
        switch (curIndex) {
            case 'PM2.5':
                value = 'pm25';
                break;
            case 'PM10':
                value = 'pm10';
                break;
            case 'TVOC':
                value = 'tvoc';
                break;
            case '温度':
                value = 'temperature';
                break;
            case '湿度':
                value = 'humidity';
                break;
            default: break;
        }
        for (var index = 0; index < length; index++) {
            var a_element = a[index];
            var b_element = b[index];
            if (a_element.error !== b_element.error ||
                a_element.offline !== b_element.offline ||
                a_element[value] !== b_element[value]) {
                changePoint.push(b_element);
            }
        }
        return changePoint;
    };
    // 替换
    AirComponent.prototype.changeMarker = function (airdevice_list) {
        this.deleMarker(airdevice_list); // 删除
        this.addCertainMarker(airdevice_list, this.currentAirIndex); // 添加
    };
    // 删除
    AirComponent.prototype.deleMarker = function (airdevice_list) {
        var makers = this.map.getOverlays();
        for (var ind = 0; ind < airdevice_list.length; ind++) {
            var ele = airdevice_list[ind];
            var point = airdevice_list[ind].point;
            for (var index = 0; index < makers.length; index++) {
                var element = makers[index];
                var lat = element.point && element.point.lat;
                var lng = element.point && element.point.lng;
                if (point.lat === lat && point.lng === lng) {
                    this.map.removeOverlay(makers[index]);
                }
            }
        }
    };
    // 根据当前空气指标加载对应图标
    AirComponent.prototype.addCertainMarker = function (val, index) {
        var _this = this;
        var markers = [];
        var points = [];
        var that = this;
        var length = 60; // 图标大小
        var color; // 背景色
        color = '#4eb4cf'; // 按不同指标对应不同背景色，待确定
        var name = index; // 圆形图标中显示的名字
        var indexvalue; // 圆形图标中显示的值
        var mouseoverColor = '#9bd9dd'; // 划过背景色
        val.map(function (item, i) {
            var point = new BMap.Point(item.point.lng, item.point.lat);
            var myIcon;
            switch (index) {
                case 'PM2.5':
                    indexvalue = item.pm25;
                    break;
                case 'PM10':
                    indexvalue = item.pm10;
                    break;
                case 'TVOC':
                    indexvalue = item.tvoc;
                    break;
                case '温度':
                    indexvalue = item.temperature + ' °C';
                    break;
                case '湿度':
                    indexvalue = item.humidity;
                    break;
                default: break;
            }
            // 添加覆盖物图标
            myIcon = new _service_circle_overlay_air_service__WEBPACK_IMPORTED_MODULE_4__["CircleOverlarAirService"](point, name, indexvalue, length, color, mouseoverColor);
            _this.map.addOverlay(myIcon);
            markers.push(myIcon); // 聚合
            points.push(point);
        });
        // 点击点标注事件
        for (var indexl = 0; indexl < markers.length; indexl++) {
            var marker = markers[indexl];
            var item = val[indexl];
            that.openSideBar(marker, that.map, item, points[indexl]);
        }
    };
    // 地图点注标-点击事件
    AirComponent.prototype.openSideBar = function (marker, baiduMap, airDevice, point) {
        // console.log(airDevice);
        var that = this;
        var opts = {
            width: 350,
            // height: 100,     // 信息窗口高度
            // title: `${val.name} | ${val.id }`, // 信息窗口标题
            // enableMessage: true, // 设置允许信息窗发送短息
            enableAutoPan: true,
        }; // ${airDevice.id} ${airDevice.description}
        var txt = "<p style='font-size: 12px; line-height: 1.8em; border-bottom: 1px solid #ccc; padding-bottom: 10px;'>";
        txt = txt + ("\u8BBE\u5907\u7F16\u53F7 | " + airDevice.name + " </p><p> \u8BBE\u5907\u540D\u79F0\uFF1A" + airDevice.description + "</p>");
        if (airDevice.offline === false) {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A<span style='color: red'>\u662F</span></p>";
        }
        if (airDevice.error === false) {
            txt = txt + "<p> \u662F\u5426\u5F02\u5E38\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u5F02\u5E38\uFF1A<span style='color: red'>\u662F</span></p>";
        }
        var infoWindow = new BMap.InfoWindow(txt, opts);
        marker.V.addEventListener('click', function () {
            baiduMap.openInfoWindow(infoWindow, point); // 开启信息窗口
        });
    };
    // 获取城市列表 --ok
    AirComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
                // that.addBeiduMap(); // 创建地图
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 进入数据监控页面
    AirComponent.prototype.jumpHandle = function () {
        this.router.navigate(["home/airreport"]);
    };
    // 切换空气指标
    AirComponent.prototype.onIndexChange = function () {
        this.currentAirIndex = this.indexofHtml.name;
        this.map.clearOverlays();
        this.addCertainMarker(this.model.airdevicelist, this.currentAirIndex); // 添加
        // this.getAirdevices();
    };
    // 省市区街道-地图级别
    AirComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    AirComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 解析地址- 设置中心和地图显示级别
    AirComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 选择区域
    // 选择城市
    AirComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.node = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    AirComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    AirComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    AirComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 离开城市
    AirComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 选择区域
    AirComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    AirComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    AirComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    AirComponent.prototype.ngOnDestroy = function () {
        window.clearInterval(this.timer);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map6'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], AirComponent.prototype, "map_container", void 0);
    AirComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-air',
            template: __webpack_require__(/*! ./air.component.html */ "./src/app/home/application/air/air.component.html"),
            styles: [__webpack_require__(/*! ./air.component.scss */ "./src/app/home/application/air/air.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"], _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_3__["AirmonitorService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], AirComponent);
    return AirComponent;
}());



/***/ }),

/***/ "./src/app/home/application/application.component.html":
/*!*************************************************************!*\
  !*** ./src/app/home/application/application.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div >\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/home/application/application.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/home/application/application.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/home/application/application.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/home/application/application.component.ts ***!
  \***********************************************************/
/*! exports provided: ApplicationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationComponent", function() { return ApplicationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ApplicationComponent = /** @class */ (function () {
    function ApplicationComponent() {
    }
    ApplicationComponent.prototype.ngOnInit = function () {
    };
    ApplicationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-application',
            template: __webpack_require__(/*! ./application.component.html */ "./src/app/home/application/application.component.html"),
            styles: [__webpack_require__(/*! ./application.component.scss */ "./src/app/home/application/application.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ApplicationComponent);
    return ApplicationComponent;
}());



/***/ }),

/***/ "./src/app/home/application/application.module.ts":
/*!********************************************************!*\
  !*** ./src/app/home/application/application.module.ts ***!
  \********************************************************/
/*! exports provided: ApplicationModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationModule", function() { return ApplicationModule; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _cover_cover_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cover/cover.component */ "./src/app/home/application/cover/cover.component.ts");
/* harmony import */ var _calamity_calamity_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./calamity/calamity.component */ "./src/app/home/application/calamity/calamity.component.ts");
/* harmony import */ var _light_light_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./light/light.component */ "./src/app/home/application/light/light.component.ts");
/* harmony import */ var _security_security_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./security/security.component */ "./src/app/home/application/security/security.component.ts");
/* harmony import */ var _traffic_traffic_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./traffic/traffic.component */ "./src/app/home/application/traffic/traffic.component.ts");
/* harmony import */ var _water_water_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./water/water.component */ "./src/app/home/application/water/water.component.ts");
/* harmony import */ var _air_air_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./air/air.component */ "./src/app/home/application/air/air.component.ts");
/* harmony import */ var _led_led_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./led/led.component */ "./src/app/home/application/led/led.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};














var ApplicationModule = /** @class */ (function () {
    function ApplicationModule() {
    }
    ApplicationModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSlideToggleModule"],
            ],
            declarations: [
                _cover_cover_component__WEBPACK_IMPORTED_MODULE_5__["CoverComponent"], _calamity_calamity_component__WEBPACK_IMPORTED_MODULE_6__["CalamityComponent"],
                _light_light_component__WEBPACK_IMPORTED_MODULE_7__["LightComponent"], _security_security_component__WEBPACK_IMPORTED_MODULE_8__["SecurityComponent"], _traffic_traffic_component__WEBPACK_IMPORTED_MODULE_9__["TrafficComponent"], _water_water_component__WEBPACK_IMPORTED_MODULE_10__["WaterComponent"], _air_air_component__WEBPACK_IMPORTED_MODULE_11__["AirComponent"], _led_led_component__WEBPACK_IMPORTED_MODULE_12__["LedComponent"],
            ],
            schemas: [
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"],
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["NO_ERRORS_SCHEMA"]
            ]
        })
    ], ApplicationModule);
    return ApplicationModule;
}());



/***/ }),

/***/ "./src/app/home/application/application.routes.ts":
/*!********************************************************!*\
  !*** ./src/app/home/application/application.routes.ts ***!
  \********************************************************/
/*! exports provided: ApplicationRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationRoutes", function() { return ApplicationRoutes; });
/* harmony import */ var _cover_cover_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cover/cover.component */ "./src/app/home/application/cover/cover.component.ts");
/* harmony import */ var _calamity_calamity_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calamity/calamity.component */ "./src/app/home/application/calamity/calamity.component.ts");
/* harmony import */ var _application_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./application.component */ "./src/app/home/application/application.component.ts");
/* harmony import */ var _light_light_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./light/light.component */ "./src/app/home/application/light/light.component.ts");
/* harmony import */ var _security_security_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./security/security.component */ "./src/app/home/application/security/security.component.ts");
/* harmony import */ var _traffic_traffic_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traffic/traffic.component */ "./src/app/home/application/traffic/traffic.component.ts");
/* harmony import */ var _water_water_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./water/water.component */ "./src/app/home/application/water/water.component.ts");
/* harmony import */ var _air_air_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./air/air.component */ "./src/app/home/application/air/air.component.ts");
/* harmony import */ var _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../guard/auth-guard.service */ "./src/app/guard/auth-guard.service.ts");



// import { EnvironmentComponent } from './environment/environment.component';





// import { LedComponent } from './led/led.component';

var ApplicationRoutes = [
    {
        path: 'application',
        component: _application_component__WEBPACK_IMPORTED_MODULE_2__["ApplicationComponent"],
        canActivate: [_guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_8__["AuthGuard"]],
        children: [
            {
                path: '',
                // canActivateChild: [AuthGuard],
                children: [
                    { path: '', redirectTo: 'cover', pathMatch: 'full' },
                    { path: 'cover', component: _cover_cover_component__WEBPACK_IMPORTED_MODULE_0__["CoverComponent"] },
                    { path: 'calamity', component: _calamity_calamity_component__WEBPACK_IMPORTED_MODULE_1__["CalamityComponent"] },
                    // { path: 'environment', component: EnvironmentComponent },
                    { path: 'light', component: _light_light_component__WEBPACK_IMPORTED_MODULE_3__["LightComponent"] },
                    { path: 'security', component: _security_security_component__WEBPACK_IMPORTED_MODULE_4__["SecurityComponent"] },
                    { path: 'traffic', component: _traffic_traffic_component__WEBPACK_IMPORTED_MODULE_5__["TrafficComponent"] },
                    { path: 'water', component: _water_water_component__WEBPACK_IMPORTED_MODULE_6__["WaterComponent"] },
                    { path: 'air', component: _air_air_component__WEBPACK_IMPORTED_MODULE_7__["AirComponent"] },
                ]
            }
        ]
    }
];


/***/ }),

/***/ "./src/app/home/application/calamity/calamity.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/home/application/calamity/calamity.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n  <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n      <!-- 城市列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n          <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n          <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n        </span>\r\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <dl *ngFor=\"let item of map_model.cityList\">\r\n              <dt>{{item.name}}</dt>\r\n              <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n      <!-- 区域列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n          <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n    \r\n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <ul class=\"arealist\" data-type=\"area\">\r\n              <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                        <em>不限</em>\r\n                    </li> -->\r\n              <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                (click)=\"selecteblock(node)\">\r\n                <em>{{node.name}}</em>\r\n              </li>\r\n    \r\n            </ul>\r\n            <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n              <ul class=\"blocklist\" data-type=\"block\">\r\n                <!-- <li data-val=\"0\">不限</li> -->\r\n                <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n    \r\n              </ul>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n    \r\n    </div>\r\n  <!-- 右边按钮 -->\r\n  <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n    <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n      <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\">\r\n\r\n    </div> -->\r\n\r\n    <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n\r\n      <img src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n    </div> -->\r\n\r\n  </div>\r\n  <!-- 地图 -->\r\n  <div #map5 id=\"map_container5\" class=\"map_container no-fulls-map\"></div>\r\n</div>"

/***/ }),

/***/ "./src/app/home/application/calamity/calamity.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/home/application/calamity/calamity.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/home/application/calamity/calamity.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/home/application/calamity/calamity.component.ts ***!
  \*****************************************************************/
/*! exports provided: CalamityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalamityComponent", function() { return CalamityComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_video_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/video.service */ "./src/app/service/video.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: calamity.component.ts
@time: 2018 /8 / 9 9: 00

*/



var CalamityComponent = /** @class */ (function () {
    function CalamityComponent(monitorService, videoService) {
        this.monitorService = monitorService;
        this.videoService = videoService;
        /*
        model:object
        light_list: array // 灾害数据
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.model.light_list = []; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    CalamityComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
    };
    // 百度地图API功能
    CalamityComponent.prototype.addBeiduMap = function () {
        var _this = this;
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.924755, 22.49934); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 16); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        map.setMapStyle({ style: 'normal' }); // dark
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.getLights(); // 获取地图上的点
        this.timer = setInterval(function () {
            _this.getLights(); // 获取地图上的点
        }, 10000);
    };
    CalamityComponent.prototype.getLights = function () {
        var that = this;
        this.videoService.getCalamity().subscribe({
            next: function (val) {
                that.model.light_list = val;
                var compar = that.judgeChange(that.model.light_list);
                console.log(compar);
                that.deleMarker(compar.a0); // 删除
                that.changeMarker(compar.b1); // 替换
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 判断变化值
    CalamityComponent.prototype.judgeChange = function (array) {
        var a0 = [];
        var b1 = [];
        for (var index = 0; index < array.length; index++) {
            var element = array[index];
            if (element.error === 1) {
                b1.push(element);
            }
            else {
                a0.push(element);
            }
        }
        return {
            a0: a0,
            b1: b1
        };
    };
    // 替换
    CalamityComponent.prototype.changeMarker = function (light_list) {
        this.deleMarker(light_list); // 删除
        this.addMarker(light_list); // 添加
    };
    // 删除
    CalamityComponent.prototype.deleMarker = function (light_list) {
        var makers = this.map.getOverlays();
        for (var ind = 0; ind < light_list.length; ind++) {
            var ele = light_list[ind];
            var point = light_list[ind].point;
            for (var index = 0; index < makers.length; index++) {
                var element = makers[index];
                var lat = element.point && element.point.lat;
                var lng = element.point && element.point.lng;
                if (point[1] === lat && point[0] === lng) {
                    this.map.removeOverlay(makers[index]);
                }
            }
        }
    };
    CalamityComponent.prototype.addMarker = function (light_list) {
        for (var index = 0; index < light_list.length; index++) {
            var item = light_list[index];
            var point = new BMap.Point(item.point[0], item.point[1]);
            var myIcon = void 0;
            if (item.type === 1 && item.error === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/building.png', new BMap.Size(300, 157));
                myIcon.setAnchor(new BMap.Size(16, 38));
                var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
                this.map.addOverlay(marker2);
            }
            else if (item.type === 2 && item.error === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/landslide.png', new BMap.Size(300, 157));
                myIcon.setAnchor(new BMap.Size(16, 38));
                var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
                this.map.addOverlay(marker2);
            }
            else if (item.type === 3 && item.error === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/odor.png', new BMap.Size(300, 157));
                myIcon.setAnchor(new BMap.Size(16, 38));
                var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
                this.map.addOverlay(marker2);
            }
            else if (item.type === 4 && item.error === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/gas.png', new BMap.Size(300, 157));
                myIcon.setAnchor(new BMap.Size(16, 38));
                var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
                this.map.addOverlay(marker2);
            }
            else if (item.type === 5 && item.error === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/hydrops.png', new BMap.Size(300, 157));
                myIcon.setAnchor(new BMap.Size(16, 38));
                var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
                this.map.addOverlay(marker2);
            }
        }
    };
    // 解析地址- 设置中心和地图显示级别
    CalamityComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 获取数据
    // 获取城市列表 --ok
    CalamityComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    CalamityComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    CalamityComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        return that.node;
    };
    // 进入全屏
    CalamityComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 选择区域
    // 选择城市
    CalamityComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    CalamityComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    CalamityComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    CalamityComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    CalamityComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    CalamityComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    CalamityComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    CalamityComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    CalamityComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    CalamityComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    CalamityComponent.prototype.ngOnDestroy = function () {
        window.clearInterval(this.timer);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map5'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], CalamityComponent.prototype, "map_container", void 0);
    CalamityComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-calamity',
            template: __webpack_require__(/*! ./calamity.component.html */ "./src/app/home/application/calamity/calamity.component.html"),
            styles: [__webpack_require__(/*! ./calamity.component.scss */ "./src/app/home/application/calamity/calamity.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_1__["MonitorService"], _service_video_service__WEBPACK_IMPORTED_MODULE_2__["VideoService"]])
    ], CalamityComponent);
    return CalamityComponent;
}());



/***/ }),

/***/ "./src/app/home/application/cover/cover.component.html":
/*!*************************************************************!*\
  !*** ./src/app/home/application/cover/cover.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n    <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n        <!-- 城市列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n\r\n                <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n                  <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n                  <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n                  <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n                </span>\r\n                <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\" >\r\n                  <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <dl *ngFor=\"let item of map_model.cityList\">\r\n                      <dt>{{item.name}}</dt>\r\n                      <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                        <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n      \r\n                </div>\r\n      \r\n        </div>\r\n      \r\n        <!-- 区域列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n\r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n            <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n            <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n\r\n        <div class=\"arealist-wrap dropdown_panel\"  *ngIf=\"areashow\">\r\n            <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n                <ul class=\"arealist\" data-type=\"area\">\r\n                <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                    <em>不限</em>\r\n                </li> -->\r\n                <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\" (click)=\"selecteblock(node)\">\r\n                    <em>{{node.name}}</em>\r\n                </li>\r\n                \r\n                </ul>\r\n                <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n                <ul class=\"blocklist\"  data-type=\"block\">\r\n                    <!-- <li data-val=\"0\">不限</li> -->\r\n                    <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n                \r\n                </ul>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <!-- <div ngbDropdown class=\"dropup nav-user\">\r\n            <div class=\"cl-blue display-inoneline\" id=\"dropdownBasic2\" ngbDropdownToggle>\r\n              <i class=\"fa fa-user-circle-o nav-icon cl-blue\" aria-hidden=\"true\"></i>\r\n              <span class=\"currentUsername\">{{loginName}}</span>\r\n            </div>\r\n            <ul ngbDropdownMenu aria-labelledby=\"dropdownBasic2\" class=\"user-menus\">\r\n              <li class=\"dropdown-item\">\r\n                <span class=\"dropdown-menu-list\">用户管理</span>\r\n              </li>\r\n              <li class=\"dropdown-item\">\r\n                <a (click)=\"logout()\" class=\"cur-pointer \">\r\n                  <span class=\"dropdown-menu-list\">退出登录</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n    <!-- 井盖消息处理三按键 -->\r\n    <div class=\"cover-issues\">\r\n        <!-- 待处理 -->\r\n        <div class=\"d-inline-block cover-issues-block\" (mouseleave)=\"messageListMouseleave_1()\">\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showUntartedList()\">\r\n                <span class=\"filter\">待处理\r\n                    <span class=\"m-badge m-badge-danger\" >{{model.messageList.length}}</span>\r\n                </span>\r\n            </span>\r\n            <div class=\"messagelist-wrap\" *ngIf=\"showunstartedlist && model.messageList.length > 0\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <ul class=\"messagelist\" data-type=\"area\">\r\n                        <li class=\"messagelist-item\" *ngFor=\"let mess of model.messageList\" (click)=\"findPoint(mess)\">\r\n                            <i class=\"fa fa-dot-circle-o\" aria-hidden=\"true\" style=\"color:#f4516c;padding-right:5px\"></i>\r\n                            <span>{{mess.deviceDescription}}-{{mess.typeName}}-设备ID：{{mess.deviceId}}-{{mess.openTime}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <!-- 处理中 -->\r\n        <div class=\"d-inline-block cover-issues-block\" (mouseleave)=\"messageListMouseleave_2()\">\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showOnprogressList()\">\r\n                <span class=\"filter\">处理中\r\n                    <span class=\"m-badge m-badge-inprocess\" >{{model.messageList1.length}}</span>\r\n                </span>\r\n            </span>\r\n            <div class=\"messagelist-wrap\" *ngIf=\"showonprogresslist && model.messageList1.length > 0\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <ul class=\"messagelist\" data-type=\"area\">\r\n                        <li class=\"messagelist-item\" *ngFor=\"let mess of model.messageList1\" (click)=\"findPoint(mess)\">\r\n                            <!-- <span class=\"m-list-timeline__badge\"></span> -->\r\n                            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"color:#ffb822;padding-right:5px\"></i>\r\n                            <span>{{mess.deviceDescription}}-{{mess.typeName}}-设备ID：{{mess.deviceId}}-{{mess.openTime}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- 已处理 -->\r\n        <div class=\"d-inline-block cover-issues-block\" (mouseleave)=\"messageListMouseleave_3()\">\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showFinishedList()\">\r\n                <span class=\"filter\">已处理\r\n                    <span class=\"m-badge m-badge-fixed\" >{{model.messageList2.length}}</span>\r\n                </span>\r\n            </span>\r\n            <div class=\"messagelist-wrap\" *ngIf=\"showfinishedlist && model.messageList2.length > 0\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <ul class=\"messagelist \" data-type=\"area\">\r\n                        <li class=\"messagelist-item\" *ngFor=\"let mess of model.messageList2\" (click)=\"findPoint(mess)\">\r\n                            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"color:#36a3f7;padding-right:5px\"></i>\r\n                            <span>{{mess.deviceDescription}}-{{mess.typeName}}-设备ID：{{mess.deviceId}}-{{mess.openTime}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> \r\n\r\n\r\n    <!-- 右边按钮 -->\r\n    <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n        <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n            <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\">\r\n        \r\n        </div> -->\r\n\r\n        <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n\r\n            <img src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n        </div> -->\r\n\r\n    </div>\r\n    <!-- 地图 -->\r\n    <div #map3 id=\"map_container3\" class=\"map_container no-fulls-map map-has-footer\"></div>\r\n    \r\n</div>"

/***/ }),

/***/ "./src/app/home/application/cover/cover.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/home/application/cover/cover.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n.map_container {\n  height: 100vh;\n  width: 100%; }\n.map-has-footer {\n  height: calc(100vh); }\n.mes-list {\n  border: 1px solid #ccc;\n  background: #3c3c3c;\n  color: #fff; }\n.mes-list .mes-list-title {\n    padding-left: 40px;\n    padding-top: 20px; }\n.mes-list .mes-list-detail {\n    height: 80%;\n    overflow: auto; }\n.list-item {\n  padding-top: 12px; }\n.cover-tabel {\n  background: #3c3c3c;\n  padding: 0; }\n.block-padding {\n  padding: 0; }\n.table-body {\n  margin-bottom: 0;\n  background: #404a59;\n  padding: 0; }\n.mess-num td {\n  color: #fff; }\n.sel-area-block, .cover-issues-block {\n  border-radius: 5px; }\n.cover-issues {\n  position: absolute;\n  z-index: 3000;\n  top: 15px;\n  right: 170px; }\n.cover-issues .cover-issues-block {\n    width: 85px;\n    cursor: pointer;\n    position: relative;\n    background-color: #fff;\n    border: 1px solid #e3e3e3;\n    line-height: 32px;\n    height: 32px;\n    font-size: 14px;\n    margin-left: 21px;\n    text-align: center; }\n.cover-issues .filter {\n    width: 76px; }\n.cover-issues .messagelist-wrap {\n    position: absolute;\n    padding: 7px 0;\n    margin: 0px;\n    top: 31px;\n    right: 0;\n    z-index: 99;\n    text-align: left; }\n.cover-issues .messagelist-wrap .dropdown_panel_inner {\n      box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n      background-color: #fff;\n      padding: 20px;\n      font-size: 12px;\n      border-radius: 4px; }\n.cover-issues .messagelist-wrap .menu_arrow_left:before {\n      display: block;\n      border-width: 7px;\n      position: absolute;\n      top: -7px;\n      right: 35px;\n      border-style: solid dashed dashed;\n      border-color: transparent transparent #fff transparent;\n      font-size: 0;\n      line-height: 0;\n      content: \"\"; }\n.cover-issues .messagelist {\n    position: relative;\n    padding: 0;\n    margin: 0px;\n    margin-bottom: 0;\n    width: -webkit-max-content;\n    width: -moz-max-content;\n    width: max-content;\n    font-size: 12px;\n    z-index: 99;\n    max-height: 300px;\n    overflow-y: auto;\n    cursor: pointer; }\n.cover-issues .messagelist-item {\n    font-size: 12px;\n    margin: 5px 0;\n    padding: 0 10px; }\n.cover-issues .messagelist .messagelist-item:hover {\n    background: #f6f6f6;\n    color: #f60; }\n.cover-issues .messagelist .messagelist-item:hover .blocklist {\n      display: block; }\n.cover-issues .messagelist .messagelist-item:hover em {\n    color: #f60; }\n.m-badge {\n  font-size: 0.8rem;\n  line-height: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  vertical-align: middle;\n  text-align: center;\n  display: inline-block;\n  padding: 0px 3px;\n  border-radius: .75rem; }\n.m-badge-danger {\n  background: #f4516c;\n  color: #fff; }\n.m-badge-inprocess {\n  background: #ffb822;\n  color: #111; }\n.m-badge-fixed {\n  background: #36a3f7;\n  color: #fff; }\n"

/***/ }),

/***/ "./src/app/home/application/cover/cover.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/home/application/cover/cover.component.ts ***!
  \***********************************************************/
/*! exports provided: CoverComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoverComponent", function() { return CoverComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_mess_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/mess.service */ "./src/app/service/mess.service.ts");
/* harmony import */ var _service_cover_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../service/cover.service */ "./src/app/service/cover.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: cover.componen.ts
@time: 2018 /8 / 9 9: 00

*/




var CoverComponent = /** @class */ (function () {
    function CoverComponent(coverService, monitorService, messService) {
        this.coverService = coverService;
        this.monitorService = monitorService;
        this.messService = messService;
        /*
        model:object
        @issueId: number// 消息
        @infoW: any// 信息框
        @deviceType: number// 井盖类型id
        @messageList: array //  待处理消息
        @messageList1: array // 处理中消息
        @messageList2: array // 已处理消息
      
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
      
      
        */
        this.map_model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        // deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.showunstartedlist = false; // 默认不显示“未处理”的异常消息
        this.showonprogresslist = false; // 默认不显示“处理中”的异常消息
        this.showfinishedlist = false; // 默认不显示“已处理”的异常消息
        this.model.deviceType = 5; // 井盖
        this.model.messageList = []; // 待处理
        this.model.messageList1 = []; // 处理中
        this.model.messageList2 = []; // 已处理
        this.model.coverList = []; // 当前井盖列表
        this.model.userList = []; // 用户列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    CoverComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
        this.getUserList();
    };
    CoverComponent.prototype.getUserList = function () {
        var that = this;
        this.coverService.getAllUser().subscribe({
            next: function (val) {
                that.model.userList = val;
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取指定设备的事件
    CoverComponent.prototype.getDeviceIssues = function (deviceId) {
        var res;
        this.coverService.getDeviceIssues(deviceId, 0).subscribe({
            next: function (val) {
                return res = val;
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取井盖异常消息列表
    CoverComponent.prototype.getMessage = function () {
        var that = this;
        var deviceType = this.model.deviceType;
        this.coverService.getIssues(deviceType, 0).subscribe({
            next: function (val) {
                that.model.messageList = val;
            },
            error: function (error) {
                console.log(error);
            }
        });
        this.coverService.getIssues(deviceType, 1).subscribe({
            next: function (val) {
                that.model.messageList1 = val;
            },
            error: function (error) {
                console.log(error);
            }
        });
        this.coverService.getIssues(deviceType, 2).subscribe({
            next: function (val) {
                that.model.messageList2 = val;
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 百度地图API功能
    CoverComponent.prototype.addBeiduMap = function () {
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        // map.setMapStyle({ style: 'grayscale' });
        map.setMapStyle({ style: 'normal' }); // dark
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.addMarker();
    };
    // 返回地图可视区域，以地理坐标表示
    // getBounds(baiduMap) {
    //   const Bounds = baiduMap.getBounds(); // 返回地图可视区域，以地理坐标表示
    //   this.NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
    //   this.SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
    //   this.zoom = baiduMap.getZoom(); // 地图级别
    // }
    CoverComponent.prototype.addMarker = function () {
        var _this = this;
        this.getCovers(); // 获取井盖
        this.getMessage(); // 获取井盖异常消息列表
        this.timer = setInterval(function () {
            // this.map.clearOverlays();
            _this.getCovers();
            _this.getMessage(); // 获取井盖异常消息列表
        }, 10000);
    };
    // 获取地图内井盖
    CoverComponent.prototype.getCovers = function () {
        var that = this;
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
        var compar;
        var value;
        this.coverService.getCovers(NorthEast, SouthWest).subscribe({
            next: function (val) {
                // value = val;
                compar = that.comparison(that.model.coverList, val);
                value = that.judgeChange(compar.a_arr, compar.b_arr);
                that.changeMarker(value); // 替换
                that.deleMarker(compar.a_surplus); // 删除
                // that.deleMarker(value); // 删除
                that.addPoint(compar.b_surplus); // 添加
                // that.addPoint(value); // 添加
                that.model.coverList = val; // 变为新值
            },
            complete: function () {
                // that.addPoint(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 交并补
    CoverComponent.prototype.comparison = function (a, b) {
        var a_arr = [];
        var b_arr = [];
        var a_surplus = [];
        var b_surplus = [];
        var i = 0;
        for (var j = 0; j < b.length; j++) {
            while (i < a.length && a[i].id < b[j].id) {
                a_surplus.push(a[i]);
                i++;
            }
            if (i >= a.length || a[i].id > b[j].id) {
                b_surplus.push(b[j]);
            }
            else {
                a_arr.push(a[i]);
                i++;
                b_arr.push(b[j]);
            }
        }
        return {
            a_arr: a_arr,
            b_arr: b_arr,
            a_surplus: a_surplus,
            b_surplus: b_surplus,
        };
    };
    // 判断变化值
    CoverComponent.prototype.judgeChange = function (a, b) {
        var changePoint = [];
        var length = a.length < b.length ? a.length : b.length;
        for (var index = 0; index < length; index++) {
            var a_element = a[index];
            var b_element = b[index];
            if (a_element.error !== b_element.error ||
                a_element.offline !== b_element.offline ||
                a_element.alarm !== b_element.alarm ||
                a_element.lowBattery !== b_element.lowBattery) {
                changePoint.push(b_element);
            }
        }
        return changePoint;
    };
    // 替换
    CoverComponent.prototype.changeMarker = function (cover_list) {
        this.deleMarker(cover_list); // 删除
        this.addPoint(cover_list); // 添加
    };
    // 删除
    CoverComponent.prototype.deleMarker = function (cover_list) {
        var makers = this.map.getOverlays();
        for (var ind = 0; ind < cover_list.length; ind++) {
            var point = cover_list[ind].point;
            for (var index = 0; index < makers.length; index++) {
                var element = makers[index];
                var lat = element.point && element.point.lat;
                var lng = element.point && element.point.lng;
                if (point.lat === lat && point.lng === lng) {
                    this.map.removeOverlay(makers[index]);
                }
            }
        }
    };
    // 添加点标注
    CoverComponent.prototype.addPoint = function (val) {
        var _this = this;
        var markers = [];
        var points = [];
        var that = this;
        val.map(function (item, i) {
            var point = new BMap.Point(item.point.lng, item.point.lat);
            // const name = item.name;
            // 添加自定义覆盖物
            var myIcon;
            if (item.alarm && item.alarm === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/cover-lose.png', new BMap.Size(36, 36));
            }
            else if (item.offline === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/cover-offline.png', new BMap.Size(36, 36));
            }
            else if (item.lowBattery === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/cover-lowpower.png', new BMap.Size(36, 36));
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/cover-normal.png', new BMap.Size(36, 36));
            }
            myIcon.setAnchor(new BMap.Size(16, 38));
            var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            _this.map.addOverlay(marker2);
            markers.push(marker2); // 聚合
            points.push(point); // 聚合
        });
        var _loop_1 = function (index) {
            var marker = markers[index];
            this_1.coverService.getDeviceIssues(val[index].id, 0).subscribe({
                next: function (res1) {
                    that.coverService.getDeviceIssues(val[index].id, 1).subscribe({
                        next: function (res2) {
                            that.openSideBar(marker, that.map, val[index], points[index], res1, res2);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                    // that.openSideBar(marker, that.map, val[index], points[index], res);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        };
        var this_1 = this;
        // 点击点标注事件
        for (var index = 0; index < markers.length; index++) {
            _loop_1(index);
        }
    };
    // 标注消息列表中点击的井盖事件
    CoverComponent.prototype.findPoint = function (item) {
        var marker;
        var makers = this.map.getOverlays();
        var point = new BMap.Point(item.point.lng, item.point.lat);
        this.model.issueId = item.id;
        for (var index = 0; index < makers.length; index++) {
            var element = makers[index];
            var lat = element.point && element.point.lat;
            var lng = element.point && element.point.lng;
            if (point.lat === lat && point.lng === lng) {
                marker = element;
                console.log(marker);
                if (marker) {
                    marker.V.click();
                }
            }
        }
        this.map.centerAndZoom(point, 18);
    };
    // 地图点注标-点击事件
    CoverComponent.prototype.openSideBar = function (marker, baiduMap, mess, point, res1, res2) {
        // const res = this.getDeviceIssues(mess.id);
        /*
        res1: 待处理
        res2: 处理中
        */
        var that = this;
        var opts = {
            width: 350,
            // height: 100,     // 信息窗口高度
            // title: `${val.name} | ${val.id }`, // 信息窗口标题
            // enableMessage: true, // 设置允许信息窗发送短息
            enableAutoPan: true,
        };
        this.model.deviceId = mess.id;
        var txt = "<p style='font-size: 12px; line-height: 1.8em; border-bottom: 1px solid #ccc; padding-bottom: 10px;'>";
        txt = txt + ("\u8BBE\u5907\u7F16\u53F7 | " + mess.name + " | " + mess.id + "</p><p> \u8BBE\u5907\u540D\u79F0\uFF1A" + mess.description + "</p>");
        if (mess.lowBattery === false) {
            txt = txt + "<p> \u662F\u5426\u4F4E\u7535\u91CF\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u4F4E\u7535\u91CF\uFF1A<span style='color: #f4516c'>\u662F</span></p>";
        }
        if (mess.alarm === false) {
            txt = txt + "<p> \u662F\u5426\u62A5\u8B66\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u62A5\u8B66\uFF1A<span style='color: #f4516c'>\u662F</span></p>";
        }
        // if (mess.error === false) {
        //   txt = txt + `<p> 是否故障：否</p>`;
        // } else {
        //   txt = txt + `<p> 是否故障：<span style='color: red'>是</span></p>`;
        // }
        if (mess.offline === false) {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A<span style='color: #f4516c'>\u662F</span></p>";
        }
        // if (mess.lowBattery || mess.alarm || mess.error || mess.offline) {
        if (res1 && res1.length > 0) {
            txt = txt + "<hr><p style='color: #f4516c;'>\u5F85\u5904\u7406\u4E8B\u4EF6\uFF1A</p>";
            for (var index = 0; index < res1.length; index++) {
                var element = res1[index];
                txt = txt + ("<p style='color: #f4516c;'>" + element.typeName + "</p>");
            }
            var m = "massage-lsq" + mess.id;
            var p = "massage-post" + mess.id;
            var selId = "select" + mess.id;
            txt = txt + ("\n      <div class=\"form-inline\">\n        <label class=\"control-label\" style='font-size: 14px; margin: 5px'>\n          \u6307\u6D3E\u4EBA\u5458\uFF1A<span style=\"color: red;\">*</span>\n        </label>\n        <select name=\"assignUser\" class=\"cur-pointer form-control\" style='font-size: 14px; margin: 5px'\n          id=\"" + selId + "\"></select></div>"); // onchange="${that.model.curUser}=options[selectedIndex].value"
            txt = txt + ("<label>\u5904\u7406\u4FE1\u606F\uFF1A</label><textarea id=" + m + "  rows=\"3\"  style='width:100%;'></textarea>");
            txt = txt + ("<p><button id=" + p + " class='btn btn-outline-info cur-point' style='font-size: 14px; float: right; margin: 5px'>\n      \u5904\u7406</button></p>");
        }
        if (res2 && res2.length > 0) {
            txt = txt + "<hr><p style='color: #ffb822;'>\u5904\u7406\u4E2D\u4E8B\u4EF6\uFF1A</p>";
            for (var index = 0; index < res2.length; index++) {
                var element = res2[index];
                txt = txt + ("<p style='color: #ffb822;'>" + element.typeName + "</p>");
            }
        }
        var infoWindow = new BMap.InfoWindow(txt, opts);
        marker.addEventListener('click', function () {
            that.model.infoW = baiduMap.openInfoWindow(infoWindow, point); // 开启信息窗口
            var obj = document.getElementById("select" + mess.id);
            if (obj) {
                // obj.append(new Option('请选择处理用户', ''));
                for (var i = 0; i < that.model.userList.length; i++) {
                    console.log('option');
                    obj.append(new Option(that.model.userList[i].userName, that.model.userList[i].userName));
                }
            }
            setTimeout(function () {
                that.deviceAddEventListener(mess);
            }, 0);
        });
    };
    // 点击处理按钮事件
    CoverComponent.prototype.deviceAddEventListener = function (mess) {
        var that = this;
        var m = "massage-lsq" + mess.id;
        var p = "massage-post" + mess.id;
        var selId = "select" + mess.id;
        var message_l = document.getElementById(m);
        var message_p = document.getElementById(p);
        var selectUser = document.getElementById(selId); // 用户下拉列表
        var curUser = '';
        if (selectUser) {
            selectUser.addEventListener('change', function () {
                var selIndex = selectUser['selectedIndex'];
                curUser = that.model.userList[selIndex].id;
            });
        }
        if (message_p) {
            message_p.addEventListener('click', function () {
                if (curUser) {
                    var issueId = that.model.deviceId;
                    console.log('issueId');
                    console.log(issueId);
                    that.setDeviceIssues(issueId, 0, 1, message_l['value'], curUser);
                }
            });
        }
    };
    // 设置指定设备事件状态
    CoverComponent.prototype.setDeviceIssues = function (issueId, orgState, state, comment, curUser) {
        var that = this;
        this.coverService.setDeviceIssues(issueId, orgState, state, comment, curUser).subscribe({
            next: function () {
                if (that.model.infoW) {
                    that.model.infoW.clickclose();
                }
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 修改状态
    CoverComponent.prototype.setIssues = function (issueId, state, comment) {
        var that = this;
        this.coverService.setIssues(issueId, state, comment).subscribe({
            next: function () {
                that.model.infoW.clickclose();
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 解析地址- 设置中心和地图显示级别
    CoverComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 获取数据
    // 获取城市列表 --ok
    CoverComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    CoverComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    CoverComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 进入全屏
    CoverComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 获取对应处理状态的消息
    CoverComponent.prototype.readHandleType = function (mess, messtype) {
        var handletype = mess.handleType;
        if (messtype === handletype) {
            return true;
        }
        else {
            return false;
        }
    };
    // 选择区域
    // 选择城市
    CoverComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    CoverComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    CoverComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    CoverComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    // showDevice() {
    //   this.deviceshow = true;
    // }
    // 选择区域
    CoverComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    CoverComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    CoverComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    // devicelistMouseleave() {
    //   this.deviceshow = false;
    // }
    CoverComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    // 消息相关
    // 显示 未处理 消息
    CoverComponent.prototype.showUntartedList = function () {
        this.showunstartedlist = true;
    };
    // 显示 处理中 消息
    CoverComponent.prototype.showOnprogressList = function () {
        this.showonprogresslist = true;
    };
    // 显示 已处理消息
    CoverComponent.prototype.showFinishedList = function () {
        this.showfinishedlist = true;
    };
    // 离开 未处理
    CoverComponent.prototype.messageListMouseleave_1 = function () {
        this.showunstartedlist = false;
    };
    // 离开 处理中
    CoverComponent.prototype.messageListMouseleave_2 = function () {
        this.showonprogresslist = false;
    };
    // 离开 已处理
    CoverComponent.prototype.messageListMouseleave_3 = function () {
        this.showfinishedlist = false;
    };
    CoverComponent.prototype.ngOnDestroy = function () {
        window.clearInterval(this.timer);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map3'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], CoverComponent.prototype, "map_container", void 0);
    CoverComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-cover',
            template: __webpack_require__(/*! ./cover.component.html */ "./src/app/home/application/cover/cover.component.html"),
            styles: [__webpack_require__(/*! ./cover.component.scss */ "./src/app/home/application/cover/cover.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_cover_service__WEBPACK_IMPORTED_MODULE_3__["CoverService"], _service_monitor_service__WEBPACK_IMPORTED_MODULE_1__["MonitorService"], _service_mess_service__WEBPACK_IMPORTED_MODULE_2__["MessService"]])
    ], CoverComponent);
    return CoverComponent;
}());



/***/ }),

/***/ "./src/app/home/application/led/led.component.html":
/*!*********************************************************!*\
  !*** ./src/app/home/application/led/led.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\n<div class=\"map_warp\">\n  <!-- 选择区域 -->\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\n      <!-- 城市列表 -->\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\n    \n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\n          <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\n          <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\n          <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\n        </span>\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\n          <div class=\"dropdown_panel_inner\">\n            <span class=\"menu_arrow_left\"></span>\n            <dl *ngFor=\"let item of map_model.cityList\">\n              <dt>{{item.name}}</dt>\n              <dd *ngIf=\"item.children && item.children.length > 0\">\n                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\n              </dd>\n            </dl>\n          </div>\n    \n        </div>\n    \n      </div>\n    \n      <!-- 区域列表 -->\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\n    \n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\n          <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\n          <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\n        </span>\n    \n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\n          <div class=\"dropdown_panel_inner\">\n            <span class=\"menu_arrow_left\"></span>\n            <ul class=\"arealist\" data-type=\"area\">\n              <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\n                        <em>不限</em>\n                    </li> -->\n              <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\n                (click)=\"selecteblock(node)\">\n                <em>{{node.name}}</em>\n              </li>\n    \n            </ul>\n            <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\n              <ul class=\"blocklist\" data-type=\"block\">\n                <!-- <li data-val=\"0\">不限</li> -->\n                <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\n    \n              </ul>\n            </div>\n    \n    \n          </div>\n    \n    \n        </div>\n    \n      </div>\n    \n    \n    </div>\n\n  <!-- 右边按钮 -->\n  <div class=\"btn-icon\" *ngIf=\"visible == true\">\n    <div class=\"d-inline-block icon-item cur-pointer\">\n      <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\">\n\n    </div>\n\n    <!-- <div class=\"d-inline-block icon-item cur-pointer\">\n\n      <img src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\n    </div> -->\n\n  </div>\n  <!-- 地图 -->\n  <div #map5 id=\"map_container5\" class=\"map_container no-fulls-map\"></div>\n</div>"

/***/ }),

/***/ "./src/app/home/application/led/led.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/home/application/led/led.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_container {\n  width: 100%; }\n"

/***/ }),

/***/ "./src/app/home/application/led/led.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/home/application/led/led.component.ts ***!
  \*******************************************************/
/*! exports provided: LedComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LedComponent", function() { return LedComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_map_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../data/map-list */ "./src/app/data/map-list.ts");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: led.component.ts
@time: 2018 /9 / 7 14: 22

*/



var LedComponent = /** @class */ (function () {
    function LedComponent(monitorService) {
        this.monitorService = monitorService;
        /*
        model:object
        light_list: array // 灾害数据
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.model.light_list = _data_map_list__WEBPACK_IMPORTED_MODULE_1__["MAPLIST"].val.light_list; // 城市列表
        this.model.deviceList = []; // 设备列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    LedComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
        this.getDevice(); // 获取设备列表
    };
    // 百度地图API功能
    LedComponent.prototype.addBeiduMap = function () {
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.addMarker();
    };
    LedComponent.prototype.addMarker = function () {
        for (var index = 0; index < this.model.light_list.length; index++) {
            var item = this.model.light_list[index];
            var point = new BMap.Point(item.lng, item.lat);
            var myIcon = void 0;
            if (item.is_exception && item.is_exception === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/LED3.png', new BMap.Size(300, 157));
                // console.log('异常');
            }
            else if (item.is_online === 0) {
                myIcon = new BMap.Icon('../../../../assets/imgs/LED2.png', new BMap.Size(300, 157));
                // console.log('掉线');
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/LED1.png', new BMap.Size(300, 157));
                // console.log('正常');
            }
            myIcon.setAnchor(new BMap.Size(16, 38));
            var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            this.map.addOverlay(marker2);
        }
    };
    // 解析地址- 设置中心和地图显示级别
    // 解析地址- 设置中心和地图显示级别
    LedComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 获取数据
    // 获取城市列表 --ok
    LedComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取设备列表 -- ok
    LedComponent.prototype.getDevice = function () {
        var that = this;
        this.monitorService.getDevice().subscribe({
            next: function (val) {
                that.model.deviceList = val;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    LedComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    LedComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 进入全屏
    LedComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 选择区域
    // 选择城市
    LedComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    LedComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    LedComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    LedComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    LedComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    LedComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    LedComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    LedComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    LedComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    LedComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map5'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], LedComponent.prototype, "map_container", void 0);
    LedComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-led',
            template: __webpack_require__(/*! ./led.component.html */ "./src/app/home/application/led/led.component.html"),
            styles: [__webpack_require__(/*! ./led.component.scss */ "./src/app/home/application/led/led.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"]])
    ], LedComponent);
    return LedComponent;
}());



/***/ }),

/***/ "./src/app/home/application/light/light.component.html":
/*!*************************************************************!*\
  !*** ./src/app/home/application/light/light.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n    <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n        <!-- 城市列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n        \r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n                <span class=\"filter\" *ngIf=\"currentCity\">{{currentCity.name}}</span>\r\n                <span class=\"filter\" *ngIf=\"!currentCity\">选择城市</span>\r\n                <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n            </span>\r\n            <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <dl *ngFor=\"let item of cityList\">\r\n                        <dt>{{item.name}}</dt>\r\n                        <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                            <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n        </div>\r\n        \r\n        <!-- 区域列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n        \r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n                <span class=\"filter\" *ngIf=\"!currentArea\">选择区域</span>\r\n                <span class=\"filter\" *ngIf=\"currentArea\">{{currentArea.name}}</span>\r\n            </span>\r\n        \r\n            <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <ul class=\"arealist\" data-type=\"area\">\r\n                        <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                            <em>不限</em>\r\n                        </li>\r\n                        <li class=\"arealist-item\" *ngFor=\"let node of currentChildren\" (mouseover)=\"arealistMouseover(node)\" (click)=\"selecteblock(node)\">\r\n                            <em>{{node.name}}</em>\r\n                        </li>\r\n        \r\n                    </ul>\r\n                    <div class=\"blocklist-wrap\" *ngIf=\"currentBlock\">\r\n                        <ul class=\"blocklist\" data-type=\"block\">\r\n                            <li data-val=\"0\">不限</li>\r\n                            <li *ngFor=\"let block of currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n        \r\n                        </ul>\r\n                    </div>\r\n        \r\n        \r\n                </div>\r\n        \r\n        \r\n            </div>\r\n        \r\n        </div>\r\n    </div>\r\n    \r\n    <!-- 右边按钮 -->\r\n    <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n        <div class=\"d-inline-block icon-item cur-pointer\">\r\n            <img class= \"img-background\" src=\"../../../../assets/imgs/strategy.png\" alt=\"图片\" (click)=\"jumpHandle()\">\r\n    \r\n        </div>\r\n\r\n        <div class=\"d-inline-block icon-item cur-pointer\">\r\n            <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\" (click)=\"devicesControl()\">\r\n        \r\n        </div>\r\n    \r\n        <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n    \r\n            <img  src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n        </div> -->\r\n\r\n\r\n    \r\n    </div>\r\n    <!-- 地图 -->\r\n    <div #map5 id=\"map_container5\" class=\"map_container no-fulls-map\"></div>\r\n\r\n    <!-- 多设备操作 -->\r\n    <div class=\"devices-control\" *ngIf=\"showDevicesControl\">\r\n        <div class=\"device-title\">\r\n            <span>设备控制</span>\r\n            <span class=\"device-close float-right\" (click)=\"closeDevicesControl()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-inline queryDiv\">\r\n                    <!-- <div class=\"form-inline\">\r\n                        <label class=\"control-label\">设备类型：</label>\r\n                        <select class=\"form-control\">\r\n                            <option>太阳能灯</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-inline\">\r\n                        <label class=\"control-label\">设备位置：</label>\r\n                        <select class=\"form-control\">\r\n                            <option>街道</option>\r\n                        </select>\r\n                    </div> -->\r\n                    <div class=\"form-group\">\r\n                        <input id=\"sole-input\" class=\"form-control searchbox-content-common\" [(ngModel)]=\"queryString\" name=\"queryString\" \r\n                        maxlength=\"20\" placeholder=\"检索编号、名称\" (keydown)=\"onKeydown($event)\" >\r\n                    </div>\r\n                    <button  class=\"btn btn-bg\" (click)=\"execQuery()\">搜索</button>\r\n                    <button class=\"btn btn-outline-info extral-margin\" (click)=\"devicesStrategyCtrl()\">批量操作</button>\r\n            </div>\r\n            <!-- <form class=\"lights-form\"> -->\r\n                <table class=\"table table-hover\">\r\n                    <thead class=\"table-header\">\r\n                        <tr>\r\n                            <th><input type=\"checkbox\" [checked]=\"allCheck\" [(ngModel)]=\"allCheck\" (change)=\"allCheckMe()\" ></th>\r\n                            <th>设备编号</th>\r\n                            <th>灯柱编号</th>\r\n                            <th>应用策略</th>\r\n                            <!-- <th>电压(mV)</th>\r\n                            <th>电流(mA)</th> -->\r\n                            <th>设备名称</th>\r\n                            <th>亮度</th>\r\n                            <th>离线</th>\r\n                            <th>故障</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let light of lightListRes; let i = index\">\r\n                            <td><input type=\"checkbox\" (change)=\"addLightstoCtrl()\"\r\n                                 [checked]=\"lightList_check[i].check\" [(ngModel)]=\"lightList_check[i].check\"></td>\r\n                            <td>{{light.name}}</td>\r\n                            <td>{{light.positionNumber}}</td>\r\n                            <td > <span *ngIf=\"light.rule && light.rule.name\">{{light.rule.name}}</span></td>\r\n                            <!-- <td>{{light.volt}}</td>\r\n                            <td>{{light.current}}</td> -->\r\n                            <td>{{light.description}}</td>\r\n                            <td>{{light.level}}</td>\r\n                            <td>\r\n                                <span *ngIf=\"light.offline\">离线</span>\r\n                                <span *ngIf=\"!light.offline\">在线</span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"light.error\">故障</span>\r\n                                <span *ngIf=\"!light.error\">正常</span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            <!-- </form> -->\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 多设备策略分配 -->\r\n    <div *ngIf=\"showDevicesStrategyCtrl\" class=\"lights-strategy-ctrl\">\r\n        <div class=\"device-title\">\r\n            <span>策略分配</span>\r\n            <span class=\"device-close float-right\" (click)=\"closeDevicesStrategyCtrl()\">\r\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </span>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n            <div class=\"str-body-item\">\r\n                <div class=\"body-item\">\r\n                    <span>可选策略：</span>\r\n                    <select name=\"profile\" [(ngModel)]=\"strategyList1\" (change)=\"strategyListsChange1()\"\r\n                        class=\"form-control d-inline-block selece-str\">\r\n                        <option *ngFor=\"let index of strategyLists\" [ngValue]=\"index\">\r\n                            {{ index.name }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-outline-info btn-100\"\r\n                        (click)=\"setStrategyRules()\">下发策略</button>\r\n                </div>\r\n                <mat-error *ngIf=\"StrategyRuleMess1\">\r\n                    <strong class=\"error-mass\">修改成功！</strong>\r\n                </mat-error>\r\n            </div>\r\n        \r\n            <hr>\r\n            <div class=\"str-body-item\">\r\n        \r\n                <div>\r\n                    <p>\r\n                        <span>结束时间：</span>\r\n                        <label style=\"margin-left: 21px;\">\r\n                            <ngb-timepicker [(ngModel)]=\"time1\" (change)=\"changeTime1()\"></ngb-timepicker>\r\n                        </label>\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p><span>亮度调整：</span></p>\r\n                    <p><label>\r\n                            <mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"30\" min=\"0\"\r\n                                max=\"100\" [(ngModel)]=\"lightLevel1\" (change)=\"changeSlider()\"></mat-slider>\r\n                        </label>\r\n                    </p>\r\n                    <div class=\"row control-text\">\r\n                        <div class=\"col-6 text-left\">\r\n                            <span>关</span>\r\n                        </div>\r\n                        <div class=\"col-6 text-right\">\r\n                            <span>100%</span>\r\n                        </div>\r\n        \r\n                    </div>\r\n                    <div>\r\n                        <button type=\"button\" class=\"btn btn-outline-info btn-100\"\r\n                            (click)=\"setLightsContr1()\">临时控制</button>\r\n                    </div>\r\n                    <mat-error *ngIf=\"LightsContrMess1\">\r\n                        <strong class=\"error-mass\">修改成功！</strong>\r\n                    </mat-error>\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n        \r\n        </div>\r\n\r\n        <!-- <div  class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-outline-info\"\r\n                        (click)=\"lightsContr(deviceChild.id)\">确定</button>\r\n                <button type=\"button\" class=\"btn btn-outline-metal\"\r\n                    (click)=\"closeDevicesStrategyCtrl()\">取消</button>\r\n        </div> -->\r\n    </div>\r\n\r\n    <!-- 单灯设备操作 -->\r\n    <div class=\"device-detail\" *ngIf=\"deviceChild\">\r\n        <div class=\"device-title\">\r\n            <span  *ngIf=\"deviceChild\">{{deviceChild.description}}</span>\r\n            <span class=\"device-close float-right\" (click)=\"closeDetail()\">\r\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n            </span>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                    <!-- <div>\r\n                        <p><span>灯杆编号：</span>\r\n                            <span *ngIf=\"deviceChild\">{{deviceChild.positionNumber}}</span>\r\n                        </p>\r\n                    </div> -->\r\n                    <!-- <div>\r\n                        <p><span>策略选择</span></p>\r\n                    </div> -->\r\n                    <div class=\"str-body-item\">\r\n                        <div class=\"body-item\">\r\n                                <span>当前策略：</span>\r\n                                <select name=\"profile\" [(ngModel)]=\"strategyList\"(change)=\"strategyListsChange()\"\r\n                                    class=\"form-control d-inline-block selece-str\">\r\n                                    <option *ngFor=\"let index of strategyLists\" [ngValue]=\"index\">\r\n                                        {{ index.name }}\r\n                                    </option>\r\n                                </select>\r\n                        </div>\r\n                        <div >\r\n                            <button type=\"button\" class=\"btn btn-outline-info btn-100\"\r\n                                (click)=\"setStrategyRule(deviceChild.id)\">下发策略</button>\r\n                        </div>\r\n                        <mat-error *ngIf=\"StrategyRuleMess\">\r\n                            <strong class=\"error-mass\">修改成功！</strong>\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <hr>\r\n                    <!-- <div>\r\n                        <p><span>临时控制</span>\r\n                            <label style=\"margin-left: 21px;\">\r\n                                <mat-slide-toggle (change) = \"changeContr()\"></mat-slide-toggle>\r\n                            </label>\r\n                        </p>\r\n                    </div> -->\r\n                    <div class=\"str-body-item\">\r\n\r\n                        <div>\r\n                            <p>\r\n                                <span>结束时间：</span>\r\n                                <label style=\"margin-left: 21px;\">\r\n                                    <ngb-timepicker [(ngModel)]=\"time\" (change) = \"changeTime()\"></ngb-timepicker>\r\n                                </label>\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p><span>亮度调整：</span></p>\r\n                            <p>\r\n                                <label>\r\n                                    <mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"30\" min=\"0\" \r\n                                    max=\"100\" [(ngModel)]=\"lightLevel\" (change) = \"changeSlider()\"></mat-slider>\r\n                                </label>\r\n                            </p>\r\n                            <div class=\"row control-text\">\r\n                                <div class=\"col-6 text-left\">\r\n                                    <span>关</span>\r\n                                </div>\r\n                                <div class=\"col-6 text-right\">\r\n                                    <span>100%</span>\r\n                                </div>\r\n                        \r\n                        \r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-outline-info btn-100\"\r\n                                    (click)=\"setLightsContr(deviceChild.id)\">临时控制</button>\r\n                            </div>\r\n                            <mat-error *ngIf=\"LightsContrMess\">\r\n                                <strong class=\"error-mass\">修改成功！</strong>\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <!-- <div  class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"lightsContr(deviceChild.id)\">确定</button>\r\n                <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"closeDetail()\">取消</button>\r\n        </div> -->\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/home/application/light/light.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/home/application/light/light.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_container {\n  width: 100%; }\n\n.device-detail {\n  width: 350px;\n  background: #fff;\n  border: 1px solid #ccc;\n  z-index: 4000;\n  position: absolute;\n  right: 50px;\n  top: 0px;\n  padding: 0px 15px 15px 15px; }\n\n.device-close {\n  cursor: pointer;\n  color: #8e8f91; }\n\n.device-title {\n  display: block;\n  padding: 0;\n  margin: 0;\n  height: 40px;\n  line-height: 40px;\n  border-bottom: 1px solid #ccc; }\n\n.devices-control {\n  width: 650px;\n  height: 100%;\n  overflow-y: auto;\n  background: #fff;\n  border: 1px solid #ccc;\n  z-index: 5000;\n  position: absolute;\n  right: 50px;\n  top: 0px;\n  padding: 0px 15px; }\n\n.devices-control .queryDiv {\n    margin-bottom: 5px;\n    position: relative; }\n\n.devices-control .queryDiv .extral-margin {\n      margin-left: 5px;\n      position: absolute;\n      right: 0px; }\n\n.devices-control .form-control {\n    font-size: 14px;\n    width: 90px;\n    height: calc(1.8rem + 2px);\n    margin-right: 5px; }\n\n.devices-control .btn-a, .devices-control .control-label {\n    height: calc(1.8rem + 2px); }\n\n.lights-form {\n  margin-top: 10px;\n  margin-bottom: 60px; }\n\n.lights-strategy-ctrl {\n  width: 350px;\n  background: #fff;\n  border: 1px solid #ccc;\n  z-index: 5000;\n  position: absolute;\n  right: 700px;\n  top: 0px;\n  padding: 0px 15px 15px 15px; }\n\nmat-slider {\n  width: 250px; }\n\n.control-text {\n  position: relative;\n  top: -39px; }\n\n.error-mass {\n  color: red; }\n\n.selece-str {\n  width: 150px;\n  margin-left: 20px; }\n\n.btn-100 {\n  width: 100%; }\n\n.str-body-item {\n  padding-top: 20px; }\n\n.body-item {\n  padding-bottom: 15px; }\n\n.img-background {\n  background: #fff;\n  border-radius: 5px;\n  padding: 2px; }\n"

/***/ }),

/***/ "./src/app/home/application/light/light.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/home/application/light/light.component.ts ***!
  \***********************************************************/
/*! exports provided: LightComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LightComponent", function() { return LightComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_light_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../service/light.service */ "./src/app/service/light.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: light.component.ts
@time: 2018 /8 / 9 9: 00

*/





var LightComponent = /** @class */ (function () {
    function LightComponent(monitorService, lightService, router, config) {
        this.monitorService = monitorService;
        this.lightService = lightService;
        this.router = router;
        this.model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.type = 0; // 设备类型
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.lightList = []; // 当前数据
        this.lightListRes = []; // 查询结果
        this.lightList1 = [];
        this.strategyLists = []; // 策略列表
        this.time = { hour: 13, minute: 30 }; // 路灯控制时间
        this.contrL = false; // 临时控制
        this.lightLevel = 0;
        this.StrategyRuleMess = false; // 提示成功
        this.LightsContrMess = false; // 提示成功
        // 多设备控制
        this.showDevicesControl = false; // 多灯控制默认不显示
        this.showDevicesStrategyCtrl = false; // 多灯分配策略 默认不显示
        this.time1 = { hour: 13, minute: 30 }; // 路灯控制时间
        this.lightLevel1 = 0;
        this.prompt1 = false; // 提示成功
        this.StrategyRuleMess1 = false; // 提示成功
        this.LightsContrMess1 = false; // 提示成功
        this.selectedLightList = []; // 选中的设备
        this.lightList_check = []; // 当前数据
        this.allCheck = false;
        config.spinners = false; // 时间控制
    }
    LightComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
        this.getStrategy(); // 获取策略表
    };
    // searchStringMe() {
    //   console.log(this.queryString);
    // }
    LightComponent.prototype.execQuery = function () {
        var _this = this;
        var str_name = '';
        var str_descr = '';
        var str_posi = '';
        var queryString = this.queryString;
        var that = this;
        this.lightListRes = [];
        this.lightList.filter(function (item, i) {
            str_name = item.name;
            str_descr = item.description;
            str_posi = item.positionNumber;
            if (str_name.includes(queryString) || str_descr.includes(queryString) || str_posi.includes(queryString)) {
                _this.lightListRes.push(item);
            }
        });
    };
    // 监控-点击地图事件
    LightComponent.prototype.mapClickOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('click', function (e) {
            that.closeDevicesControl();
            that.deviceChild = null;
            this.contrL = false;
        });
        baiduMap.addEventListener('dragend', function () {
            that.closeDevicesControl();
        });
        baiduMap.addEventListener('zoomend', function () {
            that.closeDevicesControl();
        });
    };
    // 百度地图API功能
    LightComponent.prototype.addBeiduMap = function () {
        var _this = this;
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        map.setMapStyle({ style: 'dark' });
        // map.setMapStyle({ style: 'midnight' });
        // map.setMapStyle({ style: 'grayscale' });
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.getLights(); // 获取地图上的点
        this.timer = setInterval(function () {
            _this.getLights(); // 获取地图上的点
        }, 5000);
        this.mapClickOff(map); // 地图点击信息框隐藏
    };
    // 清除覆盖物
    LightComponent.prototype.remove_overlay = function (baiduMap) {
        baiduMap.clearOverlays();
    };
    // 返回地图可视区域，以地理坐标表示
    LightComponent.prototype.getBounds = function (baiduMap) {
        var Bounds = baiduMap.getBounds(); // 返回地图可视区域，以地理坐标表示
        this.NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
        this.SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
        this.zoom = baiduMap.getZoom(); // 地图级别
    };
    LightComponent.prototype.getLights = function () {
        var that = this;
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
        var value;
        var compar;
        this.lightService.getLights(NorthEast, SouthWest).subscribe({
            next: function (val) {
                compar = that.comparison(that.lightList, val);
                value = that.judgeChange(compar.a_arr, compar.b_arr);
                // console.log('value');
                // console.log(value);
                that.changeMarker(value); // 替换
                that.deleMarker(compar.a_surplus); // 删除
                // that.deleMarker(value); // 删除
                that.addMarker(compar.b_surplus); // 添加
                // that.addMarker(value); // 添加
                that.lightList = val; // 变为新值
                that.lightListRes = that.comparison1(that.lightList, that.lightListRes);
                that.lightList.map(function (item, i) {
                    that.lightList_check.push({ check: false });
                });
            },
            complete: function () {
                // that.changeMarker(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 交并补
    LightComponent.prototype.comparison1 = function (a, b) {
        var a_arr = [];
        var i = 0;
        for (var j = 0; j < b.length; j++) {
            while (i < a.length && a[i].id < b[j].id) {
                i++;
            }
            if (a[i].id === b[j].id) {
                a_arr.push(a[i]);
                i++;
            }
        }
        return a_arr;
    };
    // 交并补
    LightComponent.prototype.comparison = function (a, b) {
        var a_arr = [];
        var b_arr = [];
        var a_surplus = [];
        var b_surplus = [];
        var i = 0;
        for (var j = 0; j < b.length; j++) {
            while (i < a.length && a[i].id < b[j].id) {
                a_surplus.push(a[i]);
                i++;
            }
            if (i >= a.length || a[i].id > b[j].id) {
                b_surplus.push(b[j]);
            }
            else {
                a_arr.push(a[i]);
                i++;
                b_arr.push(b[j]);
            }
        }
        return {
            a_arr: a_arr,
            b_arr: b_arr,
            a_surplus: a_surplus,
            b_surplus: b_surplus,
        };
    };
    // 判断变化值
    LightComponent.prototype.judgeChange = function (a, b) {
        var changePoint = [];
        var length = a.length < b.length ? a.length : b.length;
        for (var index = 0; index < length; index++) {
            var a_element = a[index];
            var b_element = b[index];
            var a_level = 0;
            var b_level = 0;
            if (a_element.level === 0) {
                a_level = 0;
            }
            else if (a_element.level < 30) {
                a_level = 1;
            }
            else if (a_element.level < 70) {
                a_level = 2;
            }
            else {
                a_level = 3;
            }
            if (b_element.level === 0) {
                b_level = 0;
            }
            else if (b_element.level < 30) {
                b_level = 1;
            }
            else if (b_element.level < 70) {
                b_level = 2;
            }
            else {
                b_level = 3;
            }
            if (a_element.error !== b_element.error ||
                a_element.offline !== b_element.offline ||
                a_element.current !== b_element.current ||
                a_element.volt !== b_element.volt ||
                a_element.level !== b_element.level ||
                a_level !== b_level) {
                changePoint.push(b_element);
            }
        }
        return changePoint;
    };
    // 替换
    LightComponent.prototype.changeMarker = function (light_list) {
        this.deleMarker(light_list); // 删除
        this.addMarker(light_list); // 添加
    };
    // 删除
    LightComponent.prototype.deleMarker = function (light_list) {
        var makers = this.map.getOverlays();
        for (var ind = 0; ind < light_list.length; ind++) {
            var ele = light_list[ind];
            var point = light_list[ind].point;
            for (var index = 0; index < makers.length; index++) {
                var element = makers[index];
                var lat = element.point && element.point.lat;
                var lng = element.point && element.point.lng;
                if (point.lat === lat && point.lng === lng) {
                    this.map.removeOverlay(makers[index]);
                }
            }
        }
    };
    // 地图上描点
    LightComponent.prototype.addMarker = function (light_list) {
        var markers = [];
        var points = [];
        for (var index = 0; index < light_list.length; index++) {
            var item = light_list[index];
            var point = new BMap.Point(item.point.lng, item.point.lat);
            var myIcon = void 0;
            if (item.offline === true || item.error === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-breakdown.png', new BMap.Size(36, 36));
            }
            else if (item.level === 0) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-normal.png', new BMap.Size(36, 36));
            }
            else if (item.level < 30) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-up-1.png', new BMap.Size(36, 36));
            }
            else if (item.level < 70) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-up-2.png', new BMap.Size(36, 36));
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-up-3.png', new BMap.Size(36, 36));
            }
            // myIcon.setAnchor(new BMap.Size(16, 38));
            var marker = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            this.map.addOverlay(marker);
            markers.push(marker); // 聚合
            this.markers = markers;
            points.push(point); // 聚合
        }
        // 点击点标注事件 - 弹出信息框
        for (var index = 0; index < markers.length; index++) {
            var marker = markers[index];
            this.openSideBar(marker, this.map, light_list[index], points[index]);
        }
    };
    // 地图点注标-点击事件
    LightComponent.prototype.openSideBar = function (marker, baiduMap, val, point) {
        // console.log(val);
        var that = this;
        // <p style=’font - size: 12px; lineheight: 1.8em; ’> ${ val.name } </p>
        var opts = {
            width: 300,
            // height: 100,     // 信息窗口高度
            // title: `${val.name} | ${val.id }`, // 信息窗口标题
            // enableMessage: true, // 设置允许信息窗发送短息
            enableAutoPan: true,
        };
        var txt = "\n    <p style='font-size: 12px; line-height: 1.8em; border-bottom: 1px solid #ccc; padding-bottom: 10px;'>" + val.description + " </p>\n\n    ";
        txt = txt +
            ("<p>\u706F\u6746\u7F16\u53F7\uFF1A " + val.positionNumber + "</p>\n     ");
        if (val.offline === true) {
            // 离线或异常
            txt = txt + "   <p >\u662F\u5426\u5728\u7EBF\uFF1A \u5426</p>";
        }
        else {
            txt = txt + "   <p >\u662F\u5426\u5728\u7EBF\uFF1A \u662F</p>";
        }
        if (val.error === true) {
            // 离线或异常
            txt = txt + "<p >\u662F\u5426\u6545\u969C\uFF1A \u662F</p>";
        }
        else {
            txt = txt + "<p >\u662F\u5426\u6545\u969C\uFF1A \u5426</p>";
        }
        if (val.rule && val.rule.name) {
            txt = txt + ("<p >\u5E94\u7528\u7B56\u7565\uFF1A " + val.rule.name + "</p>");
        }
        else {
            txt = txt + "<p >\u5E94\u7528\u7B56\u7565\uFF1A\u65E0</p>";
        }
        txt = txt + ("<p >\u4EAE\u5EA6\u7EA7\u522B\uFF1A " + val.level + "%</p>");
        txt = txt + ("<p >\u7535\u6D41\u5F3A\u5EA6\uFF1A " + val.current + "\u6BEB\u5B89(mA)</p>");
        txt = txt + ("<p >\u7535\u538B\u5927\u5C0F\uFF1A " + val.volt + "\u6BEB\u4F0F(mv)</p>");
        txt = txt + ("<button class='btn btn-outline-info cur-point' style='font-size: 14px; float: right; margin: 5px;'\n      id='" + val.id + "'>\u63A7\u5236</button>");
        var infoWindow = new BMap.InfoWindow(txt, opts);
        marker.addEventListener('click', function () {
            that.closeDevicesControl();
            that.device = val;
            baiduMap.openInfoWindow(infoWindow, point); // 开启信息窗口
            setTimeout(function () {
                that.deviceAddEventListener();
            }, 0);
        });
    };
    // 点击控制按钮
    LightComponent.prototype.deviceAddEventListener = function () {
        var that = this;
        var device = $("#" + this.device.id);
        device.on('click', function () {
            that.contrL = false;
            that.StrategyRuleMess = false;
            that.LightsContrMess = false;
            that.deviceChild = that.device;
            that.lightLevel = that.device.level;
            if (that.device.ruleId) {
                that.strategyLists.map(function (item, index) {
                    if (item.id === that.device.ruleId) {
                        that.strategyList = that.strategyLists[index];
                    }
                });
            }
        });
    };
    // 多选框 - 单选：选择需要统一分配策略的路灯
    LightComponent.prototype.addLightstoCtrl = function () {
        var _this = this;
        this.selectedLightList = [];
        this.lightList_check.map(function (item, i) {
            if (item.check === true) {
                var item1 = _this.lightList[i];
                if (item1) {
                    _this.selectedLightList.push(item1);
                }
            }
        });
        // console.log(this.selectedLightList);
    };
    // 多选框 - 全选
    LightComponent.prototype.allCheckMe = function () {
        var _this = this;
        if (this.allCheck) {
            this.selectedLightList = [];
            this.lightList_check.map(function (item, i) {
                _this.lightList_check[i].check = true;
                var item1 = _this.lightList[i];
                if (item1) {
                    _this.selectedLightList.push(item1);
                }
            });
        }
        // console.log(this.selectedLightList);
    };
    LightComponent.prototype.addArr = function (arr) { };
    // 点击关闭操作详情
    LightComponent.prototype.closeDetail = function () {
        this.deviceChild = null;
        this.contrL = false;
    };
    // 解析地址- 设置中心和地图显示级别
    LightComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 搜索Enter事件
    LightComponent.prototype.onKeydown = function (event) {
        if (event.keyCode === 13) {
            this.execQuery();
        }
    };
    // 打开多灯控制
    LightComponent.prototype.devicesControl = function () {
        this.queryString = '';
        this.StrategyRuleMess1 = false;
        this.LightsContrMess1 = false;
        this.showDevicesControl = true;
        this.lightListRes = [].concat(this.lightList);
        // console.log(this.lightListRes);
    };
    // 关闭多灯控制
    LightComponent.prototype.closeDevicesControl = function () {
        var _this = this;
        this.showDevicesControl = false;
        this.showDevicesStrategyCtrl = false;
        this.selectedLightList = [];
        this.allCheck = false;
        this.lightList_check.map(function (item, i) {
            _this.lightList_check[i].check = false;
        });
        this.strategyList1 = null;
    };
    // 多灯策略分配
    LightComponent.prototype.devicesStrategyCtrl = function () {
        if (this.selectedLightList.length > 0) {
            this.showDevicesStrategyCtrl = true;
        }
        else {
            alert('请选择设备');
        }
    };
    // 关闭多灯策略分配框体
    LightComponent.prototype.closeDevicesStrategyCtrl = function () {
        this.showDevicesStrategyCtrl = false;
    };
    // 获取数据
    // 获取城市列表 --ok
    LightComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.cityList = val.regions;
                that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.currentCity = that.node;
                that.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    LightComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    LightComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 路由跳转
    LightComponent.prototype.jumpHandle = function () {
        this.router.navigate(["home/strategy"]);
    };
    // 进入全屏
    LightComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 选择区域
    // 选择城市
    LightComponent.prototype.selecteCity = function (city) {
        this.currentCity = city;
        this.node = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.currentChildren = city.children;
    };
    LightComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.currentArea = block;
    };
    // 显示区域
    LightComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    LightComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    LightComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    LightComponent.prototype.arealistMouseover = function (area) {
        this.currentBlock = area.children;
    };
    // 离开区域
    LightComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.currentBlock = null;
    };
    // 离开城市
    LightComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    LightComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    LightComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.currentBlock = null;
    };
    // 路灯控制页选择策略
    LightComponent.prototype.strategyListsChange = function () {
        this.StrategyRuleMess = false;
        this.LightsContrMess = false;
        this.prompt1 = false;
        console.log('策略改变');
    };
    // 路灯控制页选择策略
    LightComponent.prototype.strategyListsChange1 = function () {
        this.StrategyRuleMess1 = false;
        this.LightsContrMess1 = false;
        this.prompt1 = false;
        console.log('策略改变');
    };
    // 临时控制切换
    // changeContr() {
    //   this.contrL = !this.contrL;
    //   this.prompt = false;
    // }
    // 时间改变
    LightComponent.prototype.changeTime = function () {
        this.StrategyRuleMess = false;
        this.LightsContrMess = false;
        console.log('时间改变');
    };
    LightComponent.prototype.changeTime1 = function () {
        this.StrategyRuleMess1 = false;
        this.LightsContrMess1 = false;
        console.log('时间改变');
    };
    // 亮度改变
    LightComponent.prototype.changeSlider = function () {
        this.StrategyRuleMess = false;
        this.LightsContrMess = false;
        console.log('亮度改变');
    };
    // 路灯控制页亮度调节
    LightComponent.prototype.formatLabel = function (value) {
        // this.prompt = false;
        if (!value) {
            return 0;
        }
        if (value > 100) {
            return Math.round(value / 100) + '%';
        }
        this.lightLevel = value;
        return value + '%';
    };
    // 控制路灯
    LightComponent.prototype.lightsContr = function (id) {
        this.setLightsContr(id);
    };
    // 下发策略
    LightComponent.prototype.lightsRuleContr = function (id) {
        this.setStrategyRule(id);
    };
    // 路灯- 临时控制-接口
    LightComponent.prototype.setLightsContr = function (id) {
        var that = this;
        var strategyList = this.strategyList;
        var stopTime = this.time;
        var level = this.lightLevel;
        this.lightService.setLightsContr(id, level, stopTime).subscribe({
            next: function (val) {
                that.LightsContrMess = true;
                console.log('ok!');
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 多控路灯- 临时控制(亮度)-接口
    LightComponent.prototype.setLightsContr1 = function () {
        var that = this;
        var ids = [];
        var stopTime = this.time1;
        var level = this.lightLevel1;
        this.selectedLightList.map(function (item, i) {
            ids[i] = item.id;
        });
        this.lightService.setLightsLevel(ids, level, stopTime).subscribe({
            next: function (val) {
                that.LightsContrMess1 = true;
                console.log('ok!');
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 控制路灯-下发策略-接口
    LightComponent.prototype.setStrategyRule = function (id) {
        var that = this;
        var strategyList = this.strategyList;
        this.lightService.setStrategyRule(id, strategyList.id).subscribe({
            next: function (val) {
                that.StrategyRuleMess = true;
                console.log('ok!');
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 多控路灯-集体下发策略
    LightComponent.prototype.setStrategyRules = function () {
        var that = this;
        var strategyList1 = that.strategyList1;
        var ids = [];
        if (strategyList1) {
            var ruleId = this.strategyList1.id;
            this.selectedLightList.map(function (item, i) {
                ids[i] = item.id;
            });
            this.lightService.setLightsRule(ids, ruleId).subscribe({
                next: function (val) {
                    that.StrategyRuleMess1 = true;
                    console.log('ok!');
                },
                complete: function () { },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        else {
            alert('请选择策略!');
        }
    };
    // 获取策略表
    LightComponent.prototype.getStrategy = function () {
        var that = this;
        this.lightService.getStrategy().subscribe({
            next: function (val) {
                that.strategyLists = val;
                that.strategyList = that.strategyLists[0];
                // console.log(val);
            },
            complete: function () {
                // that.changeMarker(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LightComponent.prototype.ngOnDestroy = function () {
        window.clearInterval(this.timer);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map5'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], LightComponent.prototype, "map_container", void 0);
    LightComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-light',
            template: __webpack_require__(/*! ./light.component.html */ "./src/app/home/application/light/light.component.html"),
            styles: [__webpack_require__(/*! ./light.component.scss */ "./src/app/home/application/light/light.component.scss")],
            providers: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbTimepickerConfig"]] // add NgbTimepickerConfig to the component providers
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"], _service_light_service__WEBPACK_IMPORTED_MODULE_3__["LightService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbTimepickerConfig"]])
    ], LightComponent);
    return LightComponent;
}());



/***/ }),

/***/ "./src/app/home/application/security/security.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/home/application/security/security.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n  <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n      <!-- 城市列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n          <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n          <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n        </span>\r\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <dl *ngFor=\"let item of map_model.cityList\">\r\n              <dt>{{item.name}}</dt>\r\n              <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n      <!-- 区域列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n          <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n    \r\n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <ul class=\"arealist\" data-type=\"area\">\r\n              <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                        <em>不限</em>\r\n                    </li> -->\r\n              <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                (click)=\"selecteblock(node)\">\r\n                <em>{{node.name}}</em>\r\n              </li>\r\n    \r\n            </ul>\r\n            <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n              <ul class=\"blocklist\" data-type=\"block\">\r\n                <!-- <li data-val=\"0\">不限</li> -->\r\n                <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n    \r\n              </ul>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n    \r\n    </div>\r\n\r\n\r\n  <!-- 右边按钮 -->\r\n  <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n    <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n      <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\">\r\n\r\n    </div>\r\n\r\n    <div class=\"d-inline-block icon-item cur-pointer\">\r\n\r\n      <img src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n    </div> -->\r\n\r\n  </div>\r\n  <!-- 地图 -->\r\n  <div #map5 id=\"map_container5\" class=\"map_container no-fulls-map\"></div>\r\n</div>"

/***/ }),

/***/ "./src/app/home/application/security/security.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/home/application/security/security.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_container {\n  width: 100%; }\n"

/***/ }),

/***/ "./src/app/home/application/security/security.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/home/application/security/security.component.ts ***!
  \*****************************************************************/
/*! exports provided: SecurityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityComponent", function() { return SecurityComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_map_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../data/map-list */ "./src/app/data/map-list.ts");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: security.component.ts
@time: 2018 /8 / 9 9: 00

*/
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SecurityComponent = /** @class */ (function () {
    function SecurityComponent(monitorService) {
        this.monitorService = monitorService;
        /*
        model:object
        light_list: array // 灾害数据
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.model.light_list = _data_map_list__WEBPACK_IMPORTED_MODULE_1__["MAPLIST"].val.light_list; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    SecurityComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
        this.getDevice(); // 获取设备列表
    };
    // 百度地图API功能
    SecurityComponent.prototype.addBeiduMap = function () {
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        // map.setMapStyle({ style: 'dark' });
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.addMarker();
    };
    SecurityComponent.prototype.addMarker = function () {
        for (var index = 0; index < this.model.light_list.length; index++) {
            var item = this.model.light_list[index];
            var point = new BMap.Point(item.lng, item.lat);
            var myIcon = void 0;
            if (item.is_exception && item.is_exception === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/bells.png', new BMap.Size(300, 157));
                // console.log('异常');
            }
            else if (item.is_online === 0) {
                myIcon = new BMap.Icon('../../../../assets/imgs/bells1.png', new BMap.Size(300, 157));
                // console.log('掉线');
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/bells2.png', new BMap.Size(300, 157));
                // console.log('正常');
            }
            myIcon.setAnchor(new BMap.Size(16, 38));
            var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            this.map.addOverlay(marker2);
        }
    };
    // 解析地址- 设置中心和地图显示级别
    SecurityComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 获取数据
    // 获取城市列表 --ok
    SecurityComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取设备列表 -- ok
    SecurityComponent.prototype.getDevice = function () {
        var that = this;
        this.monitorService.getDevice().subscribe({
            next: function (val) {
                that.map_model.deviceList = val;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    SecurityComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    SecurityComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 进入全屏
    SecurityComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 选择区域
    // 选择城市
    SecurityComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    SecurityComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    SecurityComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    SecurityComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    SecurityComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    SecurityComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    SecurityComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    SecurityComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    SecurityComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    SecurityComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map5'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], SecurityComponent.prototype, "map_container", void 0);
    SecurityComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-security',
            template: __webpack_require__(/*! ./security.component.html */ "./src/app/home/application/security/security.component.html"),
            styles: [__webpack_require__(/*! ./security.component.scss */ "./src/app/home/application/security/security.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"]])
    ], SecurityComponent);
    return SecurityComponent;
}());



/***/ }),

/***/ "./src/app/home/application/traffic/traffic.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/home/application/traffic/traffic.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n    <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n        <!-- 城市列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n    \r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n                <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n                <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n                <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n            </span>\r\n            <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <dl *ngFor=\"let item of map_model.cityList\">\r\n                        <dt>{{item.name}}</dt>\r\n                        <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                            <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n    \r\n            </div>\r\n    \r\n        </div>\r\n    \r\n        <!-- 区域列表 -->\r\n        <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n    \r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n                <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n                <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n            </span>\r\n    \r\n            <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                    <span class=\"menu_arrow_left\"></span>\r\n                    <ul class=\"arealist\" data-type=\"area\">\r\n                        <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                        <em>不限</em>\r\n                    </li> -->\r\n                        <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                            (click)=\"selecteblock(node)\">\r\n                            <em>{{node.name}}</em>\r\n                        </li>\r\n    \r\n                    </ul>\r\n                    <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n                        <ul class=\"blocklist\" data-type=\"block\">\r\n                            <!-- <li data-val=\"0\">不限</li> -->\r\n                            <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n    \r\n                        </ul>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n    \r\n    \r\n            </div>\r\n    \r\n        </div>\r\n    \r\n    \r\n    </div>\r\n    \r\n\r\n    <!-- 地图 -->\r\n    <div #map4 id=\"map_container4 \" class=\"map_container no-fulls-map\"></div>\r\n\r\n    <!-- 设备操作 -->\r\n    <div class=\"camera-detail\" *ngIf=\"currentCameraShowMe\">\r\n        <div class=\"camera-title\">\r\n            <span class=\"\" >{{currentCamera.description}}</span>\r\n            <span class=\"camera-close float-right\" (click)=\"closeDetail()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n\r\n        </div>\r\n        <div class=\"modal-body \">\r\n            <!-- <div class=\"video-block\">\r\n                 \r\n            </div> -->\r\n            <div class=\"prism-player video-play\" id=\"video_play\" ></div>\r\n        </div>\r\n\r\n        <!-- <div  class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-outline-info\">确定</button>\r\n            <button type=\"button\" class=\"btn btn-outline-metal\">取消</button>\r\n        </div> -->\r\n\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/home/application/traffic/traffic.component.scss":
/*!*****************************************************************!*\
  !*** ./src/app/home/application/traffic/traffic.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_warp {\n  position: relative; }\n\n.map_container {\n  width: 100%; }\n\n.camera-detail {\n  width: 400px;\n  background: #fff;\n  border: 1px solid #ccc;\n  z-index: 4000;\n  position: absolute;\n  right: 55px;\n  bottom: 5px;\n  padding: 15px; }\n\n.modal-body {\n  padding: 10px 0 0 0; }\n\n.camera-title {\n  display: block;\n  padding: 0;\n  margin: 0;\n  height: 40px;\n  line-height: 40px;\n  border-bottom: 1px solid #ccc; }\n\n.camera-title .camera-close {\n    cursor: pointer;\n    color: #8e8f91; }\n\n.video-play {\n  height: 500px; }\n"

/***/ }),

/***/ "./src/app/home/application/traffic/traffic.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/home/application/traffic/traffic.component.ts ***!
  \***************************************************************/
/*! exports provided: TrafficComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrafficComponent", function() { return TrafficComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_camera_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../service/camera.service */ "./src/app/service/camera.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var TrafficComponent = /** @class */ (function () {
    function TrafficComponent(monitorService, router, cameraService) {
        this.monitorService = monitorService;
        this.router = router;
        this.cameraService = cameraService;
        /*
       model:object
       light_list: array // 灾害数据
       */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.currentCameraShowMe = false;
        this.visible = true; // 控制可视区域
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.model.light_list = []; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    TrafficComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
    };
    // 百度地图API功能
    TrafficComponent.prototype.addBeiduMap = function () {
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
            minZoom: 11,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 15); // 设置中心和地图显示级别
        map.setMapStyle({ style: 'googlelite' });
        // 添加控件缩放
        var offset = new BMap.Size(100, 20);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_RIGHT,
            offset: offset,
        });
        map.addControl(navigationControl);
        var ctrl = new BMapLib.TrafficControl({
            showPanel: true,
        });
        map.addControl(ctrl);
        ctrl.showTraffic({ predictDate: { hour: 15, weekday: 5 } });
        ctrl.setAnchor(BMAP_ANCHOR_TOP_RIGHT);
        ctrl.setOffset(new BMap.Size(180, 20));
        map.enableScrollWheelZoom(true); // 启动滚轮放大缩小，默认禁用
        // const marker = new BMap.Marker(point);  // 创建标注
        // map.addOverlay(marker);               // 将标注添加到地图中
        this.addMarker();
        this.dragendOff(map);
        this.zoomendOff(map);
        this.mapClickOff(map); // 地图点击信息框隐藏
    };
    // 监控-拖动地图事件-显示用户拖动地图后地图中心的经纬度信息。
    TrafficComponent.prototype.dragendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('dragend', function () {
            baiduMap.clearOverlays();
            that.addMarker(); // 获取数据-添加标注
        });
    };
    // 监控-地图缩放事件-地图缩放后的级别。
    TrafficComponent.prototype.zoomendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('zoomend', function () {
            // if (that.isqueryPoint === true) {
            //   that.isqueryPoint = false;
            // } else {
            baiduMap.clearOverlays();
            that.addMarker(); // 添加标注
            // console.log('地图缩放至：' + baiduMap.getZoom() + '级');
            // }
        });
    };
    // 监控-点击地图事件
    TrafficComponent.prototype.mapClickOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('click', function (e) {
            // that.currentCameraShow = false;
        });
    };
    // 添加标注
    TrafficComponent.prototype.addMarker = function () {
        this.getCameras();
    };
    // 获取指定坐标范围的摄像头
    TrafficComponent.prototype.getCameras = function () {
        var that = this;
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
        var value;
        this.cameraService.getCameras(NorthEast, SouthWest).subscribe({
            next: function (val) {
                value = val;
            },
            complete: function () {
                that.addPoint(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 添加点标注
    TrafficComponent.prototype.addPoint = function (val) {
        var _this = this;
        var markers = [];
        var points = [];
        val.map(function (item, i) {
            var point = new BMap.Point(item.point.lng, item.point.lat);
            // const name = item.name;
            // 添加自定义覆盖物
            var myIcon;
            if (item.error === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/camera_error.png', new BMap.Size(300, 157));
            }
            else if (item.offline === true) {
                myIcon = new BMap.Icon('../../../../assets/imgs/camera_offline.png', new BMap.Size(300, 157));
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/camera_normal.png', new BMap.Size(300, 157));
            }
            myIcon.setAnchor(new BMap.Size(16, 38));
            var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            _this.map.addOverlay(marker2);
            markers.push(marker2); // 聚合
            points.push(point); // 聚合
        });
        // 点击点标注事件
        for (var index = 0; index < markers.length; index++) {
            var marker = markers[index];
            this.openSideBar(marker, val[index]);
        }
    };
    // 地图点注标-点击事件
    TrafficComponent.prototype.openSideBar = function (marker, camera) {
        console.log(camera);
        var that = this;
        var txt = "<p style='font-size: 12px; line-height: 1.8em; border-bottom: 1px solid #ccc; padding-bottom: 10px;'>";
        txt = txt + ("\u8BBE\u5907\u7F16\u53F7 | " + camera.positionNumber + " </p><p> \u8BBE\u5907\u540D\u79F0\uFF1A" + camera.description + "</p>");
        if (camera.offline === false) {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u79BB\u7EBF\uFF1A<span style='color: red'>\u662F</span></p>";
        }
        if (camera.error === false) {
            txt = txt + "<p> \u662F\u5426\u5F02\u5E38\uFF1A\u5426</p>";
        }
        else {
            txt = txt + "<p> \u662F\u5426\u5F02\u5E38\uFF1A<span style='color: red'>\u662F</span></p>";
        }
        txt = txt + ("<button class='btn btn-bg' style='font-size: 14px; float: right; margin: 5px' id='" + camera.id + "'>\u8BE6\u60C5</button>");
        // const infoWindow = new BMap.InfoWindow(txt, opts);
        marker.addEventListener('click', function () {
            that.currentCamera = camera;
            that.currentCameraShowMe = true;
            setTimeout(function () {
                that.cameraAddEventListener();
            }, 2);
        });
    };
    // 点击子设备
    TrafficComponent.prototype.cameraAddEventListener = function () {
        var that = this;
        // let player;
        setTimeout(function () {
            var player = new Aliplayer({
                'id': 'video_play',
                'source': that.currentCamera.videoUrl,
                'width': '100%',
                'height': '500px',
                'autoplay': true,
                'isLive': false,
                'rePlay': false,
                'playsinline': true,
                'preload': true,
                'controlBarVisibility': 'hover',
                'useH5Prism': true
            }, function (play) {
                console.log('播放器创建了。');
            });
        }, 2);
        // const device = $(`#${this.Camera.id}`);
        // device.on('click', function () {
        //   console.log('ddd');
        //   that.cameraChild = that.Camera;
        //   let player;
        //   setTimeout(() => {
        //     player = new Aliplayer({
        //       'id': 'video_play',
        //       'source': that.Camera.videoUrl,
        //       'width': '100%',
        //       'height': '500px',
        //       'autoplay': true,
        //       'isLive': false,
        //       'rePlay': false,
        //       'playsinline': true,
        //       'preload': true,
        //       'controlBarVisibility': 'hover',
        //       'useH5Prism': true
        //     }, function (play) {
        //       console.log('播放器创建了。');
        //     }
        //     );
        //   }, 2);
        // });
    };
    // 关闭按钮
    TrafficComponent.prototype.closeDetail = function () {
        this.currentCameraShowMe = false;
    };
    // 返回地图可视区域，以地理坐标表示
    // getBounds(baiduMap) {
    //   const Bounds = baiduMap.getBounds(); // 返回地图可视区域，以地理坐标表示
    //   this.NorthEast = Bounds.getNorthEast(); // 返回矩形区域的东北角
    //   this.SouthWest = Bounds.getSouthWest(); // 返回矩形区域的西南角
    //   this.zoom = baiduMap.getZoom(); // 地图级别
    // }
    // 获取城市列表 --ok
    TrafficComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
                that.addBeiduMap(); // 创建地图
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    TrafficComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    TrafficComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 解析地址- 设置中心和地图显示级别
    TrafficComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 选择区域
    // 选择城市
    TrafficComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.node = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    TrafficComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    TrafficComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    TrafficComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 离开城市
    TrafficComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 选择区域
    TrafficComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    TrafficComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = null;
    };
    TrafficComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = null;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map4'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], TrafficComponent.prototype, "map_container", void 0);
    TrafficComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-traffic',
            template: __webpack_require__(/*! ./traffic.component.html */ "./src/app/home/application/traffic/traffic.component.html"),
            styles: [__webpack_require__(/*! ./traffic.component.scss */ "./src/app/home/application/traffic/traffic.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _service_camera_service__WEBPACK_IMPORTED_MODULE_3__["CameraService"]])
    ], TrafficComponent);
    return TrafficComponent;
}());

/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: traffic.component.ts
@time: 2018 /8 / 9 9: 00

*/


/***/ }),

/***/ "./src/app/home/application/water/water.component.html":
/*!*************************************************************!*\
  !*** ./src/app/home/application/water/water.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"xif-iframe\">\n  <iframe src=\"https://www.ecomo.io/xl\" frameborder=\"0\" width=\"100%\" height=\"100%\" ></iframe>\n</div>\n"

/***/ }),

/***/ "./src/app/home/application/water/water.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/home/application/water/water.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".xif-iframe {\n  width: calc(100% - 50px);\n  height: 100vh; }\n"

/***/ }),

/***/ "./src/app/home/application/water/water.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/home/application/water/water.component.ts ***!
  \***********************************************************/
/*! exports provided: WaterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaterComponent", function() { return WaterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var WaterComponent = /** @class */ (function () {
    function WaterComponent() {
    }
    WaterComponent.prototype.ngOnInit = function () {
    };
    WaterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-water',
            template: __webpack_require__(/*! ./water.component.html */ "./src/app/home/application/water/water.component.html"),
            styles: [__webpack_require__(/*! ./water.component.scss */ "./src/app/home/application/water/water.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], WaterComponent);
    return WaterComponent;
}());



/***/ }),

/***/ "./src/app/home/device/device.component.html":
/*!***************************************************!*\
  !*** ./src/app/home/device/device.component.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"nav-margin\"></div>\r\n<!-- <p>\r\n  device works!\r\n</p> -->\r\n<router-outlet></router-outlet>\r\n"

/***/ }),

/***/ "./src/app/home/device/device.component.scss":
/*!***************************************************!*\
  !*** ./src/app/home/device/device.component.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/home/device/device.component.ts":
/*!*************************************************!*\
  !*** ./src/app/home/device/device.component.ts ***!
  \*************************************************/
/*! exports provided: DeviceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceComponent", function() { return DeviceComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DeviceComponent = /** @class */ (function () {
    function DeviceComponent() {
    }
    DeviceComponent.prototype.ngOnInit = function () {
    };
    DeviceComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-device',
            template: __webpack_require__(/*! ./device.component.html */ "./src/app/home/device/device.component.html"),
            styles: [__webpack_require__(/*! ./device.component.scss */ "./src/app/home/device/device.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], DeviceComponent);
    return DeviceComponent;
}());



/***/ }),

/***/ "./src/app/home/device/device.module.ts":
/*!**********************************************!*\
  !*** ./src/app/home/device/device.module.ts ***!
  \**********************************************/
/*! exports provided: DeviceModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceModule", function() { return DeviceModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _position_position_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./position/position.component */ "./src/app/home/device/position/position.component.ts");
/* harmony import */ var _product_product_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./product/product.component */ "./src/app/home/device/product/product.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _devices_devices_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./devices/devices.component */ "./src/app/home/device/devices/devices.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var DeviceModule = /** @class */ (function () {
    function DeviceModule() {
    }
    DeviceModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormsModule"],
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"],
                _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_3__["SharedModule"]
            ],
            declarations: [
                _position_position_component__WEBPACK_IMPORTED_MODULE_4__["PositionComponent"],
                _product_product_component__WEBPACK_IMPORTED_MODULE_5__["ProductComponent"],
                _devices_devices_component__WEBPACK_IMPORTED_MODULE_7__["DevicesComponent"],
            ],
            schemas: [
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["CUSTOM_ELEMENTS_SCHEMA"],
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["NO_ERRORS_SCHEMA"]
            ]
        })
    ], DeviceModule);
    return DeviceModule;
}());



/***/ }),

/***/ "./src/app/home/device/device.routes.ts":
/*!**********************************************!*\
  !*** ./src/app/home/device/device.routes.ts ***!
  \**********************************************/
/*! exports provided: DeviceRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceRoutes", function() { return DeviceRoutes; });
/* harmony import */ var _device_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./device.component */ "./src/app/home/device/device.component.ts");
/* harmony import */ var _position_position_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./position/position.component */ "./src/app/home/device/position/position.component.ts");
/* harmony import */ var _devices_devices_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./devices/devices.component */ "./src/app/home/device/devices/devices.component.ts");
/* harmony import */ var _product_product_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./product/product.component */ "./src/app/home/device/product/product.component.ts");
/* harmony import */ var _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../guard/auth-guard.service */ "./src/app/guard/auth-guard.service.ts");





var DeviceRoutes = [
    {
        path: 'device',
        component: _device_component__WEBPACK_IMPORTED_MODULE_0__["DeviceComponent"],
        canActivate: [_guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_4__["AuthGuard"]],
        children: [
            {
                path: '',
                // canActivateChild: [AuthGuard],
                children: [
                    { path: '', redirectTo: 'position', pathMatch: 'full' },
                    { path: 'position', component: _position_position_component__WEBPACK_IMPORTED_MODULE_1__["PositionComponent"] },
                    { path: 'devices', component: _devices_devices_component__WEBPACK_IMPORTED_MODULE_2__["DevicesComponent"] },
                    { path: 'product', component: _product_product_component__WEBPACK_IMPORTED_MODULE_3__["ProductComponent"] },
                ]
            }
        ]
    }
];


/***/ }),

/***/ "./src/app/home/device/devices/devices.component.html":
/*!************************************************************!*\
  !*** ./src/app/home/device/devices/devices.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 批量导入设备 -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">批量导入设备</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <img src=\"../../../../assets/imgs/num1.png\">\r\n      <label class=\"control-label\">下载产品模板，批量填写信息</label>\r\n      <button type=\"button\" class=\"btn btn-outline-dark btn1\">下载</button>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <img src=\"../../../../assets/imgs/num2.png\">\r\n      <label class=\"control-label\">上传填写好的信息表</label>\r\n      <button type=\"button\" class=\"btn btn-outline-dark btn1\">选择文件</button>\r\n    </div>\r\n    <table class=\"table table-bordered limited-width\">\r\n      <tr>\r\n        <th>所属产品可填项</th>\r\n      </tr>\r\n      <tr>\r\n        <td>灯</td>\r\n      </tr>\r\n      <tr>\r\n        <td>井盖</td>\r\n      </tr>\r\n    </table>\r\n\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Close click')\">确认</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- 新建/修改设备 -->\r\n<ng-template #content2 let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">{{addOrUpdate}}</h5>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <div class=\"row\">\r\n      <!-- 左列 -->\r\n      <div class=\"col-3 div-left\">\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\">设备名称:</label>\r\n          <!-- <div class=\"form-cont-left\"> -->\r\n          <input type=\"text\" [(ngModel)]=\"device.descr\" class=\"form-control\" id=\"add-product-name\" placeholder=\"\">\r\n          <span *ngIf=\"device.descr.length > 30\" class=\"control-label\" style=\"color: red\">长度不可大于30！</span>\r\n          <!-- </div> -->\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\">设备型号:</label>\r\n          <select name=\"profile1\" [(ngModel)]=\"device.model\" class=\"form-control\">\r\n            <option *ngFor=\"let index of deviceModels1\" [ngValue]=\"index\">\r\n              {{ index.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <!-- <div class=\"form-group\">\r\n          <label class=\"control-label\">制造商:</label>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\">制造商联系方式:</label>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n        </div> -->\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\">设备编号:</label>\r\n          <input type=\"text\" [(ngModel)]=\"device.name\" class=\"form-control\" placeholder=\"\">\r\n          <span *ngIf=\"device.name.length > 30\" class=\"control-label\" style=\"color: red\">长度不可大于30！</span>\r\n        </div>\r\n      </div>\r\n      <!-- 中列 -->\r\n      <div class=\"col-4\">\r\n        <label class=\"control-label\">\r\n          <b>位置绑定</b>\r\n        </label>\r\n\r\n        <div class=\"form-inline\">\r\n          <div class=\"label-mid\">\r\n            <label class=\"control-label\">区域:</label>\r\n          </div>\r\n          <!-- 选择区域 -->\r\n          <div class=\"area-selection\" *ngIf=\"visible == true\">\r\n            <!-- 城市列表 -->\r\n            <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"citylistMouseleave()\">\r\n\r\n              <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n                <span class=\"filter\" *ngIf=\"currentCity\">{{currentCity.name}}</span>\r\n                <span class=\"filter\" *ngIf=\"!currentCity\">选择城市</span>\r\n                <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n              </span>\r\n              <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                  <span class=\"menu_arrow_left\"></span>\r\n\r\n                  <dl *ngFor=\"let item of cityList\">\r\n                    <dt>{{item.name}}</dt>\r\n                    <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                      <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n                    </dd>\r\n                  </dl>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 区域列表 -->\r\n            <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"arealistMouseleave()\">\r\n\r\n              <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n                  <span class=\"filter\" *ngIf=\"!currentArea\">选择区域</span>\r\n                  <span class=\"filter\" *ngIf=\"currentArea\">{{currentArea.name}}</span>\r\n              </span>\r\n\r\n              <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n                <div class=\"dropdown_panel_inner\">\r\n                  <span class=\"menu_arrow_left\"></span>\r\n\r\n                  <ul class=\"arealist\" data-type=\"area\">\r\n                    <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                      <em>不限</em>\r\n                    </li> -->\r\n                    <li class=\"arealist-item\" *ngFor=\"let node of currentChildren\" (mouseover)=\"arealistMouseover(node)\">\r\n                      <em>{{node.name}}</em>\r\n                    </li>\r\n                  </ul>\r\n                  <div class=\"blocklist-wrap\" *ngIf=\"currentBlock\">\r\n                    <ul class=\"blocklist\" data-type=\"block\">\r\n                      <!-- <li data-val=\"0\">不限</li> -->\r\n                      <li *ngFor=\"let block of currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-inline query-div\">\r\n            <div class=\"label-mid\">\r\n              <label class=\"control-label\">检索产品:</label>\r\n            </div>\r\n            <input type=\"text\" id=\"sole-input1\" [(ngModel)]=\"queryStrPosi\" class=\"form-control\" name=\"word1\" \r\n              autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索编号、名称\" value=\"\">\r\n            <i *ngIf=\"currentArea\" class=\"fa fa-search fa-lg query-btn\" (click)=\"execQueryPosi()\" aria-hidden=\"true\"></i>\r\n            <!-- <button class=\"btn btn-bg query-btn\" (click)=\"execQueryPosi()\" [disabled]=\"!currentArea\">搜索</button> -->\r\n        </div>\r\n\r\n        <div #map2 id=\"survey_map\" class=\"map_container\"></div>\r\n\r\n        <label class=\"control-label\">已选位置：</label>\r\n        <span *ngIf=\"bindedPosition\">{{bindedPosition.name}}-{{bindedPosition.number}}</span>\r\n      </div>\r\n\r\n      <!-- 右列 -->\r\n      <div class=\"col-5\">\r\n        <!-- <label class=\"control-label\">地图:</label> -->\r\n\r\n        <table class=\"table table-bordered table-hover small-size\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>位置名称</th>\r\n              <th>位置编号</th>\r\n              <th>位置经纬</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let position of posiListByRegion\" class=\"lineheight cur-pointer\" (click)=\"bindPosition(position)\">\r\n              <td>{{position.name}}</td>\r\n              <td>{{position.number}}</td>\r\n              <td><span *ngIf=\"position.point\"></span>X:{{position.point.lng}} Y:{{position.point.lat}}</td>\r\n            </tr>\r\n          </tbody>\r\n\r\n        </table>\r\n        <div *ngIf=\"posiListByRegion.length === 0 || !posiListByRegion\">无数据！</div>\r\n        <div *ngIf=\"posiListByRegion.length > 0\">\r\n          <ngb-pagination [collectionSize]=total1 [(page)]=\"pagePosi\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" \r\n            [boundaryLinks]=\"true\" (pageChange)=\"pageChangePosi()\"></ngb-pagination>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addorUpdate(addOrUpdate)\" \r\n      [disabled]=\"!device.descr || device.descr == '' || !device.name || device.name == '' || !bindedPosition || bindedPosition == ''\r\n        || device.descr.length > 30 || device.name.length > 30\">确认</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n<!-- 删除位置 -->\r\n<ng-template #contentDelDevice let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal  [input]=\"modelData\" (output)=\"closeDevice($event)\"></app-sq-modal>\r\n</ng-template>\r\n<div class=\"bodyofclass\">\r\n    <p *ngFor=\"let alert of alerts\" class=\"lsq-alert\">\r\n      <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n    </p>\r\n\r\n  <div class=\"card card-primary panel-default \">\r\n    <div class=\"card-header\">\r\n      <span>设备管理</span>\r\n      <div class=\"add-survey\">\r\n        <a class=\"theme-text btn-a cur-pointer\" (click)=\"openAddSurveys(content)\">批量导入设备</a>\r\n        <a class=\"theme-text btn-a cur-pointer\" (click)=\"openNewSurvey(content2)\">新建设备</a>\r\n      </div>\r\n    </div>\r\n    <!-- 搜索设备 -->\r\n    <div class=\"row card-block search-survey\">\r\n      <!-- 搜索设备 -->\r\n      <form class=\"form-inline search-options\">\r\n        <!-- <select class=\"form-control\">\r\n              <option>区域</option>\r\n              <option>...</option>\r\n            </select> -->\r\n\r\n        <!-- 选择区域 -->\r\n        <!-- <div class=\"area-selection\" *ngIf=\"visible1 == true\">\r\n          城市列表\r\n          <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"citylistMouseleave1()\">\r\n\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt1()\">\r\n              <span class=\"filter\" *ngIf=\"node1\">{{node1.name}}</span>\r\n              <span class=\"filter\" *ngIf=\"!currentCity1\">选择城市</span>\r\n            </span>\r\n            <div id=\"city-panel1\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow1\">\r\n              <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n                <dl *ngFor=\"let item of cityList1\">\r\n                  <dt>{{item.name}}</dt>\r\n                  <dd *ngIf=\"item.children && item.children.length > 0\">\r\n\r\n                    <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity1(itemc)\">{{itemc.name}}</a>\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          区域列表\r\n          <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"arealistMouseleave1()\">\r\n\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea1()\">\r\n              <span class=\"filter\">选择区域</span>\r\n            </span>\r\n\r\n            <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow1\">\r\n              <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n\r\n                <ul class=\"arealist\" data-type=\"area\">\r\n                  <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone1()\">\r\n                    <em>不限</em>\r\n                  </li>\r\n\r\n                  <li class=\"arealist-item\" *ngFor=\"let node of currentChildren1\" (mouseover)=\"arealistMouseover1(node)\">\r\n                    <em>{{node.name}}</em>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div class=\"blocklist-wrap\" *ngIf=\"currentBlock1\">\r\n                  <ul class=\"blocklist\" data-type=\"block\">\r\n                    <li data-val=\"0\">不限</li>\r\n                    <li *ngFor=\"let block of currentBlock1\">{{block.name}}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div> -->\r\n\r\n        <span>设备型号：</span>\r\n        <select name=\"profile\" [(ngModel)]=\"currentModel\" (change)=\"deviceTypeChange()\" class=\"form-control\">\r\n          <option *ngFor=\"let index of deviceModels\" [ngValue]=\"index\">\r\n            {{ index.name }}\r\n          </option>\r\n        </select>\r\n        <!-- 日期，功能不明 -->\r\n        <!-- <input type=\"date\" class=\"form-control\" value=\"2018-06-01\" /> -->\r\n        <!-- 输入框，功能不明 -->\r\n        <div class=\"form-group inner-addon left-addon \">\r\n            <!-- <i class=\"fa fa-search search-icon\"></i> -->\r\n            <!-- <input type=\"text\" class=\"form-control border-none\" name=\"search-content\" id=\"\" placeholder=\"{{'XXX'}}\" /> -->\r\n            <input id=\"sole-input2\" [(ngModel)]=\"queryStr\" class=\"form-control searchbox-content-common\" type=\"text\" \r\n              name=\"word\" autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索编号、名称\" value=\"\">\r\n        </div>\r\n        <button class=\"btn btn-bg extral-marg\" (click)=\"execQuery()\">搜索</button>\r\n        <!-- <button class=\"btn btn-bg extral-marg\">清空选择</button> -->\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 显示已有设备 -->\r\n    <div class=\"card-block\">\r\n      <table class=\"table table-hover\">\r\n        <thead class=\"table-header\">\r\n          <tr>\r\n            <th>序号</th>\r\n            <th>设备名称</th>\r\n            <th>设备编号</th>\r\n            <th>设备型号</th>\r\n            <th>绑定位置</th>\r\n            <th style=\"text-align: center\">操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let device of deviceslist; let i = index\" class=\"lineheight\">\r\n            <td>{{i + 1}}</td>\r\n            <td>{{device.description}}</td>\r\n            <td>{{device.name}}</td>\r\n            <td>{{modelName(device.modelId)}}</td>\r\n            <td><span *ngIf=\"device.point.lng\">{{device.point.lng}}/{{device.point.lat}}</span></td>\r\n            <td style=\"text-align: center\">\r\n              <!-- <div>\r\n                  <a class=\"manage-class\"><i class=\"fa fa-eye\"></i></a>\r\n                  <a class=\"manage-class\"><i class=\"fa fa-wrench\"></i></a>\r\n                  <a class=\"manage-class\"><i class=\"fa fa-times-circle\"></i></a>\r\n                </div> -->\r\n              <div class=\"modify-strategy d-inline\">\r\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdataDevice(content2, device, i)\">修改</a>\r\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelDevice(contentDelDevice, device)\">删除</a>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n\r\n\r\n      </table>\r\n      <div *ngIf=\"deviceslist.length === 0 || !deviceslist\">无数据！</div>\r\n      <div *ngIf=\"deviceslist.length > 0\">\r\n        <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n          (pageChange)=\"pageChange()\"></ngb-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/home/device/devices/devices.component.scss":
/*!************************************************************!*\
  !*** ./src/app/home/device/devices/devices.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\nbody {\n  color: #333;\n  font-family: \"Microsoft Yahei\",微软雅黑,\"Helvetica Neue\",Arial,sans-serif;\n  font-size: 14px;\n  background: #F5F5F6; }\n.theme-bg {\n  background: #F5F5F6; }\n.theme-text {\n  color: #9BD9DD !important; }\n.sidebar-bg {\n  background: #506173; }\n.btn {\n  font-size: 14px; }\n.btn-bg {\n  background: #009CFF;\n  color: #fff; }\n.btn-bg2 {\n  background: #FFFFFF;\n  color: #000; }\n.btn-a {\n  display: inline-block;\n  padding: 5px;\n  color: #41AEE6 !important; }\n.color-btn-text {\n  color: #41AEE6; }\n.nav-item a:hover, .nav-item a:active {\n  color: #d7f8ff;\n  background-color: #476480 !important; }\n.nav {\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none; }\n.nav-tabs > li {\n  float: left;\n  margin-bottom: -1px; }\n.nav > li {\n  position: relative;\n  display: block; }\n.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {\n  color: #41AEE6;\n  cursor: default;\n  background-color: #F5F5F6;\n  border: 1px solid #ddd;\n  border-bottom-color: transparent; }\n.nav > li > a {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  font-size: 18px; }\n.panel-default {\n  padding: 2.2rem;\n  border-radius: 10px;\n  height: 100%;\n  box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n  background-color: #ffffff; }\n.car-header {\n  height: 50px; }\n.car-title {\n  font-size: 28px; }\n.dropdown_panel {\n  position: absolute;\n  z-index: 3000;\n  left: 0;\n  padding: 7px 0; }\n.dropdown_panel .dropdown_panel_inner {\n    box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n    background-color: #fff;\n    padding: 20px;\n    font-size: 12px;\n    border-radius: 4px; }\n.dropdown_panel .menu_arrow_left:before {\n    display: block;\n    border-width: 7px;\n    position: absolute;\n    top: -7px;\n    left: 7px;\n    border-style: solid dashed dashed;\n    border-color: transparent transparent #fff transparent;\n    font-size: 0;\n    line-height: 0;\n    content: \"\"; }\n.btn.btn-outline-metal {\n  color: #c4c5d6;\n  background: #ffffff;\n  border-color: #c4c5d6; }\n.btn-outline-metal.focus, .btn-outline-metal:focus, .btn-outline-metal:hover {\n  border-color: #c4c5d6;\n  background: #c4c5d6; }\n.btn.btn-outline-metal.active, .btn.btn-outline-metal.focus, .btn.btn-outline-metal:focus, .btn.btn-outline-metal:hover:not(:disabled) {\n  color: #ffffff !important; }\n.btn-outline-info {\n  color: #36a3f7;\n  background-color: transparent;\n  background-image: none;\n  border-color: #36a3f7; }\n.btn-outline-info.focus, .btn-outline-info:focus, .btn-outline-info:hover {\n  border-color: #36a3f7;\n  background: #36a3f7; }\n.btn.btn-outline-info.active, .btn.btn-outline-info.focus, .btn.btn-outline-info:focus, .btn.btn-outline-info:hover:not(:disabled) {\n  color: #ffffff !important; }\n.table.table-hover {\n  border-bottom: 1px solid #dee2e6; }\n.table-header {\n  background-color: #ccc; }\n.bs-example .pagination {\n  margin-top: 10px;\n  margin-bottom: 10px; }\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px; }\n.pagination > li {\n  display: inline; }\n.pagination > li:first-child > a, .pagination > li:first-child > span {\n  margin-left: 0;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px; }\n.pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {\n  z-index: 3;\n  color: #fff;\n  cursor: default;\n  background-color: #337ab7;\n  border-color: #337ab7; }\n.pagination > li > a, .pagination > li > span {\n  position: relative;\n  float: left;\n  padding: 6px 12px;\n  margin-left: -1px;\n  line-height: 1.42857143;\n  color: #337ab7;\n  text-decoration: none;\n  background-color: #fff;\n  border: 1px solid #ddd; }\n.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > span:focus, .pagination > li > span:hover {\n  z-index: 2;\n  color: #23527c;\n  background-color: #eee;\n  border-color: #ddd; }\n.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disabled > span:focus, .pagination > .disabled > span:hover {\n  color: #777;\n  cursor: not-allowed;\n  background-color: #fff;\n  border-color: #ddd; }\nselect.custom-select[_ngcontent-c11] {\n  margin-right: 0.5rem;\n  width: auto; }\n.custom-day[_ngcontent-c11] {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem; }\n.custom-day.focused[_ngcontent-c11] {\n  background-color: #e6e6e6; }\n.custom-day.range[_ngcontent-c11], .custom-day[_ngcontent-c11]:hover {\n  background-color: #0275d8;\n  color: white; }\n.custom-day.faded[_ngcontent-c11] {\n  background-color: rgba(2, 117, 216, 0.5); }\n.weekend[_ngcontent-c11] {\n  background-color: #f0ad4e;\n  border-radius: 1rem;\n  color: white; }\n.hidden[_ngcontent-c11] {\n  display: none; }\n.map_container {\n  height: 320px; }\n.bodyofclass {\n  width: calc(100vw - 50px);\n  height: 100vh;\n  padding: 30px;\n  position: relative; }\n.card-header {\n  border-bottom: 0px;\n  position: relative; }\n.card-block {\n  margin: 5px 0px 0px;\n  min-height: 38px; }\n.add-survey {\n  margin: 0px;\n  text-align: right;\n  position: absolute;\n  right: 5px;\n  bottom: 5px; }\n.search-survey {\n  font-size: 14px; }\n.search-survey .extral-marg {\n    margin-right: 5px; }\n.search-survey .search-options .form-control {\n    font-size: 14px;\n    width: auto;\n    height: 38px;\n    margin-right: 5px; }\n.search-survey .search-options .search-icon {\n    font-size: 20px;\n    margin: 5px; }\n.search-survey .add-survey {\n    margin: 0px;\n    text-align: right; }\n.btn-survey {\n  font-size: 14px;\n  margin-right: 5px;\n  margin-top: 5px;\n  background-color: #009CFF; }\n.btn-survey-end {\n  margin-right: 0px; }\n.btn-survey:hover {\n  background-color: #008CE6; }\n.manage-class {\n  font-size: 20px;\n  padding-right: 1px;\n  cursor: pointer; }\n.manage-class:focus, .manage-class:hover {\n  background-color: #009CFF; }\n.manage-class:active {\n  background-color: #008CE6; }\n.modal-body .form-control {\n  font-size: 14px;\n  height: calc(1.8rem + 2px);\n  margin-bottom: 5px; }\n.modal-body .form-cont-left {\n  padding-left: 0px; }\n.modal-body .extral-margin {\n  margin-left: 5px; }\n.modal-body .limited-width {\n  width: 133px; }\n.modal-body .btn1 {\n  font-size: 14px;\n  margin-left: 5px; }\n.modal-body .sm-width {\n  width: 70px;\n  margin: 0 3px 5px; }\n.modal-body .padding-left-zero {\n  padding-left: 0px; }\n.modal-body .label-mid {\n  width: 65px;\n  text-align: right;\n  margin-right: 5px; }\n.modal-body .query-div {\n  position: relative;\n  margin-top: 5px; }\n.modal-body .query-div .query-btn {\n    position: relative;\n    top: -2px;\n    right: 22px; }\n.modal-body .query-div .query-btn:hover, .modal-body .query-div .query-btn:active {\n    color: red; }\n.div-left {\n  border-right: thin solid #9BD9DD; }\n.lineheight {\n  line-height: 1.0; }\n.small-size td, .small-size th {\n  padding: 0.25rem; }\n"

/***/ }),

/***/ "./src/app/home/device/devices/devices.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/home/device/devices/devices.component.ts ***!
  \**********************************************************/
/*! exports provided: DevicesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DevicesComponent", function() { return DevicesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_device_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../service/device.service */ "./src/app/service/device.service.ts");
/* harmony import */ var _service_grad_overlay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../service/grad.overlay */ "./src/app/service/grad.overlay.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DevicesComponent = /** @class */ (function () {
    function DevicesComponent(modalService, monitorService, deviceService) {
        this.modalService = modalService;
        this.monitorService = monitorService;
        this.deviceService = deviceService;
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.deviceslist = []; // 设备列表
        this.pageSize = 10;
        this.deviceModels = []; // 设备型号列表
        this.deviceModels1 = [];
        this.device = {}; // 存储数据
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.posiListByRegion = []; // 按区域返回的位置点列表
        this.pageSizePosi = 10;
        this.showPosiTable = false; // 默认不显示表格内容，只显示表头
        this.alerts = [];
        this.alertsModal = [];
        this.page = 1;
        this.pagePosi = 1;
        this.curModelIndex = 0; // 全选
        this.queryStr = '';
        this.queryStrPosi = '';
        this.device.point = { lng: '', lat: '' };
    }
    DevicesComponent.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    DevicesComponent.prototype.closeAlertModal = function (alert) {
        var index = this.alertsModal.indexOf(alert);
        this.alertsModal.splice(index, 1);
    };
    DevicesComponent.prototype.ngOnInit = function () {
        this.getCity();
        // this.getDevice();
        this.getAllDeviceModel();
        // this.getCityDropdownListgetCityDropdownList();
        this.getDevicesList(this.page, this.pageSize);
    };
    // 获取设备型号列表
    DevicesComponent.prototype.getAllDeviceModel = function () {
        var that = this;
        this.deviceService.getAllDeviceModel(0, 1, 20).subscribe({
            next: function (val) {
                that.deviceModels1 = val.items;
                that.deviceModels = val.items.map(function (item) { return Object.assign({}, item); });
                that.deviceModels.unshift({ id: 0, name: '不限' }); // 所有项
                that.currentModel = that.deviceModels[0]; // 默认显示“不限”
                that.curModelIndex = that.currentModel.id; // 标识
                that.device.model = that.deviceModels1[0];
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取设备分页
    DevicesComponent.prototype.getDevicesList = function (page, pageSize) {
        var that = this;
        this.deviceService.getAllDeviceByModel(this.queryStr, this.curModelIndex, page, pageSize).subscribe({
            next: function (val) {
                that.deviceslist = val.items;
                that.total = val.total;
                // console.log(that.deviceslist);
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 设备类型选择
    DevicesComponent.prototype.deviceTypeChange = function () {
        this.curModelIndex = this.currentModel.id;
        this.getDevicesList(this.page, this.pageSize);
        // 显示特定型号的设备列表分页
    };
    // 检索按键点击事件
    DevicesComponent.prototype.execQuery = function () {
        this.getDevicesList(this.page, this.pageSize);
    };
    // 分页
    DevicesComponent.prototype.pageChange = function () {
        this.getDevicesList(this.page, this.pageSize);
    };
    DevicesComponent.prototype.pageChangePosi = function () {
        this.getPosiByRegionId(this.currentArea.id, this.pagePosi, this.pageSizePosi);
    };
    // 批量导入
    DevicesComponent.prototype.openAddSurveys = function (content) {
        var _this = this;
        var that = this;
        this.modalService.open(content, { windowClass: 'md-modal' }).result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 新建设备
    DevicesComponent.prototype.openNewSurvey = function (content) {
        var _this = this;
        this.addOrUpdate = '新建设备';
        this.device.name = '';
        this.device.model = this.deviceModels1[0];
        this.device.descr = '';
        this.device.bindedPosi = this.bindedPosition;
        this.bindedPosition = null;
        var modal = this.modalService.open(content, { windowClass: 'ex-lg-modal' });
        this.mr = modal;
        this.addBaiduMap();
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            // this.addDevice();
            _this.showPosiTable = false;
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            _this.showPosiTable = false;
        });
    };
    DevicesComponent.prototype.addorUpdate = function (addOrUpdate) {
        if (addOrUpdate === '新建设备') {
            this.addDevice();
        }
        else {
            this.device.modelId = this.device.model.id; // 关闭模态框时同步modelId以便更新。device.model为双向绑定的设备类型
            this.updataDevice();
        }
    };
    // 新增设备
    DevicesComponent.prototype.addDevice = function () {
        var that = this;
        var name = this.device.name;
        var modelId = this.device.model.id;
        var descr = this.device.descr;
        var bindedPosi = this.bindedPosition;
        var lng = bindedPosi.point.lng;
        var lat = bindedPosi.point.lat;
        var posiId = bindedPosi.id;
        this.deviceService.addNewDevice(name, modelId, descr, posiId, lng, lat).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '新建成功！',
                });
                that.backup = that.alerts.map(function (alert) { return Object.assign({}, alert); });
                that.mr.close();
            },
            complete: function () {
                that.getDevicesList(that.page, that.pageSize);
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u65B0\u5EFA\u5931\u8D25: " + message + "\uFF01",
                });
                console.log(error.json());
            }
        });
    };
    // 修改设备
    DevicesComponent.prototype.openUpdataDevice = function (content, item, i) {
        var _this = this;
        this.queryStrPosi = '';
        this.addOrUpdate = '更新设备';
        var that = this;
        this.getPosiById(item.positionId); // device.positionId -> position. (设备->位置点)
        this.device.updateId = item.id;
        this.device.name = item.name;
        this.device.point = item.point;
        var id = item.modelId;
        this.device.descr = item.description;
        // 传入当前设备的类型
        for (var index = 0; index < this.deviceModels1.length; index++) {
            var element = that.deviceModels1[index];
            if (id === element.id) {
                that.device.model = that.deviceModels1[index]; // 设备型号为传入的item的型号
                break;
            }
        }
        var modal = this.modalService.open(content, { windowClass: 'ex-lg-modal' });
        this.mr = modal;
        this.addBaiduMap();
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            // console.log(this.closeResult);
            // this.device.modelId = this.device.model.id; // 关闭模态框时同步modelId以便更新。device.model为双向绑定的设备类型
            // that.updataDevice();
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 修改设备信息
    DevicesComponent.prototype.updataDevice = function () {
        var that = this;
        var id = this.device.updateId;
        var name = this.device.name;
        var modelId = this.device.modelId;
        var descr = this.device.descr;
        var bindedPosi = this.bindedPosition;
        var lng = bindedPosi.point.lng;
        var lat = bindedPosi.point.lat;
        var posiId = bindedPosi.id;
        this.deviceService.updateDevice(id, name, modelId, descr, posiId, lng, lat).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '修改成功！',
                });
                that.backup = that.alerts.map(function (alert) { return Object.assign({}, alert); });
                that.mr.close();
            },
            complete: function () {
                that.getDevicesList(that.page, that.pageSize);
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25: " + message + "\uFF01",
                });
                console.log(error.json());
                console.log(error);
            }
        });
    };
    // 删除设备弹框
    DevicesComponent.prototype.openDelDevice = function (content, item) {
        var that = this;
        this.device.itemDelId = item.id;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除设备规则
    DevicesComponent.prototype.closeDevice = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delDevice();
        }
        this.mr.close();
    };
    // 删除设备-接口处
    DevicesComponent.prototype.delDevice = function () {
        var that = this;
        var id = this.device.itemDelId;
        var flag = false;
        var pages = (this.total + this.pageSize - 1) / this.pageSize;
        if (this.page >= pages && this.deviceslist.length === 1) {
            flag = true;
        }
        this.deviceService.delDevice(id).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '删除成功！',
                });
                that.backup = that.alerts.map(function (alert) { return Object.assign({}, alert); });
            },
            complete: function () {
                if (flag) {
                    that.page = that.page - 1;
                    that.getDevicesList(that.page, that.pageSize);
                }
                else {
                    that.getDevicesList(that.page, that.pageSize);
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // position表点击事件
    DevicesComponent.prototype.bindPosition = function (position) {
        this.map.clearOverlays();
        this.bindedPosition = position;
        var point = new BMap.Point(position.point.lng, position.point.lat);
        this.map.centerAndZoom(point, 18);
        var mySquare = new _service_grad_overlay__WEBPACK_IMPORTED_MODULE_4__["GradOverlar"](point, 50, 'tag-bule');
        this.map.addOverlay(mySquare);
    };
    DevicesComponent.prototype.addBaiduMap = function () {
        var map = this.map = new BMap.Map('survey_map', {
            enableMapClick: true,
        }); // 创建地图实例
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 17); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        map.setMapStyle({ style: 'normal' });
    };
    DevicesComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    // 根据设备型号id返回设备型号名称
    DevicesComponent.prototype.modelName = function (modelId) {
        var modelName = null;
        this.deviceModels.map(function (item, i) {
            if (item.id === modelId) {
                modelName = item.name;
            }
        });
        // console.log(modelName);
        return modelName;
    };
    // 根据positionId返回指定位置点
    DevicesComponent.prototype.getPosiById = function (id) {
        var that = this;
        var curPosition;
        this.deviceService.getPosiById(id).subscribe({
            next: function (val) {
                curPosition = val;
                that.bindedPosition = val;
                console.log(val);
            },
            complete: function () {
                that.updatePosiRegion();
                that.bindPosition(curPosition);
                that.getPosiByRegionId(curPosition.regionId, 1, that.pageSizePosi);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 传入'修改设备位置点所在区域'到模态框
    DevicesComponent.prototype.updatePosiRegion = function () {
        var that = this;
        var region_id; // 当前城市id
        var crrentProvince = this.cityList[0]; // 当前省会
        for (var index = 0; index < crrentProvince.children.length; index++) {
            var element = crrentProvince.children[index];
            if (that.bindedPosition.installZoneId === element.installZoneId) {
                region_id = element.id;
            }
        }
        that.node = null; // 用于递归查询JSON树 父子节点
        that.currentCity = that.getNode(that.cityList, region_id); // 当前城市
        that.currentChildren = that.node.children; // 当前城市下的区域列表
        var area_id = that.bindedPosition.regionId; // 当前区域id
        that.node = null; // 用于递归查询JSON树 父子节点
        that.currentArea = that.getNode(that.cityList, area_id); // 当前区域i
    };
    DevicesComponent.prototype.getCity = function () {
        var that = this;
        this.deviceService.getZoneDefault().subscribe({
            next: function (val) {
                that.cityList = val.regions;
                // that.currentCity = val.zone;
                that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.currentCity = that.node;
                that.currentChildren = that.node.children;
            },
            complete: function () {
                // that.addBaiduMap(); // 创建地图
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    DevicesComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 17;
                break;
            default:
                break;
        }
        return zone;
    };
    DevicesComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    DevicesComponent.prototype.getPoint = function (baiduMap, city) {
        var that = this;
        // 创建地址解析器实例
        var myGeo = new BMap.Geocoder();
        var zoom = this.zoom = this.switchZone(city.level);
        var fullName = city.full_name;
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 选择区域
    // 选择城市
    DevicesComponent.prototype.selecteCity = function (city) {
        this.device.installZoneId = city.installZoneId; // 安装区域
        this.device.point = { lng: '', lat: '' };
        this.currentCity = city;
        this.currentChildren = city.children;
        this.currentArea = null;
        this.node = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
    };
    // 街道点击事件
    DevicesComponent.prototype.selecteblock = function (block) {
        this.queryStrPosi = '';
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.currentArea = block;
        this.device.point = { lng: '', lat: '' };
        this.pagePosi = 1;
        this.getPosiByRegionId(this.currentArea.id, this.pagePosi, this.pageSizePosi);
    };
    // 新建/修改设备中检索点击事件
    DevicesComponent.prototype.execQueryPosi = function () {
        this.pagePosi = 1;
        this.getPosiByRegionId(this.currentArea.id, this.pagePosi, this.pageSizePosi);
    };
    // 通过安装区域和检索字符串获取位置点
    DevicesComponent.prototype.getPosiByRegionId = function (regionId, page, pageSize) {
        var that = this;
        this.showPosiTable = true;
        this.deviceService.getAllPosiByRegionId(this.queryStrPosi, regionId, page, pageSize).subscribe({
            next: function (val) {
                that.posiListByRegion = val.items;
                that.total1 = val.total;
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 显示区域
    DevicesComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    DevicesComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 选择区域
    DevicesComponent.prototype.arealistMouseover = function (area) {
        this.currentBlock = area.children;
    };
    // 离开区域
    DevicesComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.currentBlock = null;
    };
    // 离开城市
    DevicesComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    DevicesComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.currentBlock = null;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], DevicesComponent.prototype, "alerts", void 0);
    DevicesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-devices',
            template: __webpack_require__(/*! ./devices.component.html */ "./src/app/home/device/devices/devices.component.html"),
            styles: [__webpack_require__(/*! ./devices.component.scss */ "./src/app/home/device/devices/devices.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"],
            _service_device_service__WEBPACK_IMPORTED_MODULE_3__["DeviceService"]])
    ], DevicesComponent);
    return DevicesComponent;
}());



/***/ }),

/***/ "./src/app/home/device/position/position.component.html":
/*!**************************************************************!*\
  !*** ./src/app/home/device/position/position.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- modal1:批量导入位置 -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">批量导入位置</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n              <img src=\"../../../../assets/imgs/num1.png\">\r\n              <label class=\"control-label c-label-long\">下载位置导入模板，批量填写信息</label>\r\n              <button type=\"button\" class=\"btn btn-outline-dark btn1\">下载</button>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <img src=\"../../../../assets/imgs/num2.png\">\r\n              <label class=\"control-label c-label-long\">上传填写好的信息表</label>\r\n              <button type=\"button\" class=\"btn btn-outline-dark btn1\">选择文件</button>\r\n          </div>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Close click')\">确认</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\"  (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n</ng-template>\r\n<!-- modal2:新建位置 -->\r\n<ng-template #contentsetPosition let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">新建位置</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"row modal-body\">\r\n        <!-- 左列 -->\r\n        <div class=\"col-12 col-md-6\">\r\n\r\n          <div class=\"form-inline padding-15\">\r\n            <span class=\"text-danger\">*</span>\r\n            <label class=\"control-label\">名称:</label>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"model.name\">\r\n          </div>\r\n          <div class=\"form-inline padding-15\">\r\n              <span class=\"text-danger\">*</span>\r\n              <label class=\"control-label\">编号:</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"model.number\">\r\n          </div>\r\n          <div class=\"form-inline padding-15\">\r\n              <span class=\"text-danger\">*</span>\r\n              <label class=\"control-label\">区域:</label>\r\n              <!-- 选择区域 -->\r\n              <div class=\"area-selection\" *ngIf=\"visible == true\">\r\n                  <!-- 城市列表 -->\r\n                  <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"citylistMouseleave()\">\r\n\r\n                    <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n                      <span class=\"filter\" *ngIf=\"currentCity\">{{currentCity.name}}</span>\r\n                      <span class=\"filter\" *ngIf=\"!currentCity\">选择城市</span>\r\n                      <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n                    </span>\r\n                    <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n                        <div class=\"dropdown_panel_inner\">\r\n                            <span class=\"menu_arrow_left\"></span>\r\n                            <dl *ngFor=\"let item of cityList\">\r\n                              <dt>{{item.name}}</dt>\r\n                              <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children;let i = index\" (click)=\"selecteCity(itemc, i)\">{{itemc.name}}</a>\r\n                              </dd>\r\n                            </dl>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                  </div>\r\n\r\n                  <!-- 区域列表 -->\r\n                  <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"arealistMouseleave()\">\r\n\r\n                    <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n                      <span class=\"filter\" *ngIf=\"!currentArea\">选择区域</span>\r\n                      <span class=\"filter\" *ngIf=\"currentArea\">{{currentArea.name}}</span>\r\n                    </span>\r\n\r\n                    <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n                        <div class=\"dropdown_panel_inner\">\r\n                            <span class=\"menu_arrow_left\"></span>\r\n\r\n                            <ul class=\"arealist\" data-type=\"area\">\r\n                              <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                                <em>不限</em>\r\n                              </li>\r\n                              <li class=\"arealist-item\" *ngFor=\"let node of currentChildren\" (mouseover)=\"arealistMouseover(node)\">\r\n                                <em>{{node.name}}</em>\r\n                              </li>\r\n                            </ul>\r\n\r\n                            <div class=\"blocklist-wrap\" *ngIf=\"currentBlockList\">\r\n                                <ul class=\"blocklist\" data-type=\"block\">\r\n                                  <li *ngFor=\"let block of currentBlockList\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n                                </ul>\r\n                          </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <!-- 手动输入坐标定位 -->\r\n          <div class=\"form-inline padding-15\">\r\n            <span class=\"text-danger\">*</span>\r\n            <label class=\"control-label\">经度:</label>\r\n            <input type=\"text\" class=\"form-control border-none\" autocomplete [(ngModel)]=\"model.point.lng\" required/>\r\n          </div>\r\n          <div class=\"form-inline padding-15\">\r\n            <span class=\"text-danger\">*</span>\r\n            <label class=\"control-label\">纬度:</label>\r\n            <input type=\"text\" class=\"form-control border-none\" autocomplete [(ngModel)]=\"model.point.lat\" required/>\r\n            <!-- <i class=\"fa fa-map-marker fa-2x mapIron\" (click)=\"addMapWithPoint()\"></i> -->\r\n          </div>\r\n          <div class=\"form-inline padding-15\">\r\n            <!-- <button class=\"btn btn-bg btn-point\" (click)=\"typeofPoint()\"\r\n              [disabled]=\"!model.point.lat || model.point.lat == '' || !model.point.lng || model.point.lng == ''\">检验坐标</button> -->\r\n            <span *ngFor=\"let mes of errorMess\" class=\"errMes\">{{mes}}</span>\r\n          </div>\r\n          <div class=\"form-inline padding-15\">\r\n              <span class=\"text-danger\">*</span>\r\n              <label class=\"control-label\">所属类型:</label>\r\n              <select name=\"profile\" [(ngModel)]=\"model.device\" (change)=\"deviceChange()\" class=\"form-control d-inline-block\"\r\n                [ngClass]=\"\">\r\n                <option *ngFor=\"let index of deviceList\" [ngValue]=\"index\">\r\n                  {{ index.name }}\r\n                </option>\r\n              </select>\r\n          </div>\r\n\r\n        </div>\r\n        <!-- 右列 -->\r\n        <div class=\"col-12 col-md-6\">\r\n            <div #map1  id=\"position_map\" class=\"map_container\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"setPosition()\" \r\n      [disabled]=\"!model.name || model.name == '' || !model.number || model.number == '' || !model.point.lat || model.point.lat == '' \r\n        || !model.point.lng || model.point.lng == '' || !model.device || model.number.length > 30 || model.name.length > 30\">确认</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\"  (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- modal2:修改位置 -->\r\n<ng-template #contentUpdataPosition let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">修改位置</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"row modal-body\">\r\n    <!-- 左列 -->\r\n    <div class=\"col-12 col-md-6\">\r\n\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">名称:</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"model.name\">\r\n      </div>\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">编号:</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"\" [(ngModel)]=\"model.number\">\r\n      </div>\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">区域:</label>\r\n        <!-- 选择区域 -->\r\n        <div class=\"area-selection\" *ngIf=\"visible == true\">\r\n          <!-- 城市列表 -->\r\n          <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"citylistMouseleave()\">\r\n\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n              <span class=\"filter\" *ngIf=\"currentCity\">{{currentCity.name}}</span>\r\n              <span class=\"filter\" *ngIf=\"!currentCity\">选择城市</span>\r\n              <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n            </span>\r\n            <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n              <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n                <dl *ngFor=\"let item of cityList\">\r\n                  <dt>{{item.name}}</dt>\r\n                  <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                    <a title=\"智慧城市\" *ngFor=\"let itemc of item.children;let i = index\" (click)=\"selecteCity(itemc, i)\">{{itemc.name}}</a>\r\n                  </dd>\r\n                </dl>\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <!-- 区域列表 -->\r\n          <div class=\"d-inline-block area-selection-block\" (mouseleave)=\"arealistMouseleave()\">\r\n\r\n            <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n              <span class=\"filter\" *ngIf=\"!currentArea\">选择区域</span>\r\n              <span class=\"filter\" *ngIf=\"currentArea\">{{currentArea.name}}</span>\r\n            </span>\r\n\r\n            <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n              <div class=\"dropdown_panel_inner\">\r\n                <span class=\"menu_arrow_left\"></span>\r\n\r\n                <ul class=\"arealist\" data-type=\"area\">\r\n                  <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                    <em>不限</em>\r\n                  </li>\r\n                  <li class=\"arealist-item\" *ngFor=\"let node of currentChildren\" (mouseover)=\"arealistMouseover(node)\">\r\n                    <em>{{node.name}}</em>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div class=\"blocklist-wrap\" *ngIf=\"currentBlockList\">\r\n                  <ul class=\"blocklist\" data-type=\"block\">\r\n                    <li *ngFor=\"let block of currentBlockList\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n                  </ul>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 手动输入坐标定位 -->\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">经度:</label>\r\n        <input type=\"text\" class=\"form-control border-none\" autocomplete [(ngModel)]=\"model.point.lng\" required/>\r\n      </div>\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">纬度:</label>\r\n        <input type=\"text\" class=\"form-control border-none\" autocomplete [(ngModel)]=\"model.point.lat\" required/>\r\n        <!-- <i class=\"fa fa-map-marker fa-2x mapIron\" (click)=\"addMapWithPoint()\"></i> -->\r\n      </div>\r\n      <div class=\"form-inline padding-15\">\r\n        <!-- <button class=\"btn btn-bg btn-point\" (click)=\"typeofPoint()\"\r\n          [disabled]=\"!model.point.lat || model.point.lat == '' || !model.point.lng || model.point.lng == ''\">检验坐标</button> -->\r\n        <span *ngFor=\"let mes of errorMess\" class=\"errMes\">{{mes}}</span>\r\n      </div>\r\n      <div class=\"form-inline padding-15\">\r\n        <span class=\"text-danger\">*</span>\r\n        <label class=\"control-label\">所属类:</label>\r\n        <select name=\"profile\" [(ngModel)]=\"model.device\" (change)=\"deviceChange()\" class=\"form-control d-inline-block\" [ngClass]=\"\">\r\n          <option *ngFor=\"let index of deviceList\" [ngValue]=\"index\">\r\n            {{ index.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n    <!-- 右列 -->\r\n    <div class=\"col-12 col-md-6\">\r\n      <div #map1 id=\"position_map\" class=\"map_container\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"updataPosition()\" [disabled]=\"!model.name || model.name == '' || \r\n      !model.number || model.number == '' || !model.point.lat || model.point.lat == '' || !model.point.lng || model.point.lng == '' \r\n      || !model.device || model.number.length > 30 || model.name.length > 30\">确认</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\"  (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n<!-- 删除位置 -->\r\n<ng-template #contentDelPosition let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal  [input]=\"modelData\" (output)=\"closePosition($event)\"></app-sq-modal>\r\n</ng-template>\r\n\r\n\r\n\r\n<div class=\"bodyofposition\">\r\n    <p *ngFor=\"let alert of alerts\" class=\"lsq-alert\">\r\n      <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n    </p>\r\n\r\n    <div class=\"card card-primary panel-default\">\r\n      <div class=\"card-header\">\r\n        <span>位置管理</span>\r\n        <div class=\" add-position\">\r\n            <a class=\" btn-a cur-pointer\" (click)=\"openAddPositions(content)\">批量导入位置</a>\r\n            <a class=\" btn-a cur-pointer\" (click)=\"openNewPosition(contentsetPosition)\">新建位置</a>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 按区域搜索位置 -->\r\n          <!-- 表单，搜索产品 -->\r\n            <!-- 搜索 -->\r\n\r\n          \r\n\r\n      <!-- 显示已有位置 -->\r\n      <div class=\"card-block\">\r\n        <form class=\"form-inline xy-pad search-form\">\r\n          <span>所属类型：</span>\r\n          <select name=\"profile\" [(ngModel)]=\"currentType\" (change)=\"deviceTypeChange()\" class=\"form-control\" style=\"margin-right: 5px;\">\r\n            <option *ngFor=\"let index of deviceTypes\" [ngValue]=\"index\">\r\n              {{ index.name }}\r\n            </option>\r\n          </select>\r\n        \r\n          <div class=\"form-group\" style=\"padding-right: 5px;\">\r\n            <input id=\"sole-input4\" [(ngModel)]=\"queryStr\" class=\"form-control searchbox-content-common\" type=\"text\" name=\"word\" \r\n              autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索编号、名称\">\r\n          </div>\r\n        \r\n          <button type=\"submit\" class=\"btn btn-bg\" (click)=\"execQuery()\">搜索</button>\r\n          <!-- <button type=\"submit\" class=\"btn btn-bg form-btn-1\" (click)=\"openNewPosition(contentsetPosition)\">批量导入位置</button>\r\n          <button type=\"submit\" class=\"btn btn-bg form-btn\" (click)=\"openNewPosition(contentsetPosition)\">新建位置</button> -->\r\n        </form>\r\n        <table class=\"table table-hover\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>序号</th>\r\n              <th>用户</th>\r\n              <th>密码</th>\r\n\r\n              <th style=\"text-align: center\">操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr *ngFor=\"let item of positionListItems; let i = index\">\r\n              <td>{{i + 1}}</td>\r\n              <td>{{item.name}}</td>\r\n              <td>{{item.password}}</td>\r\n\r\n              <td style=\"text-align: center\">\r\n                <div class=\"modify-strategy d-inline\">\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdataPosi(contentUpdataPosition, item, i)\">修改</a>\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelPosi(contentDelPosition, item, i)\">删除</a>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div *ngIf=\"positionListItems.length === 0 || !positionListItems\">无数据！</div>\r\n        <div *ngIf=\"positionListItems.length > 0\">\r\n          <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n            (pageChange)=\"pageChange()\"></ngb-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  </div>"

/***/ }),

/***/ "./src/app/home/device/position/position.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/home/device/position/position.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\nbody {\n  color: #333;\n  font-family: \"Microsoft Yahei\",微软雅黑,\"Helvetica Neue\",Arial,sans-serif;\n  font-size: 14px;\n  background: #F5F5F6; }\n.theme-bg {\n  background: #F5F5F6; }\n.theme-text {\n  color: #9BD9DD !important; }\n.sidebar-bg {\n  background: #506173; }\n.btn {\n  font-size: 14px; }\n.btn-bg {\n  background: #009CFF;\n  color: #fff; }\n.btn-bg2 {\n  background: #FFFFFF;\n  color: #000; }\n.btn-a {\n  display: inline-block;\n  padding: 5px;\n  color: #41AEE6 !important; }\n.color-btn-text {\n  color: #41AEE6; }\n.nav-item a:hover, .nav-item a:active {\n  color: #d7f8ff;\n  background-color: #476480 !important; }\n.nav {\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none; }\n.nav-tabs > li {\n  float: left;\n  margin-bottom: -1px; }\n.nav > li {\n  position: relative;\n  display: block; }\n.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {\n  color: #41AEE6;\n  cursor: default;\n  background-color: #F5F5F6;\n  border: 1px solid #ddd;\n  border-bottom-color: transparent; }\n.nav > li > a {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  font-size: 18px; }\n.panel-default {\n  padding: 2.2rem;\n  border-radius: 10px;\n  height: 100%;\n  box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n  background-color: #ffffff; }\n.car-header {\n  height: 50px; }\n.car-title {\n  font-size: 28px; }\n.dropdown_panel {\n  position: absolute;\n  z-index: 3000;\n  left: 0;\n  padding: 7px 0; }\n.dropdown_panel .dropdown_panel_inner {\n    box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n    background-color: #fff;\n    padding: 20px;\n    font-size: 12px;\n    border-radius: 4px; }\n.dropdown_panel .menu_arrow_left:before {\n    display: block;\n    border-width: 7px;\n    position: absolute;\n    top: -7px;\n    left: 7px;\n    border-style: solid dashed dashed;\n    border-color: transparent transparent #fff transparent;\n    font-size: 0;\n    line-height: 0;\n    content: \"\"; }\n.btn.btn-outline-metal {\n  color: #c4c5d6;\n  background: #ffffff;\n  border-color: #c4c5d6; }\n.btn-outline-metal.focus, .btn-outline-metal:focus, .btn-outline-metal:hover {\n  border-color: #c4c5d6;\n  background: #c4c5d6; }\n.btn.btn-outline-metal.active, .btn.btn-outline-metal.focus, .btn.btn-outline-metal:focus, .btn.btn-outline-metal:hover:not(:disabled) {\n  color: #ffffff !important; }\n.btn-outline-info {\n  color: #36a3f7;\n  background-color: transparent;\n  background-image: none;\n  border-color: #36a3f7; }\n.btn-outline-info.focus, .btn-outline-info:focus, .btn-outline-info:hover {\n  border-color: #36a3f7;\n  background: #36a3f7; }\n.btn.btn-outline-info.active, .btn.btn-outline-info.focus, .btn.btn-outline-info:focus, .btn.btn-outline-info:hover:not(:disabled) {\n  color: #ffffff !important; }\n.table.table-hover {\n  border-bottom: 1px solid #dee2e6; }\n.table-header {\n  background-color: #ccc; }\n.bs-example .pagination {\n  margin-top: 10px;\n  margin-bottom: 10px; }\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px; }\n.pagination > li {\n  display: inline; }\n.pagination > li:first-child > a, .pagination > li:first-child > span {\n  margin-left: 0;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px; }\n.pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {\n  z-index: 3;\n  color: #fff;\n  cursor: default;\n  background-color: #337ab7;\n  border-color: #337ab7; }\n.pagination > li > a, .pagination > li > span {\n  position: relative;\n  float: left;\n  padding: 6px 12px;\n  margin-left: -1px;\n  line-height: 1.42857143;\n  color: #337ab7;\n  text-decoration: none;\n  background-color: #fff;\n  border: 1px solid #ddd; }\n.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > span:focus, .pagination > li > span:hover {\n  z-index: 2;\n  color: #23527c;\n  background-color: #eee;\n  border-color: #ddd; }\n.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disabled > span:focus, .pagination > .disabled > span:hover {\n  color: #777;\n  cursor: not-allowed;\n  background-color: #fff;\n  border-color: #ddd; }\nselect.custom-select[_ngcontent-c11] {\n  margin-right: 0.5rem;\n  width: auto; }\n.custom-day[_ngcontent-c11] {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem; }\n.custom-day.focused[_ngcontent-c11] {\n  background-color: #e6e6e6; }\n.custom-day.range[_ngcontent-c11], .custom-day[_ngcontent-c11]:hover {\n  background-color: #0275d8;\n  color: white; }\n.custom-day.faded[_ngcontent-c11] {\n  background-color: rgba(2, 117, 216, 0.5); }\n.weekend[_ngcontent-c11] {\n  background-color: #f0ad4e;\n  border-radius: 1rem;\n  color: white; }\n.hidden[_ngcontent-c11] {\n  display: none; }\n.bodyofposition {\n  width: calc(100vw - 50px);\n  height: 100vh;\n  padding: 30px;\n  position: relative; }\n.card-header {\n  border-bottom: 0px;\n  position: relative; }\n.card-header .add-position {\n    margin: 0px;\n    text-align: right;\n    position: absolute;\n    right: 15px;\n    bottom: 5px; }\n.card-block {\n  margin: 5px 0px; }\n.card-block .search-form {\n    padding-bottom: 5px; }\n.search-options {\n  position: relative;\n  font-size: 14px; }\n.search-options .extral-marg {\n    margin-right: 5px;\n    margin-top: 5px; }\n.search-options .form-control {\n    font-size: 14px;\n    width: auto;\n    height: calc(1.8rem + 2px);\n    margin-right: 5px;\n    margin-top: 5px; }\n.search-options .search-icon {\n    font-size: 20px;\n    margin: 5px; }\n.modal-body .form-control {\n  font-size: 14px;\n  height: calc(1.8rem + 2px);\n  margin-bottom: 5px; }\n.modal-body .control-label {\n  width: 50px;\n  text-align: left; }\n.modal-body .c-label-long {\n  padding-left: 5px;\n  width: 225px; }\n.modal-body .posi-input {\n  text-align: center; }\n.modal-body .form-control {\n  width: 200px; }\n.modal-body .btn1 {\n  font-size: 14px;\n  margin-left: 5px; }\n.modal-body .sm-width {\n  width: 70px;\n  margin: 0 3px 5px; }\n.modal-body .mapIron {\n  color: red;\n  margin-left: 5px; }\n.modal-body .mapIron:active, .modal-body .mapIron:hover {\n  color: #920404; }\n.modal-body .map-right {\n  width: 400px;\n  padding-left: 15px; }\n.row {\n  margin: 0px; }\n.manage-class {\n  font-size: 20px;\n  padding-right: 1px;\n  cursor: pointer; }\n.manage-class:focus, .manage-class:hover {\n  background-color: #009CFF; }\n.manage-class:active {\n  background-color: #008CE6; }\n.map_container {\n  height: 300px;\n  min-width: 200px; }\n.padding-15 {\n  padding-bottom: 15px; }\n.btn-point {\n  padding: 3px 6px; }\n.errMes {\n  color: #41AEE6;\n  margin-left: 5px; }\n"

/***/ }),

/***/ "./src/app/home/device/position/position.component.ts":
/*!************************************************************!*\
  !*** ./src/app/home/device/position/position.component.ts ***!
  \************************************************************/
/*! exports provided: PositionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PositionComponent", function() { return PositionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_position_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/position.service */ "./src/app/service/position.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PositionComponent = /** @class */ (function () {
    function PositionComponent(modalService, positionService) {
        this.modalService = modalService;
        this.positionService = positionService;
        this.model = {}; // 存储数据
        this.deviceList = []; // 设备列表
        this.deviceTypes = []; // 设备列表
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点---当前城市
        this.positionListItems = []; // 位置列表
        this.pagesize = 10;
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.errorMess = []; // 经纬度错误消息
        this.alerts = [];
        this.alertsModal = [];
        this.queryStr = '';
        this.page = 1;
        this.model.point = { lng: '', lat: '' };
    }
    PositionComponent.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    PositionComponent.prototype.closeAlertModal = function (alert) {
        var index = this.alertsModal.indexOf(alert);
        this.alertsModal.splice(index, 1);
    };
    PositionComponent.prototype.reset = function () {
        this.alerts = this.backup.map(function (alert) { return Object.assign({}, alert); });
    };
    PositionComponent.prototype.ngOnInit = function () {
        this.getCity();
        this.getDevice();
        this.getPosition(0, this.page, this.pagesize);
    };
    // 检索按键点击事件
    PositionComponent.prototype.execQuery = function () {
        this.page = 1;
        this.getPosition(this.currentType.id, 1, this.pagesize);
    };
    PositionComponent.prototype.changeName = function (modelId) {
        var modelName;
        this.deviceTypes.map(function (item, i) {
            if (item.id === modelId) {
                modelName = item.name;
            }
        });
        // console.log(modelName);
        return modelName;
    };
    PositionComponent.prototype.deviceTypeChange = function () {
        this.getPosition(this.currentType.id, this.page, this.pagesize);
    };
    // 新建位置弹框
    PositionComponent.prototype.openNewPosition = function (content) {
        var _this = this;
        var that = this;
        this.errorMess = [];
        this.model.name = ''; // name
        this.model.number = ''; // number
        this.model.point = { lng: '', lat: '' }; // 坐标
        that.currentChildren = that.currentCity.children; // 当前城市下的区域列表
        that.model.installZoneId = that.currentCity.installZoneId; // 安装区域
        that.currentArea = that.currentChildren[0].children[0]; // 当前区域
        that.model.device = this.deviceList[0]; // 类型
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        this.addBaiduMap();
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            // console.log(this.closeResult);
            // that.setPosition();
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            // console.log(this.closeResult);
        });
    };
    // 新增位置信息
    PositionComponent.prototype.setPosition = function () {
        this.typeofPoint();
        if (this.errorMess[0] === '无错') {
            var that_1 = this;
            var installZoneId = this.model.installZoneId;
            var regionId = this.currentArea.id;
            var name_1 = this.model.name;
            var number = this.model.number;
            var point = this.model.point;
            var type = this.model.device.id;
            this.positionService.setPosition(installZoneId, regionId, name_1, number, point, type).subscribe({
                next: function (val) {
                    that_1.alerts.push({
                        id: 1,
                        type: 'success',
                        message: '新建成功！',
                    });
                    that_1.backup = that_1.alerts.map(function (alert) { return Object.assign({}, alert); });
                    that_1.mr.close();
                },
                complete: function () {
                    that_1.getPosition(that_1.currentType.id, that_1.page, that_1.pagesize);
                },
                error: function (error) {
                    var message = error.json().errors[0].defaultMessage;
                    that_1.alertsModal.push({
                        id: 1,
                        type: 'danger',
                        message: "\u65B0\u5EFA\u5931\u8D25: " + message + "\uFF01",
                    });
                    console.log(error.json());
                }
            });
        }
        else {
            this.alertsModal.push({
                id: 1,
                type: 'danger',
                message: '请输入正确的经纬度！',
            });
        }
    };
    // 修改位置
    PositionComponent.prototype.openUpdataPosi = function (content, item, i) {
        var _this = this;
        var that = this;
        this.errorMess = [];
        this.model.updataId = item.id;
        // this.model.installZoneId = item.installZoneId;
        this.model.installZoneId = item.installZoneId; // 安装区域
        this.model.name = item.name; // name
        this.model.number = item.number; // number
        this.model.point = item.point; // point
        var id = item.type; // 类型
        for (var index = 0; index < this.deviceList.length; index++) {
            var element = this.deviceList[index];
            if (id === element.id) {
                that.model.device = this.deviceList[index];
            }
        }
        var region_id; // 当前城市id
        var crrentProvince = this.cityList[0]; // 当前省会
        for (var index = 0; index < crrentProvince.children.length; index++) {
            var element = crrentProvince.children[index];
            if (item.installZoneId === element.installZoneId) {
                region_id = element.id;
            }
        }
        that.node = null; // 用于递归查询JSON树 父子节点
        that.currentCity = that.getNode(that.cityList, region_id); // 当前城市
        that.currentChildren = that.node.children; // 当前城市下的区域列表
        that.model.installZoneId = that.node.installZoneId; // 安装区域
        var area_id = item.regionId; // 当前区域id
        that.node = null; // 用于递归查询JSON树 父子节点
        that.currentArea = that.getNode(that.cityList, area_id); // 当前区域i
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        this.addBaiduMap();
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
            // that.updataPosition();
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 修改位置信息
    PositionComponent.prototype.updataPosition = function () {
        this.typeofPoint();
        if (this.errorMess[0] === '无错') {
            var that_2 = this;
            var id = this.model.updataId;
            var installZoneId = this.model.installZoneId;
            var regionId = this.currentArea.id;
            var name_2 = this.model.name;
            var number = this.model.number;
            var point = this.model.point;
            var type = this.model.device.id;
            this.positionService.updataPosition(id, installZoneId, regionId, name_2, number, point, type).subscribe({
                next: function (val) {
                    that_2.alerts.push({
                        id: 1,
                        type: 'success',
                        message: '修改成功！',
                    });
                    that_2.backup = that_2.alerts.map(function (alert) { return Object.assign({}, alert); });
                    that_2.mr.close();
                },
                complete: function () {
                    that_2.getPosition(that_2.currentType.id, that_2.page, that_2.pagesize);
                },
                error: function (error) {
                    var message = error.json().errors[0].defaultMessage;
                    that_2.alertsModal.push({
                        id: 1,
                        type: 'danger',
                        message: "\u4FEE\u6539\u5931\u8D25: " + message + "\uFF01",
                    });
                    console.log(error);
                }
            });
        }
        else {
            this.alertsModal.push({
                id: 1,
                type: 'danger',
                message: '请输入正确的经纬度！',
            });
        }
    };
    // 删除位置弹框
    PositionComponent.prototype.openDelPosi = function (content, item, i) {
        var that = this;
        this.model.itemDelId = item.id;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除位置规则
    PositionComponent.prototype.closePosition = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delPosition();
        }
        this.mr.close();
    };
    // 删除位置-接口处
    PositionComponent.prototype.delPosition = function () {
        var that = this;
        var id = this.model.itemDelId;
        var flag = false;
        var pages = (this.total + this.pagesize - 1) / this.pagesize;
        if (this.page >= pages && this.positionListItems.length === 1) {
            flag = true;
        }
        this.positionService.delPosition(id).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '删除成功！',
                });
                that.backup = that.alerts.map(function (alert) { return Object.assign({}, alert); });
            },
            complete: function () {
                if (flag) {
                    that.page = that.page - 1;
                    that.getPosition(that.currentType.id, that.page, that.pagesize);
                }
                else {
                    that.getPosition(that.currentType.id, that.page, that.pagesize);
                }
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alerts.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25: " + message + "\uFF01",
                });
                console.log(error);
            }
        });
    };
    // 获取位置
    PositionComponent.prototype.getPosition = function (type, page, pagesize) {
        var that = this;
        this.positionService.getPosition(this.queryStr, type, page, pagesize).subscribe({
            next: function (val) {
                that.positionList = val;
                that.total = val.total;
                that.positionListItems = val.items;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 分页
    PositionComponent.prototype.pageChange = function () {
        this.getPosition(this.currentType.id, this.page, this.pagesize);
    };
    // 获取设备列表
    PositionComponent.prototype.getDevice = function () {
        var that = this;
        this.positionService.getDevice().subscribe({
            next: function (val) {
                that.deviceList = val;
                that.model.device = val[0];
                that.deviceTypes = val.map(function (item) { return Object.assign({}, item); });
                that.deviceTypes.unshift({ id: 0, name: '不限' }); // 所有项
                that.currentType = that.deviceTypes[0];
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 选择设备
    PositionComponent.prototype.deviceChange = function () {
        console.log(this.model.device);
    };
    // 获取城市列表
    PositionComponent.prototype.getCity = function () {
        var that = this;
        this.positionService.getZoneDefault().subscribe({
            next: function (val) {
                that.cityList = val.regions;
                that.zoom = that.switchZone(val.zone.level);
                that.currentCity = that.getNode(that.cityList, val.zone.region_id); // 当前城市
                that.currentChildren = that.currentCity.children; // 当前城市下的区域列表
                that.model.installZoneId = that.currentCity.installZoneId; // 安装区域
                that.currentArea = that.currentChildren[0].children[0]; // 当前区域
            },
            complete: function () {
                //  that.addBaiduMap(); // 创建地图
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    PositionComponent.prototype.openAddPositions = function (content) {
        var _this = this;
        var that = this;
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    PositionComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    // 添加地图实例
    PositionComponent.prototype.addBaiduMap = function () {
        var map = this.map = new BMap.Map('position_map', {
            enableMapClick: true,
        }); // 创建地图实例
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        map.setMapStyle({ style: 'normal' });
        this.mapClickOff(map);
    };
    // 监控-点击地图事件
    PositionComponent.prototype.mapClickOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('click', function (e) {
            that.model.point = e.point;
            // console.log(typeof(that.model.point.lat));
        });
    };
    PositionComponent.prototype.typeofPoint = function () {
        var that = this;
        this.errorMess = [];
        var str1 = '纬度';
        var str2 = '经度';
        this.validPoint(this.model.point.lat, str1);
        this.validPoint(this.model.point.lng, str2);
        if (this.errorMess.length <= 0) {
            that.errorMess.push('无错');
        }
    };
    // 验证坐标输入合法性
    PositionComponent.prototype.validPoint = function (lat, str) {
        var maxValue;
        if (str === '纬度') {
            maxValue = 90;
        }
        else {
            maxValue = 180;
        }
        var that = this;
        var errorMes = ''; // 错误信息提示
        var latNum = Number(lat);
        var latStr = latNum.toString();
        if (lat && latStr === 'NaN') {
            errorMes = str + '数错误！';
            // console.log(errorMes);
        }
        else if (lat && latStr !== 'NaN') {
            var pointArray = latStr.split('.');
            if (Number(pointArray[0]) >= -maxValue && Number(pointArray[0]) <= maxValue) {
                if (pointArray[1].length > 6) {
                    errorMes = str + '取小数点后6位！';
                    var term = pointArray[1].slice(0, 6);
                    pointArray[1] = term;
                }
                if (str === '纬度') {
                    that.model.point.lat = pointArray[0] + '.' + pointArray[1];
                }
                else {
                    that.model.point.lng = pointArray[0] + '.' + pointArray[1];
                }
            }
            else {
                errorMes = str + '超出范围！';
            }
        }
        errorMes === '' ? errorMes = '' : this.errorMess.push(errorMes);
    };
    PositionComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    PositionComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    PositionComponent.prototype.getPoint = function (baiduMap, city) {
        var that = this;
        // 创建地址解析器实例
        var myGeo = new BMap.Geocoder();
        var zoom = this.zoom = this.switchZone(city.level);
        var fullName = city.full_name;
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 选择区域
    // 选择城市
    PositionComponent.prototype.selecteCity = function (city, i) {
        this.model.installZoneId = city.installZoneId; // 安装区域
        this.model.point = { lng: '', lat: '' };
        this.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.currentChildren = city.children;
        this.currentArea = null;
    };
    PositionComponent.prototype.selecteblock = function (block) {
        this.currentArea = block;
        this.model.point = { lng: '', lat: '' };
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
    };
    // 显示区域
    PositionComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    PositionComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 选择区域
    PositionComponent.prototype.arealistMouseover = function (area) {
        this.currentBlockList = area.children;
    };
    // 离开区域
    PositionComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.currentBlockList = null;
    };
    // 离开城市
    PositionComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    PositionComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.currentBlockList = null;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map1'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], PositionComponent.prototype, "map_container", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], PositionComponent.prototype, "alerts", void 0);
    PositionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-position',
            template: __webpack_require__(/*! ./position.component.html */ "./src/app/home/device/position/position.component.html"),
            styles: [__webpack_require__(/*! ./position.component.scss */ "./src/app/home/device/position/position.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_position_service__WEBPACK_IMPORTED_MODULE_2__["PositionService"]])
    ], PositionComponent);
    return PositionComponent;
}());



/***/ }),

/***/ "./src/app/home/device/product/product.component.html":
/*!************************************************************!*\
  !*** ./src/app/home/device/product/product.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- modal:新建产品 -->\r\n<ng-template #contentAdd let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">新建产品</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body add-product-modal\">\r\n    <!-- <p>One fine body&hellip;</p> -->\r\n      <!-- 左列 -->\r\n      <div class=\"row center-align\">\r\n        <div class=\"modal-col\">\r\n          <div class=\"form-inline\">\r\n            <label class=\"margin-bottom-15 label-left\">产品名称:</label>\r\n            <input type=\"text\" class=\"form-control form-control-left\" id=\"add-product-name\" placeholder=\"\" [(ngModel)]=\"model.name\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n            <label class=\"margin-bottom-15 label-left\">产品描述:</label>\r\n            <input type=\"text\" class=\"form-control form-control-left\" id=\"add-product-name\" placeholder=\"\" [(ngModel)]=\"model.description\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n            <label class=\"margin-bottom-15 label-left\">产品描述:</label>\r\n            <select name=\"profile\" [(ngModel)]=\"model.device\"  class=\"form-control\" style=\"margin-right: 15px;height: 100%;\">\r\n              <option *ngFor=\"let index of deviceList\" [ngValue]=\"index\">\r\n                {{ index.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <!-- <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">制造商:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">制造商联系方式:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">PRODUCTKEY:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">PRODUCTSECRET:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div> -->\r\n        </div>\r\n        <!-- 右列 -->\r\n        <!-- <div class=\"modal-col\">\r\n          <label class=\"control-label\">参数：</label>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\">输入参数</label>\r\n              <div><a class=\"\" (click)=\"openAddParams(content2)\"><span style=\"color:blue\">+增加参数</span></a></div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\">增加参数</label>\r\n              <div><a class=\"\" (click)=\"openAddParams(content2)\"><span style=\"color:blue\">+增加参数</span></a></div>\r\n          </div>\r\n        </div> -->\r\n\r\n    </div>\r\n</div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"setModel()\" \r\n    [disabled]=\"!model.name || model.name == '' || !model.description || model.description == '' || model.name.length > 30 || \r\n      model.description.length > 40\">确认</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- modal:修改产品 -->\r\n<ng-template #contentUpdate let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">新建产品</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body add-product-modal\">\r\n    <!-- <p>One fine body&hellip;</p> -->\r\n    <!-- 左列 -->\r\n    <div class=\"row center-align\">\r\n      <div class=\"modal-col\">\r\n        <div class=\"form-inline\">\r\n          <label class=\"margin-bottom-15 label-left\">产品名称:</label>\r\n          <input type=\"text\" class=\"form-control form-control-left\" id=\"add-product-name\" placeholder=\"\" [(ngModel)]=\"model.name\">\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <label class=\"margin-bottom-15 label-left\">产品描述:</label>\r\n          <input type=\"text\" class=\"form-control form-control-left\" id=\"add-product-name\" placeholder=\"\" [(ngModel)]=\"model.description\">\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <label class=\"margin-bottom-15 label-left\">产品描述:</label>\r\n          <select name=\"profile\" [(ngModel)]=\"model.device\" class=\"form-control\" style=\"margin-right: 15px;height: 100%;\">\r\n            <option *ngFor=\"let index of deviceList\" [ngValue]=\"index\">\r\n              {{ index.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <!-- <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">制造商:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">制造商联系方式:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">PRODUCTKEY:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-inline\">\r\n              <label class=\"control-label label-left\">PRODUCTSECRET:</label>\r\n              <input type=\"text\" class=\"form-control form-control-left\" id=\"\" placeholder=\"\">\r\n          </div> -->\r\n      </div>\r\n      <!-- 右列 -->\r\n      <!-- <div class=\"modal-col\">\r\n          <label class=\"control-label\">参数：</label>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\">输入参数</label>\r\n              <div><a class=\"\" (click)=\"openAddParams(content2)\"><span style=\"color:blue\">+增加参数</span></a></div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\">增加参数</label>\r\n              <div><a class=\"\" (click)=\"openAddParams(content2)\"><span style=\"color:blue\">+增加参数</span></a></div>\r\n          </div>\r\n        </div> -->\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"updateModel()\" [disabled]=\"!model.name || model.name == '' || \r\n      !model.description || model.description == '' || model.name.length > 30 || model.description.length > 40\">确认</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\"  (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- 删除位置 -->\r\n<ng-template #contentDel let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal [input]=\"modelData\" (output)=\"closeModal($event)\"></app-sq-modal>\r\n</ng-template>\r\n\r\n\r\n<!-- modal下modal:增加参数 -->\r\n<ng-template #content2 class=\"modal1\" let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">新建参数</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\"><span style=\"color:red\">*</span>参数名称</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\"><span style=\"color:red\">*</span>标识符</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\"><span style=\"color:red\">*</span>数据类型</label>\r\n              <select class=\"form-control\">\r\n                <option>int32</option>\r\n                <option>float</option>\r\n                <option>double</option>\r\n                <option>enum</option>\r\n                <option>bool</option>\r\n                <option>text</option>\r\n                <option>date</option>\r\n                <option>array</option>\r\n              </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\"><span style=\"color:red\">*</span>取值范围：</label>\r\n              <div class=\"form-inline\">\r\n                <input type=\"text\" class=\"form-control sm-width\" id=\"\" placeholder=\"\">\r\n                <span class=\"ssm-width\">~</span>\r\n                <input type=\"text\" class=\"form-control sm-width\" id=\"\" placeholder=\"\">\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\"><span style=\"color:red\">*</span>分辨率</label>\r\n              <div>\r\n                <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"\">\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <label class=\"control-label\">单位：</label>\r\n              <div>\r\n                  <select class=\"form-control\">\r\n                      <option>无</option>\r\n                      <option>米/m</option>\r\n                      <option>千米/km</option>\r\n                      <option>分米/dm</option>\r\n                      <option>厘米/cm</option>\r\n                      <option>毫米/mm</option>\r\n                      <option>微米/μm</option>\r\n                      <option>纳米/nm</option>\r\n                      <option>...</option>\r\n                    </select>\r\n              </div>\r\n          </div>\r\n  \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Close click')\">确认</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\"  (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- 产品管理页面 -->\r\n<div class=\"bodyofproduct\">\r\n      <p *ngFor=\"let alert of alerts\" class=\"lsq-alert\">\r\n        <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n      </p>\r\n    <!-- 卡片形式 -->\r\n    <div class=\"card card-primary panel-default\">\r\n      <div class=\"card-header\">\r\n        <span>产品管理</span>\r\n        <div class=\"card-block add-product\">\r\n          <a class=\"cur-pointer theme-text btn-a\" (click)=\"openNewProduct(contentAdd)\">新建产品</a>\r\n        </div>\r\n      </div>\r\n      <!-- 搜索产品 -->\r\n      <div class=\"row card-block search-product\">\r\n          <!-- 表单，搜索产品 -->\r\n          <form class=\"form-inline search-options\">\r\n            <span>所属类型：</span>\r\n            <select name=\"profile\" [(ngModel)]=\"currentType\" (change)=\"deviceTypeChange()\" class=\"form-control\">\r\n              <option *ngFor=\"let index of deviceTypes\" [ngValue]=\"index\">\r\n                {{ index.name }}\r\n              </option>\r\n            </select>\r\n            <!-- 日期 -->\r\n            <!-- <input type=\"date\" class=\"form-control\" value=\"2018-06-01\"/> -->\r\n            <!-- 输入框 -->\r\n            <div class=\"form-group inner-addon left-addon \">\r\n                <div class=\"form-group\">\r\n                  <!-- <i class=\"fa fa-search search-icon\"></i> -->\r\n                  <!-- <input type=\"text\" class=\"form-control border-none\" name=\"search-content\" id=\"\" placeholder=\"{{'XXX'}}\"/> -->\r\n                  <input id=\"sole-input3\" [(ngModel)]=\"queryStr\" class=\"form-control searchbox-content-common\" type=\"text\" \r\n                    name=\"word\" autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索名称、描述\">\r\n                </div>\r\n            </div>\r\n            <button class=\"btn btn-bg\" (click)=\"execQuery()\">搜索</button>\r\n          </form>\r\n      </div>\r\n\r\n      <!-- 显示已有产品 -->\r\n      <div class=\"card-block\">\r\n        <table class=\"table table-hover\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>序号</th>\r\n              <th>产品名称</th>\r\n              <th>产品描述</th>\r\n              <th>所属类型</th>\r\n              <th style=\"text-align: center\">操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr *ngFor=\"let item of productListItems; let i = index\">\r\n              <td>{{i + 1}}</td>\r\n              <td>{{item.name}}</td>\r\n              <td>{{item.description}}</td>\r\n              <td>{{changeName(item.type)}}</td>\r\n              <td style=\"text-align: center\">\r\n                <div class=\"modify-strategy d-inline\">\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdataModal(contentUpdate, item)\">修改</a>\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelModal(contentDel, item)\">删除</a>\r\n                </div>\r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div *ngIf=\"productListItems.length === 0 || !productListItems\">无数据！</div>\r\n        <div *ngIf=\"productListItems.length > 0\">\r\n          <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n            (pageChange)=\"pageChange()\"></ngb-pagination>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/home/device/product/product.component.scss":
/*!************************************************************!*\
  !*** ./src/app/home/device/product/product.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\nbody {\n  color: #333;\n  font-family: \"Microsoft Yahei\",微软雅黑,\"Helvetica Neue\",Arial,sans-serif;\n  font-size: 14px;\n  background: #F5F5F6; }\n.theme-bg {\n  background: #F5F5F6; }\n.theme-text {\n  color: #9BD9DD !important; }\n.sidebar-bg {\n  background: #506173; }\n.btn {\n  font-size: 14px; }\n.btn-bg {\n  background: #009CFF;\n  color: #fff; }\n.btn-bg2 {\n  background: #FFFFFF;\n  color: #000; }\n.btn-a {\n  display: inline-block;\n  padding: 5px;\n  color: #41AEE6 !important; }\n.color-btn-text {\n  color: #41AEE6; }\n.nav-item a:hover, .nav-item a:active {\n  color: #d7f8ff;\n  background-color: #476480 !important; }\n.nav {\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none; }\n.nav-tabs > li {\n  float: left;\n  margin-bottom: -1px; }\n.nav > li {\n  position: relative;\n  display: block; }\n.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {\n  color: #41AEE6;\n  cursor: default;\n  background-color: #F5F5F6;\n  border: 1px solid #ddd;\n  border-bottom-color: transparent; }\n.nav > li > a {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  font-size: 18px; }\n.panel-default {\n  padding: 2.2rem;\n  border-radius: 10px;\n  height: 100%;\n  box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n  background-color: #ffffff; }\n.car-header {\n  height: 50px; }\n.car-title {\n  font-size: 28px; }\n.dropdown_panel {\n  position: absolute;\n  z-index: 3000;\n  left: 0;\n  padding: 7px 0; }\n.dropdown_panel .dropdown_panel_inner {\n    box-shadow: 0px 1px 15px 1px rgba(69, 65, 78, 0.08);\n    background-color: #fff;\n    padding: 20px;\n    font-size: 12px;\n    border-radius: 4px; }\n.dropdown_panel .menu_arrow_left:before {\n    display: block;\n    border-width: 7px;\n    position: absolute;\n    top: -7px;\n    left: 7px;\n    border-style: solid dashed dashed;\n    border-color: transparent transparent #fff transparent;\n    font-size: 0;\n    line-height: 0;\n    content: \"\"; }\n.btn.btn-outline-metal {\n  color: #c4c5d6;\n  background: #ffffff;\n  border-color: #c4c5d6; }\n.btn-outline-metal.focus, .btn-outline-metal:focus, .btn-outline-metal:hover {\n  border-color: #c4c5d6;\n  background: #c4c5d6; }\n.btn.btn-outline-metal.active, .btn.btn-outline-metal.focus, .btn.btn-outline-metal:focus, .btn.btn-outline-metal:hover:not(:disabled) {\n  color: #ffffff !important; }\n.btn-outline-info {\n  color: #36a3f7;\n  background-color: transparent;\n  background-image: none;\n  border-color: #36a3f7; }\n.btn-outline-info.focus, .btn-outline-info:focus, .btn-outline-info:hover {\n  border-color: #36a3f7;\n  background: #36a3f7; }\n.btn.btn-outline-info.active, .btn.btn-outline-info.focus, .btn.btn-outline-info:focus, .btn.btn-outline-info:hover:not(:disabled) {\n  color: #ffffff !important; }\n.table.table-hover {\n  border-bottom: 1px solid #dee2e6; }\n.table-header {\n  background-color: #ccc; }\n.bs-example .pagination {\n  margin-top: 10px;\n  margin-bottom: 10px; }\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px; }\n.pagination > li {\n  display: inline; }\n.pagination > li:first-child > a, .pagination > li:first-child > span {\n  margin-left: 0;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px; }\n.pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {\n  z-index: 3;\n  color: #fff;\n  cursor: default;\n  background-color: #337ab7;\n  border-color: #337ab7; }\n.pagination > li > a, .pagination > li > span {\n  position: relative;\n  float: left;\n  padding: 6px 12px;\n  margin-left: -1px;\n  line-height: 1.42857143;\n  color: #337ab7;\n  text-decoration: none;\n  background-color: #fff;\n  border: 1px solid #ddd; }\n.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > span:focus, .pagination > li > span:hover {\n  z-index: 2;\n  color: #23527c;\n  background-color: #eee;\n  border-color: #ddd; }\n.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disabled > span:focus, .pagination > .disabled > span:hover {\n  color: #777;\n  cursor: not-allowed;\n  background-color: #fff;\n  border-color: #ddd; }\nselect.custom-select[_ngcontent-c11] {\n  margin-right: 0.5rem;\n  width: auto; }\n.custom-day[_ngcontent-c11] {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem; }\n.custom-day.focused[_ngcontent-c11] {\n  background-color: #e6e6e6; }\n.custom-day.range[_ngcontent-c11], .custom-day[_ngcontent-c11]:hover {\n  background-color: #0275d8;\n  color: white; }\n.custom-day.faded[_ngcontent-c11] {\n  background-color: rgba(2, 117, 216, 0.5); }\n.weekend[_ngcontent-c11] {\n  background-color: #f0ad4e;\n  border-radius: 1rem;\n  color: white; }\n.hidden[_ngcontent-c11] {\n  display: none; }\n.bodyofproduct {\n  width: calc(100vw - 50px);\n  height: 100vh;\n  padding: 30px;\n  position: relative; }\n.card-header {\n  border-bottom: 0px;\n  position: relative; }\n.add-product {\n  margin: 0px;\n  text-align: right;\n  position: absolute;\n  right: 5px;\n  bottom: 5px; }\n.card-block {\n  margin: 5px 0px 0px;\n  min-height: 38px; }\n.card-primary {\n  margin-bottom: 15px; }\n.search-product {\n  font-size: 14px;\n  min-height: 38px; }\n.search-product .search-options .form-control {\n    font-size: 14px;\n    width: auto;\n    height: 38px;\n    margin-right: 5px; }\n.search-product .search-options .search-icon {\n    font-size: 20px;\n    margin: 5px; }\n.btn-search {\n  font-size: 14px;\n  margin-right: 5px;\n  margin-top: 5px;\n  background-color: #009CFF; }\n.btn-search:focus, .btn-search:hover, .btn-search:active {\n  background-color: #008CE6; }\n.modal-body .form-control {\n  font-size: 14px;\n  height: calc(1.8rem + 2px); }\n.modal-body .form-control-left {\n  margin-bottom: 5px;\n  width: 200px; }\n.modal-body .label-left {\n  margin-right: 5px;\n  text-align: right;\n  width: 121px; }\n.modal-body .modal-col {\n  margin-left: 15px; }\n.modal-body .sm-width {\n  width: 168px; }\n.modal-body .ssm-width {\n  width: 11px;\n  margin: 0 5px 0; }\n.add-product-modal {\n  text-align: center;\n  width: 100%; }\n.add-product-modal .center-align {\n    margin: 0 auto;\n    width: 500px; }\n.manage-class {\n  font-size: 20px;\n  padding-right: 1px;\n  cursor: pointer; }\n.manage-class:focus, .manage-class:hover {\n  background-color: #009CFF; }\n.manage-class:active {\n  background-color: #008CE6; }\n.margin-bottom-15 {\n  margin-bottom: 15px;\n  padding: 5px; }\n"

/***/ }),

/***/ "./src/app/home/device/product/product.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/home/device/product/product.component.ts ***!
  \**********************************************************/
/*! exports provided: ProductComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductComponent", function() { return ProductComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_product_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/product.service */ "./src/app/service/product.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ProductComponent = /** @class */ (function () {
    function ProductComponent(modalService, productService) {
        this.modalService = modalService;
        this.productService = productService;
        this.model = {};
        this.productListItems = [];
        this.pagesize = 10;
        this.type = 0;
        this.deviceList = []; // 设备列表
        this.deviceTypes = []; // 设备列表
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.alerts = [];
        this.alertsModal = [];
        this.page = 1;
        this.queryStr = '';
    }
    ProductComponent.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    ProductComponent.prototype.closeAlertModal = function (alert) {
        var index = this.alertsModal.indexOf(alert);
        this.alertsModal.splice(index, 1);
    };
    ProductComponent.prototype.reset = function () {
        this.alerts = this.backup.map(function (alert) { return Object.assign({}, alert); });
    };
    ProductComponent.prototype.ngOnInit = function () {
        this.getDevice();
        this.getModel(0, this.page, this.pagesize);
    };
    // 产品关键词检索 点击事件
    ProductComponent.prototype.execQuery = function () {
        this.page = 1;
        this.getModel(this.currentType.id, 1, this.pagesize);
    };
    // 获取设备型号
    ProductComponent.prototype.getModel = function (type, page, pagesize) {
        var that = this;
        this.productService.getModel(this.queryStr, type, page, pagesize).subscribe({
            next: function (val) {
                that.productList = val;
                that.total = val.total;
                that.productListItems = val.items;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // fenye
    ProductComponent.prototype.pageChange = function () {
        this.getModel(this.currentType.id, this.page, this.pagesize);
    };
    // 获取设备列表
    ProductComponent.prototype.getDevice = function () {
        var that = this;
        this.productService.getDevice().subscribe({
            next: function (val) {
                that.deviceList = val;
                that.model.device = val[0];
                that.deviceTypes = val.map(function (item) { return Object.assign({}, item); });
                that.deviceTypes.unshift({ id: 0, name: '不限' }); // 所有项
                that.currentType = that.deviceTypes[0];
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    ProductComponent.prototype.deviceTypeChange = function () {
        this.getModel(this.currentType.id, this.page, this.pagesize);
    };
    ProductComponent.prototype.changeName = function (modelId) {
        var modelName;
        this.deviceTypes.map(function (item, i) {
            if (item.id === modelId) {
                modelName = item.name;
            }
        });
        return modelName;
    };
    // 打开心建产品弹框
    ProductComponent.prototype.openNewProduct = function (content) {
        var _this = this;
        var that = this;
        this.model.name = ''; // name
        this.model.description = ''; // description
        this.model.device = this.deviceList[0]; // 类型
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            // console.log(this.closeResult);
            // that.setModel();
        }, function (reason) {
            // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;
            // console.log(this.closeResult);
        });
    };
    // 添加设备型号
    ProductComponent.prototype.setModel = function () {
        var that = this;
        var name = this.model.name;
        var description = this.model.description;
        var type = this.model.device.id;
        var isGateway = type === 1 ? true : false;
        this.productService.setModel(name, description, type, isGateway).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '新建成功！',
                });
                that.mr.close();
            },
            complete: function () {
                that.getModel(that.currentType.id, that.page, that.pagesize);
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u65B0\u5EFA\u5931\u8D25: " + message + "\uFF01",
                });
                console.log(error.json());
            }
        });
    };
    // 修改产品型号
    ProductComponent.prototype.openUpdataModal = function (content, item) {
        var _this = this;
        var that = this;
        this.model.name = item.name; // name
        this.model.description = item.description; // description
        this.model.updateItemId = item.id; // id
        var id = item.type; // 类型
        for (var index = 0; index < this.deviceList.length; index++) {
            var element = this.deviceList[index];
            if (id === element.id) {
                that.model.device = this.deviceList[index];
            }
        }
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            // console.log(this.closeResult);
            // that.updateModel();
        }, function (reason) {
            // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;
            // console.log(this.closeResult);
        });
    };
    // 修改设备型号
    ProductComponent.prototype.updateModel = function () {
        var that = this;
        var id = this.model.updateItemId;
        var name = this.model.name;
        var description = this.model.description;
        var type = this.model.device.id;
        var isGateway = type === 1 ? true : false;
        this.productService.updateModel(id, name, description, type, isGateway).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '修改成功！',
                });
                that.mr.close();
            },
            complete: function () {
                that.getModel(that.currentType.id, that.page, that.pagesize);
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25: " + message + "\uFF01",
                });
                console.log(error.json());
                console.log(error);
            }
        });
    };
    // 删除设备型号弹框
    ProductComponent.prototype.openDelModal = function (content, item) {
        var that = this;
        this.model.itemDelId = item.id;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除设备型号
    ProductComponent.prototype.closeModal = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delModal();
        }
        this.mr.close();
    };
    // 删除设备型号-接口处
    ProductComponent.prototype.delModal = function () {
        var that = this;
        var id = this.model.itemDelId;
        var flag = false;
        var pages = (this.total + this.pagesize - 1) / this.pagesize;
        if (this.page >= pages && this.productListItems.length === 1) {
            flag = true;
        }
        this.productService.delModel(id).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '删除成功！',
                });
                that.backup = that.alerts.map(function (alert) { return Object.assign({}, alert); });
            },
            complete: function () {
                if (flag) {
                    that.page = that.page - 1;
                    that.getModel(that.currentType.id, that.page, that.pagesize);
                }
                else {
                    that.getModel(that.currentType.id, that.page, that.pagesize);
                }
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alerts.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25: " + message,
                });
                console.log(error);
            }
        });
    };
    ProductComponent.prototype.openAddParams = function (content) {
        var _this = this;
        var that = this;
        this.modalService.open(content, { windowClass: 'md-modal' }).result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    ProductComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], ProductComponent.prototype, "alerts", void 0);
    ProductComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-product',
            template: __webpack_require__(/*! ./product.component.html */ "./src/app/home/device/product/product.component.html"),
            styles: [__webpack_require__(/*! ./product.component.scss */ "./src/app/home/device/product/product.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_product_service__WEBPACK_IMPORTED_MODULE_2__["ProductService"]])
    ], ProductComponent);
    return ProductComponent;
}());



/***/ }),

/***/ "./src/app/home/home.component.html":
/*!******************************************!*\
  !*** ./src/app/home/home.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"home\">\r\n  <div [ngClass]=\"{'sidebar-open':open === true,'sidebar-collapse':!open}\" class=\"wrap\">\r\n\r\n      <!-- 侧边菜单 -->\r\n      <aside class=\"sidebar-dark-primary main-sidebar sidebar-bg\" *ngIf=\"visible == true\">\r\n        <!-- logo -->\r\n        <div class=\"nav-log d-inline-block display-inoneline\">\r\n          <img class=\"logo\" src=\"../../assets/imgs/logo.png\" alt=\"logo\">\r\n          <span class=\"logo-title\">新阳蓝光</span>\r\n        </div>\r\n        <!-- ymZhao-aside下额外包一层，以隐藏滚动条 -->\r\n        <div class=\"sidebar-inner\">\r\n          <ul class=\"first-menu\">\r\n            <!-- 一级菜单 -->\r\n            <li *ngFor=\"let routes of routeTree \" class=\"cur-pointer nav-item \">\r\n              <!-- 没有子菜单 -->\r\n              <a *ngIf=\"!routes.children\" [routerLink]=\"[routes.routeLink]\" routerLinkActive=\"active\" class=\"nav-link\">\r\n                <i class={{routes.icon}}></i>\r\n                <p class=\"p-left\">{{routes.routeTitel}}</p>\r\n              </a>\r\n              <!-- 有子菜单 -->\r\n              <a *ngIf=\"routes.children\" (click)=\"routes.isCollapsed = !routes.isCollapsed\" class=\"nav-link\">\r\n                <i class={{routes.icon}}></i>\r\n                <p class=\"p-left\">{{routes.routeTitel}}</p>\r\n                <span class=\"angle\" *ngIf=\"routes.isCollapsed\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>\r\n                <span class=\"angle\" *ngIf=\"!routes.isCollapsed\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></span>\r\n              </a>\r\n              <!-- 二级菜单 -->\r\n              <ul [ngbCollapse]=\"routes.isCollapsed\" *ngIf=\"routes.children\" class=\"sec-menu\">\r\n                <li *ngFor=\"let children of routes.children\" class=\"cur-pointer nav-item \">\r\n                  <a [routerLink]=\"[children.routeLink]\" routerLinkActive=\"active\" class=\"nav-link\">\r\n                    <i class={{children.icon}}></i>\r\n                    <p class=\"p-left\">{{children.routeTitel}}</p>\r\n                  </a>\r\n                </li>\r\n        \r\n              </ul>\r\n            </li>\r\n        \r\n          </ul>\r\n        </div>\r\n\r\n        <!-- 用户 -->\r\n        <div ngbDropdown class=\"dropup nav-user\">\r\n          <div class=\"cl-blue display-inoneline\" id=\"dropdownBasic2\" ngbDropdownToggle>\r\n            <i class=\"fa fa-user-circle-o nav-icon cl-blue\" aria-hidden=\"true\"></i>\r\n            <span class=\"currentUsername\">{{loginName}}</span>\r\n          </div>\r\n          <ul ngbDropdownMenu aria-labelledby=\"dropdownBasic2\" class=\"user-menus\">\r\n            <li class=\"dropdown-item\">\r\n              <span class=\"dropdown-menu-list\">用户管理</span>\r\n            </li>\r\n            <li class=\"dropdown-item\">\r\n              <a (click)=\"logout()\" class=\"cur-pointer \">\r\n                <span class=\"dropdown-menu-list\">退出登录</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        \r\n      </aside>\r\n      \r\n      <!-- Main content -->\r\n      <section class=\"content\">\r\n        <div class=\"container-fluid\">\r\n          <div cllas=\"row\">\r\n            <div class=\"col-12 col-md-12 \" [ngClass]=\"{'sidebar-open':open === true,'sidebar-collapse':!open,'header-margin':visible == true}\">\r\n              <router-outlet ></router-outlet>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/home/home.component.scss":
/*!******************************************!*\
  !*** ./src/app/home/home.component.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n.home .wrap {\n  overflow-x: hidden; }\n@media (max-width: 576px) {\n  .home .logo {\n    display: none; }\n  .home .sidebar-collapse .sidebar-dark-primary {\n    left: -250px; }\n  .home .header-margin.sidebar-collapse {\n    margin-left: 0 !important; } }\n.home .header-margin {\n  margin-left: 50px; }\n.home .nav-user {\n  position: absolute;\n  bottom: 20px;\n  left: 0px; }\n.home .nav-user .user-menus {\n    font-size: 14px; }\n.home .nav-user .currentUsername {\n    color: #9BD9DD;\n    padding-left: 20px;\n    font-size: 20px; }\n.home .nav-user .dropdown-item {\n    color: #9BD9DD; }\n.home .nav-user .dropdown-item:hover, .home .nav-user .dropdown-item:active {\n    color: #d7f8ff;\n    background-color: #476480; }\n.home .display-inoneline {\n  white-space: nowrap;\n  overflow: hidden; }\n.home .sidebar-inner {\n  position: absolute;\n  left: 0;\n  top: 80px;\n  right: -17px;\n  bottom: 0;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  height: calc(100vh - 140px); }\n.home .sidebar-dark-primary {\n  overflow: hidden;\n  box-shadow: 0px 6px 18px #e5e5e5;\n  height: calc(100vh);\n  position: fixed;\n  z-index: 4000; }\n.home .sidebar-dark-primary .nav-link {\n    padding: 0;\n    display: block;\n    position: relative;\n    height: 56px;\n    line-height: 56px; }\n.home .sidebar-dark-primary .angle {\n    position: absolute;\n    right: 34px; }\n.home .sidebar-dark-primary .nav-icon {\n    text-align: center;\n    width: 1.6rem;\n    font-size: 1.2rem;\n    margin-right: .2rem;\n    position: relative;\n    left: 11px; }\n.home .sidebar-dark-primary .nav-icon-s {\n    text-align: center;\n    width: 1.6rem;\n    font-size: 1rem;\n    margin-right: .2rem;\n    position: relative;\n    left: 12px; }\n.home .sidebar-dark-primary .b-bottom {\n    border-bottom: 1px solid #dee2e6; }\n.home .sidebar-dark-primary .b-top {\n    border-top: 1px solid #dee2e6; }\n.home .sidebar-dark-primary .p-left {\n    padding-left: 36px; }\n.home .sidebar-dark-primary p {\n    display: inline-block; }\n.home .sidebar-dark-primary ul {\n    list-style: none;\n    padding-left: 0;\n    white-space: nowrap; }\n.home .sidebar-dark-primary .nav-item:hover > .nav-link {\n    color: #d7f8ff;\n    background-color: #476480; }\n.home .sidebar-dark-primary .first-menu a {\n    color: #9BD9DD;\n    font-weight: bold;\n    border-radius: 4px;\n    white-space: nowrap;\n    overflow: hidden; }\n.home .sidebar-dark-primary .sec-menu a {\n    color: #9BD9DD;\n    font-size: 12px;\n    border-radius: 4px;\n    white-space: nowrap;\n    overflow: hidden; }\n.home .sidebar-dark-primary .nav-log {\n    overflow: hidden; }\n.home .sidebar-dark-primary .logo-title {\n    color: #9BD9DD;\n    padding-left: 20px;\n    font-size: 20px;\n    line-height: 66px; }\n.home .main-sidebar, .home .main-sidebar:before {\n  transition: margin-left 0.3s ease-in-out, width 0.3s ease-in-out;\n  width: 250px; }\n@media screen and (prefers-reduced-motion: reduce) {\n  .home .main-sidebar, .home .main-sidebar:before {\n    transition: none; } }\n.home .sidebar .nav-item p,\n.home .main-sidebar .brand-text,\n.home .sidebar .user-panel .info {\n  transition: margin-left 0.3s linear, opacity 0.5s ease; }\n@media screen and (prefers-reduced-motion: reduce) {\n  .home .sidebar .nav-item p,\n  .home .main-sidebar .brand-text,\n  .home .sidebar .user-panel .info {\n    transition: none; } }\n@media (min-width: 992px) {\n  .home .sidebar-collapse .main-sidebar:hover {\n    width: 230px; }\n    .home .sidebar-collapse .main-sidebar:hover .nav-link {\n      width: 230px; }\n    .home .sidebar-collapse .main-sidebar:hover li {\n      width: 230px; }\n    .home .sidebar-collapse .main-sidebar:hover p {\n      opacity: 1; }\n    .home .sidebar-collapse .main-sidebar:hover .angle {\n      opacity: 1; } }\n.home .sidebar-collapse {\n  padding-left: 0px;\n  padding-right: 0px; }\n.home .sidebar-collapse .sidebar-dark-primary {\n    margin-left: 0;\n    width: 50px; }\n.home .sidebar-collapse .sidebar-dark-primary p {\n      opacity: 0; }\n.home .sidebar-collapse .sidebar-dark-primary .angle {\n      opacity: 0; }\n.home .sidebar-open .login-nav-paren img {\n  width: 250px; }\n.home .sidebar-open .sidebar-dark-primary {\n  width: 250px;\n  min-width: 250px; }\n"

/***/ }),

/***/ "./src/app/home/home.component.ts":
/*!****************************************!*\
  !*** ./src/app/home/home.component.ts ***!
  \****************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _guard_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guard/auth.service */ "./src/app/guard/auth.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var ngx_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-cookie */ "./node_modules/ngx-cookie/fesm5/ngx-cookie.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _data_route_tree__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/route-tree */ "./src/app/data/route-tree.ts");
/* harmony import */ var _service_mess_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../service/mess.service */ "./src/app/service/mess.service.ts");
/* harmony import */ var _service_communicate_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../service/communicate.service */ "./src/app/service/communicate.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







// import { UrlService } from '../service/url.service';s

var HomeComponent = /** @class */ (function () {
    function HomeComponent(authService, router, _cookieService, messService, config, communicateService) {
        var _this = this;
        this.authService = authService;
        this.router = router;
        this._cookieService = _cookieService;
        this.messService = messService;
        this.config = config;
        this.communicateService = communicateService;
        this.isCollapsed = false;
        this.open = false;
        this.visible = true; // 控制可视区域
        this.routeTree = _data_route_tree__WEBPACK_IMPORTED_MODULE_5__["ROUTETREE"];
        // customize default values of dropdowns used by this component tree
        config.placement = 'top-left';
        // this.visible = urlService.getURLParam('visible') === '' ? true : false;
        // 全屏
        this.communicateService.getMessage().subscribe(function (message) {
            // console.log(message); // send a message
            _this.visible = message.mess;
        });
    }
    HomeComponent.prototype.ngOnInit = function () {
        this.currentUser = this._cookieService.getObject('currentUser');
        var currentUser = JSON.parse(this.currentUser);
        this.loginName = currentUser.loginName;
    };
    // 路由跳转-传递参数-这是在html中绑定的click跳转事件
    HomeComponent.prototype.jumpHandle = function (item) {
        this.queryPoint = item;
        this.messService.StatusMission(this.queryPoint);
        // this.communicateService.sendMessage(this.queryPoint);
        this.router.navigate(["home/monitor"]);
    };
    // 退出登录
    HomeComponent.prototype.logout = function () {
        this.authService.logout();
    };
    // 侧边栏开合按钮
    HomeComponent.prototype.switchSidebar = function () {
        this.open = !this.open;
        console.log(this.open);
    };
    // 字幕动画
    HomeComponent.prototype.marquee = function () {
        $('.marquee').marquee({
            // duration in milliseconds of the marquee
            duration: 3000,
            // speed: 5000,
            // gap in pixels between the tickers
            gap: 0,
            // time in milliseconds before the marquee will start animating
            delayBeforeStart: 0,
            // 'left' or 'right'
            direction: 'up',
            // true or false - should the marquee be duplicated to show an effect of continues flow
            duplicated: true,
            pauseOnHover: true
        });
    };
    HomeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-home',
            template: __webpack_require__(/*! ./home.component.html */ "./src/app/home/home.component.html"),
            styles: [__webpack_require__(/*! ./home.component.scss */ "./src/app/home/home.component.scss")]
        }),
        __metadata("design:paramtypes", [_guard_auth_service__WEBPACK_IMPORTED_MODULE_1__["AuthService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], ngx_cookie__WEBPACK_IMPORTED_MODULE_3__["CookieService"],
            _service_mess_service__WEBPACK_IMPORTED_MODULE_6__["MessService"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbDropdownConfig"], _service_communicate_service__WEBPACK_IMPORTED_MODULE_7__["CommunicateService"]])
    ], HomeComponent);
    return HomeComponent;
}());

/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: home.component.ts
@time: 2018 / 7 / 2 17: 18

*/


/***/ }),

/***/ "./src/app/home/home.module.ts":
/*!*************************************!*\
  !*** ./src/app/home/home.module.ts ***!
  \*************************************/
/*! exports provided: HomeModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeModule", function() { return HomeModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var angular_gridster2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-gridster2 */ "./node_modules/angular-gridster2/fesm5/angular-gridster2.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _device_device_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./device/device.module */ "./src/app/home/device/device.module.ts");
/* harmony import */ var _application_application_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./application/application.module */ "./src/app/home/application/application.module.ts");
/* harmony import */ var _user_user_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./user/user.module */ "./src/app/home/user/user.module.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _map_map_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./map/map.component */ "./src/app/home/map/map.component.ts");
/* harmony import */ var _strategy_strategy_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./strategy/strategy.component */ "./src/app/home/strategy/strategy.component.ts");
/* harmony import */ var _homepage_homepage_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./homepage/homepage.component */ "./src/app/home/homepage/homepage.component.ts");
/* harmony import */ var _airreport_airreport_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./airreport/airreport.component */ "./src/app/home/airreport/airreport.component.ts");
/* harmony import */ var _led_test_led_test_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./led-test/led-test.component */ "./src/app/home/led-test/led-test.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};















var HomeModule = /** @class */ (function () {
    function HomeModule() {
    }
    HomeModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModule"].forRoot(),
                _device_device_module__WEBPACK_IMPORTED_MODULE_6__["DeviceModule"], _user_user_module__WEBPACK_IMPORTED_MODULE_8__["UserModule"], angular_gridster2__WEBPACK_IMPORTED_MODULE_4__["GridsterModule"], _application_application_module__WEBPACK_IMPORTED_MODULE_7__["ApplicationModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatStepperModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSlideToggleModule"]
            ],
            declarations: [
                _map_map_component__WEBPACK_IMPORTED_MODULE_10__["MapComponent"], _strategy_strategy_component__WEBPACK_IMPORTED_MODULE_11__["StrategyComponent"], _homepage_homepage_component__WEBPACK_IMPORTED_MODULE_12__["HomepageComponent"], _airreport_airreport_component__WEBPACK_IMPORTED_MODULE_13__["AirreportComponent"], _led_test_led_test_component__WEBPACK_IMPORTED_MODULE_14__["LedTestComponent"],
            ],
            schemas: [
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["CUSTOM_ELEMENTS_SCHEMA"],
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["NO_ERRORS_SCHEMA"]
            ]
        })
    ], HomeModule);
    return HomeModule;
}());



/***/ }),

/***/ "./src/app/home/home.routes.ts":
/*!*************************************!*\
  !*** ./src/app/home/home.routes.ts ***!
  \*************************************/
/*! exports provided: HomeRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeRoutes", function() { return HomeRoutes; });
/* harmony import */ var _home_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./home.component */ "./src/app/home/home.component.ts");
/* harmony import */ var _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guard/auth-guard.service */ "./src/app/guard/auth-guard.service.ts");
/* harmony import */ var _monitor_monitor_routes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./monitor/monitor.routes */ "./src/app/home/monitor/monitor.routes.ts");
/* harmony import */ var _device_device_routes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./device/device.routes */ "./src/app/home/device/device.routes.ts");
/* harmony import */ var _user_user_routes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./user/user.routes */ "./src/app/home/user/user.routes.ts");
/* harmony import */ var _application_application_routes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./application/application.routes */ "./src/app/home/application/application.routes.ts");
/* harmony import */ var _homepage_homepage_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./homepage/homepage.routes */ "./src/app/home/homepage/homepage.routes.ts");
/* harmony import */ var _strategy_strategy_routes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./strategy/strategy.routes */ "./src/app/home/strategy/strategy.routes.ts");
/* harmony import */ var _airreport_airreport_routes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./airreport/airreport.routes */ "./src/app/home/airreport/airreport.routes.ts");
/* harmony import */ var _map_map_routes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./map/map.routes */ "./src/app/home/map/map.routes.ts");
/* harmony import */ var _led_test_led_routes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./led-test/led.routes */ "./src/app/home/led-test/led.routes.ts");











var HomeRoutes = [
    {
        path: '',
        redirectTo: 'home',
        pathMatch: 'full'
    },
    {
        path: 'home',
        component: _home_component__WEBPACK_IMPORTED_MODULE_0__["HomeComponent"],
        canActivate: [_guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]],
        children: [
            { path: '', redirectTo: 'homepage', pathMatch: 'full' }
        ].concat(_monitor_monitor_routes__WEBPACK_IMPORTED_MODULE_2__["MonitorRoutes"], _device_device_routes__WEBPACK_IMPORTED_MODULE_3__["DeviceRoutes"], _user_user_routes__WEBPACK_IMPORTED_MODULE_4__["UserRoutes"], _application_application_routes__WEBPACK_IMPORTED_MODULE_5__["ApplicationRoutes"], _homepage_homepage_routes__WEBPACK_IMPORTED_MODULE_6__["HomepageRoutes"], _strategy_strategy_routes__WEBPACK_IMPORTED_MODULE_7__["StrategyRoutes"], _airreport_airreport_routes__WEBPACK_IMPORTED_MODULE_8__["AirreportRoutes"], _map_map_routes__WEBPACK_IMPORTED_MODULE_9__["MapRoutes"], _led_test_led_routes__WEBPACK_IMPORTED_MODULE_10__["LedRoutes"])
    },
];
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: home.routes.ts
@time: 2018 / 7 / 2 17: 18

*/


/***/ }),

/***/ "./src/app/home/homepage/homepage.component.html":
/*!*******************************************************!*\
  !*** ./src/app/home/homepage/homepage.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"homepage row align-items-center justify-content-center\">\n  <div class=\"dash\">\n\n    <div class=\"row dash-row\" >\n      <div [class]=\"item.col\" *ngFor=\"let item of routes\">\n        <div class=\"row dash-parent\" *ngFor=\"let sub of item.row\">\n              <div [class]=\"last.col\"  *ngFor=\"let last of sub.children\"  (click)=\"goToZheRoute(last.routeLink)\">\n              \n                <div  [class] = \"last.class\">\n                  <div class=\"col-12 content\" >\n                    <p>\n                      <span>\n                        <i [class]=\"last.icon\"></i>\n                      </span>\n                    </p>\n                    <p>{{last.routeTitel}}</p>\n                  </div>\n                </div>\n              \n              </div>\n        </div>\n\n\n      </div>\n\n\n    </div>\n\n\n\n\n\n\n</div>\n"

/***/ }),

/***/ "./src/app/home/homepage/homepage.component.scss":
/*!*******************************************************!*\
  !*** ./src/app/home/homepage/homepage.component.scss ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "app-homepage {\n  background: #000;\n  color: #fff; }\n\n.homepage {\n  height: 100vh;\n  width: calc(100vw - 50px);\n  background: #000;\n  color: #fff;\n  padding-left: 100px;\n  padding-right: 100px; }\n\n.homepage .row {\n    margin-left: 0;\n    margin-right: 0; }\n\n.dash {\n  height: 80%;\n  width: 100%; }\n\n.dash-pad {\n  padding: 0px; }\n\n.dash-parent {\n  height: 30%;\n  width: 100%;\n  margin-bottom: 15px; }\n\n.dash-parent a {\n    display: inline-block; }\n\n.dash-row {\n  height: 100%;\n  width: 100%; }\n\n.dash-item {\n  height: 100%;\n  text-align: center;\n  background: #506173;\n  cursor: pointer; }\n\n.dash-item-first {\n  height: 100%;\n  text-align: center;\n  background: #41AEE6; }\n\n.content i {\n  font-size: 32px; }\n\n.padding-0 {\n  padding: 0; }\n"

/***/ }),

/***/ "./src/app/home/homepage/homepage.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/home/homepage/homepage.component.ts ***!
  \*****************************************************/
/*! exports provided: HomepageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomepageComponent", function() { return HomepageComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _route_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./route-list */ "./src/app/home/homepage/route-list.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var HomepageComponent = /** @class */ (function () {
    function HomepageComponent(router) {
        this.router = router;
        this.routes = _route_list__WEBPACK_IMPORTED_MODULE_1__["ROUTELIST"];
    }
    HomepageComponent.prototype.ngOnInit = function () {
    };
    HomepageComponent.prototype.goToZheRoute = function (para) {
        this.router.navigate([para]);
    };
    HomepageComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-homepage',
            template: __webpack_require__(/*! ./homepage.component.html */ "./src/app/home/homepage/homepage.component.html"),
            styles: [__webpack_require__(/*! ./homepage.component.scss */ "./src/app/home/homepage/homepage.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], HomepageComponent);
    return HomepageComponent;
}());



/***/ }),

/***/ "./src/app/home/homepage/homepage.routes.ts":
/*!**************************************************!*\
  !*** ./src/app/home/homepage/homepage.routes.ts ***!
  \**************************************************/
/*! exports provided: HomepageRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomepageRoutes", function() { return HomepageRoutes; });
/* harmony import */ var _homepage_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./homepage.component */ "./src/app/home/homepage/homepage.component.ts");

var HomepageRoutes = [
    {
        path: 'homepage',
        component: _homepage_component__WEBPACK_IMPORTED_MODULE_0__["HomepageComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/homepage/route-list.ts":
/*!*********************************************!*\
  !*** ./src/app/home/homepage/route-list.ts ***!
  \*********************************************/
/*! exports provided: ROUTELIST */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTELIST", function() { return ROUTELIST; });
var ROUTELIST = [
    {
        id: 1,
        col: 'col-5 dash-pad',
        row: [
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-4',
                        class: 'row  align-items-center justify-content-center dash-item-first',
                        icon: 'fa  fa-building',
                        routeLink: '/home/homepage',
                        routeTitel: '智慧城市',
                        hasClick: true,
                    },
                    {
                        id: 11,
                        col: 'col-8',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-bolt',
                        routeLink: 'home/application/calamity',
                        routeTitel: '灾害报警',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-3',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-tint',
                        routeLink: 'home/application/water',
                        routeTitel: '水质监测',
                    },
                    {
                        id: 11,
                        col: 'col-6',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-snowflake-o',
                        routeLink: 'home/application/air',
                        routeTitel: '空气质量',
                    },
                    {
                        id: 11,
                        col: 'col-3',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-lightbulb-o',
                        routeLink: 'home/application/light',
                        routeTitel: '智慧照明',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-8',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-life-ring',
                        routeLink: 'home/application/cover',
                        routeTitel: '窨井管理',
                    },
                    {
                        id: 11,
                        col: 'col-4',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-car',
                        routeLink: 'home/application/traffic',
                        routeTitel: '智慧交通',
                    },
                ]
            }
        ]
    },
    {
        id: 2,
        col: 'col-5 dash-pad',
        row: [
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-8',
                        class: 'row  align-items-center justify-content-center dash-item-first',
                        icon: 'fa fa-map nav-icon',
                        routeLink: '/home/homepage',
                        routeTitel: '设备管理',
                        hasClick: true,
                    },
                    {
                        id: 11,
                        col: 'col-4',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-desktop nav-icon',
                        routeLink: 'home/monitor',
                        routeTitel: '设备监控',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-12',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-window-restore nav-icon-s',
                        routeLink: 'home/device/devices',
                        routeTitel: '设备',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-4',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-product-hunt nav-icon-s',
                        routeLink: 'home/device/product',
                        routeTitel: '产品',
                    },
                    {
                        id: 11,
                        col: 'col-8',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-map-marker nav-icon-s',
                        routeLink: 'home/device/position',
                        routeTitel: '位置',
                    },
                ]
            }
        ]
    },
    {
        id: 3,
        col: 'col-2 dash-pad',
        row: [
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-12',
                        class: 'row  align-items-center justify-content-center dash-item-first',
                        icon: 'fa fa-wrench nav-icon',
                        routeLink: '/home/homepage',
                        routeTitel: '系统管理',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 11,
                        col: 'col-12',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-user-o nav-icon-s',
                        routeLink: 'home/user/admin',
                        routeTitel: '用户管理',
                    },
                ]
            },
            {
                id: 11,
                children: [
                    {
                        id: 12,
                        col: 'col-12',
                        class: 'row  align-items-center justify-content-center dash-item',
                        icon: 'fa fa-user-secret nav-icon-s',
                        routeLink: 'home/user/right',
                        routeTitel: '角色管理',
                    },
                ]
            }
        ]
    }
];


/***/ }),

/***/ "./src/app/home/led-test/led-test.component.html":
/*!*******************************************************!*\
  !*** ./src/app/home/led-test/led-test.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"panel-default\">\n  <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div>\n          <p>web模拟生成任务：</p>\n      \n        </div>\n        <hr>\n        <!-- 开关屏 -->\n        <div>\n          <p>开关屏</p>\n          <p>LED_ID: <input type=\"text\" [(ngModel)]=\"task1.id\"></p>\n          <div>\n            <p><span>控制开关：</span>\n              <label style=\"margin-left: 21px;\">\n                <mat-slide-toggle (change)=\"changeContr1()\"></mat-slide-toggle>\n              </label>\n            </p>\n          </div>\n          <button class=\"btn btn-bg\" (click)=\"createTask1()\" [disabled]=\"!task1.id\">生成开关屏任务</button>\n      \n        </div>\n        <hr>\n        <!-- 设置亮度 -->\n        <div>\n          <p>设置亮度</p>\n          <p>LED_ID: <input type=\"text\" [(ngModel)]=\"task2.id\"></p>\n      \n          <div>\n            <p><span>自动模式开关：</span>\n              <label style=\"margin-left: 21px;\">\n                <mat-slide-toggle (change)=\"changeContr2()\"></mat-slide-toggle>\n              </label>\n            </p>\n          </div>\n          <!-- 亮度值：<input type=\"text\" [(ngModel)]=\"task.value\"> -->\n          <p>\n            <label>\n              <mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"10\" min=\"0\" max=\"66\" [(ngModel)]=\"task2.value\"\n                (change)=\"changeSlider(task2.value)\"></mat-slider>\n            </label>\n          </p>\n      \n          <button class=\"btn btn-bg\" (click)=\"createTask2()\" [disabled]=\"!task2.id\">生成亮度调节</button>\n      \n        </div>\n        <hr>\n\n      \n      </div>\n      <div class=\"col-md-8\">\n        <p>服务端任务列表</p>\n        <table class=\"table table-hover\">\n          <thead class=\"table-header\">\n            <tr>\n              <th>序号</th>\n              <th>LED_ID</th>\n              <th>任务_ID</th>\n              <th>任务类型</th>\n              <th>状态</th>\n      \n              <th style=\"text-align: center\">操作</th>\n            </tr>\n          </thead>\n          <tbody>\n      \n            <tr *ngFor=\"let item of tasks; let i = index\">\n              <td>{{i + 1}}</td>\n              <td>{{item.id}}</td>\n              <td>{{item._id}}</td>\n              <td><span>{{item.datagram.request}}</span></td>\n              <td>{{item.status}}</td>\n      \n              <td style=\"text-align: center\">\n                <div class=\"modify-strategy d-inline\">\n                  <a class=\"cur-pointer btn-a theme-text d-inline\">修改</a>\n                  <a class=\"cur-pointer btn-a theme-text d-inline\">删除</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"tasks.length === 0 || !tasks\">无数据！</div>\n        <div *ngIf=\"tasks.length > 0\">\n          <ngb-pagination [collectionSize]=total_1 [(page)]=\"page_1\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\"\n            [boundaryLinks]=\"true\" (pageChange)=\"pageChange_1()\"></ngb-pagination>\n        </div>\n      </div>\n\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <!-- 开关屏 -->\n      <div>\n        <p>更新节目单</p>\n        <!-- <p>LED_ID: <input type=\"text\" [(ngModel)]=\"task3.id\"></p> -->\n        <button class=\"btn btn-bg\" (click)=\"gProgram1()\" >生成通用节目单任务</button>\n\n      \n      </div>\n    </div>\n    <div class=\"col-md-8\">\n      <p>节目单列表</p>\n      <table class=\"table table-hover\">\n        <thead class=\"table-header\">\n          <tr>\n    \n            <th>节目_ID</th>\n            <th>名称</th>\n            <th>宽度</th>\n            <th>高度</th>\n            <th>布局数</th>\n    \n    \n            <th style=\"text-align: center\">操作</th>\n          </tr>\n        </thead>\n        <tbody>\n    \n          <tr *ngFor=\"let item of programs; let i = index\">\n            <td>{{item._id}}</td>\n            <td><span>{{item.name}}</span></td>\n            <td>{{item.width}}</td>\n            <td>{{item.height}}</td>\n            <td>{{item.regions.length}}\n              <a (click)=\"viewRegions(item.regions)\" class=\"cur-pointer\" style=\"color: blue;\">查看</a>\n    \n            </td>\n    \n            <td style=\"text-align: center\">\n              <div class=\"modify-strategy d-inline\">\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"createTask3(item._id)\">生成更新节目任务</a>\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"getProgram(item)\">下载文件</a>\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"gFiles(item)\">生成节目文件</a>\n    \n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div *ngIf=\"programs.length === 0 || !programs\">无数据！</div>\n      <div *ngIf=\"programs.length > 0\">\n        <ngb-pagination [collectionSize]=total_4 [(page)]=\"page_4\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\"\n          [boundaryLinks]=\"true\" (pageChange)=\"pageChange_4()\"></ngb-pagination>\n      </div>\n      <hr>\n      <table class=\"table table-hover\">\n        <thead class=\"table-header\">\n          <tr>\n    \n            <th>节目_ID</th>\n            <th>名称</th>\n            <th>x</th>\n            <th>y</th>\n            <th>宽度</th>\n            <th>高度</th>\n            <th>类型</th>\n            <th>内容</th>\n    \n    \n            <th style=\"text-align: center\">操作</th>\n          </tr>\n        </thead>\n        <tbody>\n    \n          <tr *ngFor=\"let item of regions_list; let i = index\">\n            <td>{{item.id}}</td>\n            <td><span>{{item.name}}</span></td>\n            <td>{{item.x}}</td>\n            <td>{{item.y}}</td>\n            <td>{{item.width}}</td>\n            <td>{{item.height}}</td>\n            <td>{{item.item[0].type}}\n            <td>{{item.item[0].contents[0].content}}\n              <!-- <a (click)=\"viewRegions(item.regions)\" class=\"cur-pointer\" style=\"color: aqua;\">查看</a> -->\n    \n            </td>\n    \n            <td style=\"text-align: center\">\n              <div class=\"modify-strategy d-inline\">\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"gProgram(item)\">生成节目文件</a>\n    \n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n \n\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <div>\n        <p>节目播放内容空气质量：</p>\n  \n      </div>\n      <hr>\n      <!-- 文本 -->\n      <div>\n        <!-- <p>\n          <span>节目播放内容类型：</span>\n          <select name=\"profile\" [(ngModel)]=\"currentType\" (change)=\"playTypeChange()\" style=\"margin-right: 5px;\">\n            <option *ngFor=\"let item of playTypes\" [ngValue]=\"item\">\n              {{ item.type }}\n            </option>\n          </select>\n        </p> -->\n  \n        <p>节目播放内容类型：text</p>\n        <p>名称: <input type=\"text\" [(ngModel)]=\"airs.name\"></p>\n        <!-- <p>内容/文件路径名称: <input type=\"text\" [(ngModel)]=\"plays.contents\"></p> -->\n        <p>播放时长: <input type=\"text\" [(ngModel)]=\"airs.length\"></p>\n        <!-- <button class=\"btn btn-bg\" (click)=\"createMedia()\" [disabled]=\"!plays.name || !plays.contents || !plays.length\">post</button> -->\n      </div>\n      <hr>\n    </div>\n    <div class=\"col-md-8\">\n      <p>空气质量列表</p>\n      <table class=\"table table-hover\">\n        <thead class=\"table-header\">\n          <tr>\n\n            <th>设备_ID</th>\n            <th>名称</th>\n            <th>pm10</th>\n            <th>pm25</th>\n            <th>tvoc</th>\n            <th>temperature</th>\n            <th>humidity</th>\n  \n            <th style=\"text-align: center\">操作</th>\n          </tr>\n        </thead>\n        <tbody>\n  \n          <tr *ngFor=\"let item of model.airdevicelist; let i = index\">\n            <td>{{item.id}}</td>\n            <td><span>{{item.description}}</span></td>\n            <td>{{item.pm10}}</td>\n            <td>{{item.pm25}}</td>\n            <td>{{item.tvoc}}</td>\n            <td>{{item.temperature}}</td>\n            <td>{{item.humidity}}</td>\n  \n            <td style=\"text-align: center\">\n              <div class=\"modify-strategy d-inline\">\n                <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"gProgram(item)\">存储</a>\n\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div *ngIf=\"model.airdevicelist.length === 0 || !model.airdevicelist\">无数据！</div>\n    </div>\n  \n  </div>\n  <hr>\n\n  <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div>\n          <p>终端模拟请求数据：</p>\n        \n        </div>\n        <hr>\n\n        <!-- 常规请求 -->\n        <div>\n          <p>常规请求</p>\n          <button class=\"btn btn-bg\" (click)=\"searchTask(1)\">post</button>\n        </div>\n        <hr>\n        <!-- 终端任务执行中请求： -->\n        <div>\n          <p>终端任务执行中请求：</p>\n          <button class=\"btn btn-bg\" (click)=\"searchTask(2)\" >post</button>\n        </div>\n        <hr>\n        <!-- 终端任务执行中 -->\n        <div>\n          <p>终端任务执行成功请求：</p>\n          <button class=\"btn btn-bg\" (click)=\"searchTask(3)\" >post</button>\n        </div>\n        <hr>\n      </div>\n      <div class=\"col-md-8\">\n        <p>终端任务列表</p>\n        <!-- 常规请求->搜索任务 -->\n        <div>\n          <p>LED_ID: <input type=\"text\" [(ngModel)]=\"searchTaskBody.id\" placeholder=\"检索LED_ID\">\n          <button class=\"btn btn-bg\" (click)=\"searchAllTask()\" [disabled]=\"!searchTaskBody.id\">search</button>\n        </p>\n          \n        </div>\n\n\n        <table class=\"table table-hover\">\n          <thead class=\"table-header\">\n            <tr>\n              <th>序号</th>\n              <th>选择</th>\n              <th>IED_ID</th>\n              <th>任务_ID</th>\n              <th>任务类型</th>\n              <th>状态</th>\n    \n            </tr>\n          </thead>\n          <tbody>\n      \n            <tr *ngFor=\"let item of search_tasks; let i = index\">\n              <td>{{i + 1}}</td>\n              <td><input type=\"checkbox\" (change)=\"addTaskCtrl()\" [(ngModel)]=\"search_tasks_check[i].check\"></td>\n              <td>{{item.id}}</td>\n              <td>{{item._id}}</td>\n              <td><span>{{item.datagram.request}}</span></td>\n              <td>{{item.status}}</td>\n      \n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"search_tasks.length === 0 || !search_tasks\">无数据！</div>\n        <div *ngIf=\"search_tasks.length > 0\">\n          <ngb-pagination [collectionSize]=total_2 [(page)]=\"page_2\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\"\n            [boundaryLinks]=\"true\" (pageChange)=\"pageChange_2()\"></ngb-pagination>\n        </div>\n      </div>\n  </div>\n\n\n\n\n\n\n</div>\n\n  <!-- 用户 -->\n  <!-- <div>\n      <input type=\"text\" [(ngModel)]=\"user.name\">\n      <button  class=\"btn btn-bg\" (click)=\"createUser()\">添加</button>\n    </div>\n    <div>\n            <table class=\"table table-hover\">\n              <thead class=\"table-header\">\n                <tr>\n                  <th>序号</th>\n                  <th>用户</th>\n                  <th>密码</th>\n            \n                  <th style=\"text-align: center\">操作</th>\n                </tr>\n              </thead>\n              <tbody>\n            \n                <tr *ngFor=\"let item of users; let i = index\">\n                  <td>{{i + 1}}</td>\n                  <td>{{item.name}}</td>\n                  <td>{{item.password}}</td>\n            \n                  <td style=\"text-align: center\">\n                    <div class=\"modify-strategy d-inline\">\n                      <a class=\"cur-pointer btn-a theme-text d-inline\" >修改</a>\n                      <a class=\"cur-pointer btn-a theme-text d-inline\" >删除</a>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div *ngIf=\"users.length === 0 || !users\">无数据！</div>\n            <div *ngIf=\"users.length > 0\">\n              <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\"\n                [boundaryLinks]=\"true\" (pageChange)=\"pageChange()\"></ngb-pagination>\n            </div>\n    </div> -->\n\n"

/***/ }),

/***/ "./src/app/home/led-test/led-test.component.scss":
/*!*******************************************************!*\
  !*** ./src/app/home/led-test/led-test.component.scss ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/home/led-test/led-test.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/home/led-test/led-test.component.ts ***!
  \*****************************************************/
/*! exports provided: LedTestComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LedTestComponent", function() { return LedTestComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_led_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../service/led.service */ "./src/app/service/led.service.ts");
/* harmony import */ var _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../service/airmonitor.service */ "./src/app/service/airmonitor.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LedTestComponent = /** @class */ (function () {
    function LedTestComponent(ledService, airmonitorService) {
        this.ledService = ledService;
        this.airmonitorService = airmonitorService;
        this.model = {}; // 存储数据
        this.searchTaskBody = {}; // 存储数据
        this.searchTaskBody1 = {}; // 存储数据
        this.searchTaskBody2 = {}; // 存储数据
        this.user = {}; // 用户列表
        this.task = {}; // 任务列表
        this.task1 = {}; // 开关屏
        this.task2 = {}; // 设置亮度
        this.task3 = {}; // 更新节目单
        this.plays = {}; // 设置播放内容
        this.airs = {}; // 设置空气质量播放内容
        this.users = []; // 用户列表
        this.tasks = []; // 任务列表
        this.medias = []; // 媒体列表
        this.programs = []; // 节目列表
        this.search_tasks = []; // led任务列表
        this.search_tasks_check = [];
        this.regions = [];
        this.regions_list = [];
        this.pagesize = 10;
        this.contrL1 = false; // 临时控制
        this.contrL2 = false; // 临时控制
        this.playTypes = [
            {
                type: 'text'
            },
            {
                type: 'image'
            },
            {
                type: 'git'
            },
            {
                type: 'video'
            },
            {
                type: 'slide_text'
            },
            {
                type: 'metrics_text'
            }
        ];
        this.page = 1;
        this.page_1 = 1;
        this.page_2 = 1;
        this.page_3 = 1;
        this.page_3 = 1;
        this.page_4 = 1;
        this.task2.value = 0;
        this.searchTaskBody.id = 'DE1700220125';
        this.searchTaskBody.task = [];
        this.currentType = this.playTypes[0];
        this.model.airdevicelist = [];
    }
    LedTestComponent.prototype.ngOnInit = function () {
        // this.getUsers();
        this.getTasks();
        // this.getMedias();
        this.getPrograms();
        this.searchAllTask();
        this.getAirdevices();
    };
    LedTestComponent.prototype.viewRegions = function (item) {
        console.log(item);
        this.regions_list = item;
    };
    LedTestComponent.prototype.getPrograms = function () {
        var that = this;
        var page = this.page_4;
        var pagesize = this.pagesize;
        this.ledService.getPrograms(page, pagesize).subscribe({
            next: function (val) {
                that.programs = val.data;
                that.total_4 = val.total;
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.createProgram = function (name) {
        var that = this;
        var body = {
            'name': name,
            'id': '1',
            'display_time': 0,
            'width': 96,
            'height': 192,
            'type': 0,
            regions: this.regions
        };
        console.log(this.regions);
        this.ledService.createProgram(body).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
                that.getPrograms();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.gProgram = function (item) {
        // const p = [
        //   {}
        // ];
        this.regions = [];
        this.regions.push({
            'id': '1',
            'name': 'row1',
            'x': 0,
            'y': 0,
            'width': 96,
            'height': 38,
            'items': [
                {
                    'font_name': 'msyh',
                    'font_size': '9',
                    'font_color': '#009CFF',
                    'background_color': '#00000000',
                    'effect_entry': '0',
                    'effect_exit': '18',
                    'time_entry': '3000',
                    'time_exit': '3000',
                    'id': '0',
                    'type': 'text',
                    'name': 'no name',
                    'loop': '1',
                    'length': 10000,
                    'contents': [
                        {
                            'content': "PM10: " + item.pm10
                        }
                    ]
                }
            ]
        });
        this.regions.push({
            'id': '2',
            'name': 'row2',
            'x': 0,
            'y': 39,
            'width': 96,
            'height': 38,
            'items': [
                {
                    'font_name': 'msyh',
                    'font_size': '9',
                    'font_color': '#009CFF',
                    'background_color': '#00000000',
                    'effect_entry': '0',
                    'effect_exit': '18',
                    'time_entry': '3000',
                    'time_exit': '3000',
                    'id': '0',
                    'type': 'text',
                    'name': 'no name',
                    'loop': '1',
                    'length': 10000,
                    'contents': [
                        {
                            'content': "PM2.5: " + item.pm25
                        }
                    ]
                }
            ]
        });
        this.regions.push({
            'id': '31',
            'name': 'row3-1',
            'x': 0,
            'y': 80,
            'width': 96,
            'height': 38,
            'items': [
                {
                    'font_name': 'msyh',
                    'font_size': '9',
                    'font_color': '#009CFF',
                    'background_color': '#00000000',
                    'effect_entry': '0',
                    'effect_exit': '18',
                    'time_entry': '3000',
                    'time_exit': '3000',
                    'id': '0',
                    'type': 'text',
                    'name': 'no name',
                    'loop': '1',
                    'length': 10000,
                    'contents': [
                        {
                            'content': "TVOC: " + item.tvoc
                        }
                    ]
                }
            ]
        });
        this.regions.push({
            'id': '41',
            'name': 'row4-1',
            'x': 0,
            'y': 115,
            'width': 96,
            'height': 38,
            'items': [
                {
                    'font_name': 'msyh',
                    'font_size': '9',
                    'font_color': '#009CFF',
                    'background_color': '#00000000',
                    'effect_entry': '0',
                    'effect_exit': '18',
                    'time_entry': '3000',
                    'time_exit': '3000',
                    'id': '0',
                    'type': 'text',
                    'name': 'no name',
                    'loop': '1',
                    'length': 10000,
                    'contents': [
                        {
                            'content': "\u6E29\u5EA6: " + item.temperature
                        }
                    ]
                }
            ]
        });
        this.regions.push({
            'id': '51',
            'name': 'row5-1',
            'x': 0,
            'y': 152,
            'width': 96,
            'height': 38,
            'items': [
                {
                    'font_name': 'msyh',
                    'font_size': '9',
                    'font_color': '#009CFF',
                    'background_color': '#00000000',
                    'effect_entry': '0',
                    'effect_exit': '18',
                    'time_entry': '3000',
                    'time_exit': '3000',
                    'id': '0',
                    'type': 'text',
                    'name': 'no name',
                    'loop': '1',
                    'length': 10000,
                    'contents': [
                        {
                            'content': "\u6E7F\u5EA6: " + item.humidity
                        }
                    ]
                }
            ]
        });
        this.createProgram('空气质量播报');
    };
    LedTestComponent.prototype.getProgram = function (item) {
        this.ledService.getProgram(item._id).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.gProgram1 = function () {
        // this.regions = [
        //   {
        //   'id': '1',
        //   'name': 'row1',
        //   'x': 16,
        //   'y': 0,
        //   'width': 176,
        //   'height': 16,
        //   'items': [{
        //     'length': '10000',
        //     'font_pixel': '16',
        //     'font_color': '#FF0000',
        //     'background_color': '#000000',
        //     'line_spacing': '-3',
        //     'letter_spacing': '0',
        //     'effect_entry': '2',
        //     'effect_exit': '2',
        //     'type': 'metrics_text',
        //     'align_v': 'align_center',
        //     'align_h': 'align_left',
        //     'contents': [{
        //       'content': '四川南河国家湿地公园'
        //     }]
        //   }]
        //   }, {
        //     'id': '2',
        //     'name': 'row2',
        //     'x': 24,
        //     'y': 18,
        //     'width': 168,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FF0000',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '湿地生态微环境实时监测'
        //       }]
        //     }]
        //   }, {
        //     'id': '31',
        //     'name': 'row3-1',
        //     'x': 5,
        //     'y': 32,
        //     'width': 125,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': 'PM2.5   :  38'
        //       }]
        //     }]
        //   }, {
        //     'id': '32',
        //     'name': 'row3-2',
        //     'x': 130,
        //     'y': 32,
        //     'width': 62,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '9',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': 'ug/m3'
        //       }]
        //     }]
        //   }, {
        //     'id': '41',
        //     'name': 'row4-1',
        //     'x': 5,
        //     'y': 46,
        //     'width': 125,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '空气温度:  30.3'
        //       }]
        //     }]
        //   }, {
        //     'id': '42',
        //     'name': 'row4-2',
        //     'x': 130,
        //     'y': 46,
        //     'width': 62,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '℃'
        //       }]
        //     }]
        //   }, {
        //     'id': '51',
        //     'name': 'row5-1',
        //     'x': 5,
        //     'y': 60,
        //     'width': 125,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '空气湿度:  67.4'
        //       }]
        //     }]
        //   }, {
        //     'id': '52',
        //     'name': 'row5-2',
        //     'x': 130,
        //     'y': 60,
        //     'width': 62,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '%RH'
        //       }]
        //     }]
        //   }, {
        //     'id': '61',
        //     'name': 'row6-1',
        //     'x': 5,
        //     'y': 74,
        //     'width': 125,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '负氧离子:  5118'
        //       }]
        //     }]
        //   }, {
        //     'id': '62',
        //     'name': 'row6-2',
        //     'x': 130,
        //     'y': 74,
        //     'width': 62,
        //     'height': 12,
        //     'items': [{
        //       'length': '10000',
        //       'font_pixel': '13',
        //       'font_color': '#FFFF00',
        //       'background_color': '#000000',
        //       'line_spacing': '-3',
        //       'letter_spacing': '0',
        //       'effect_entry': '2',
        //       'effect_exit': '2',
        //       'type': 'metrics_text',
        //       'align_v': 'align_center',
        //       'align_h': 'align_left',
        //       'contents': [{
        //         'content': '个/cm3'
        //       }]
        //     }]
        //   }
        // ];
        this.regions = [
            {
                'id': '1',
                'name': 'Text Message',
                'x': 0,
                'y': 0,
                'width': 96,
                'height': 192,
                'items': [
                    {
                        'font_name': 'msyh',
                        'font_size': '9',
                        'font_color': '#009CFF',
                        'background_color': '#00000000',
                        'effect_entry': '0',
                        'effect_exit': '18',
                        'time_entry': '3000',
                        'time_exit': '3000',
                        'id': '0',
                        'type': 'text',
                        'name': 'no name',
                        'loop': '1',
                        'length': 10000,
                        'contents': [
                            {
                                'content': 'price tag'
                            }
                        ]
                    }
                ]
            }
        ];
        // this.regions =  [
        //   {
        //     'id': '1',
        //     'name': 'Text Message',
        //     'x': 0,
        //     'y': 0,
        //     'width': 96,
        //     'height': 192,
        //     // 'id': '1',
        //     // 'name': '滚动文本 - 1',
        //     // 'x': 16,
        //     // 'y': 16,
        //     // 'width': 64,
        //     // 'height': 32,
        //     // 'layer': 2,
        //     'items': [
        //       {
        //         'font_name': 'msyh',
        //         'font_size': '16',
        //         'font_color': '#ff0000',
        //         'background_color': '#00000000',
        //         'effect_entry': '0',
        //         'effect_exit': '18',
        //         'time_entry': '3000',
        //         'time_exit': '3000',
        //         'id': '0',
        //         'type': 'text',
        //         'name': 'no name',
        //         'loop': '1',
        //         'length': 10000,
        //         'contents': [
        //           {
        //             'content': 'test display'
        //           }
        //         ]
        //         // 'font_pixel': '16',
        //         // 'font_color': '#FF0000',
        //         // 'background_color': '#000000',
        //         // 'line_spacing': '-3',
        //         // 'letter_spacing': '0',
        //         // 'effect_entry': '2',
        //         // 'effect_exit': '2',
        //         // 'type': 'metrics_text',
        //         // 'align_v': 'align_center',
        //         // 'align_h': 'align_left',
        //         // 'contents': [{
        //         //   'content': '四川南河国家湿地公园'
        //         // }],
        //         // 'background_color': '#00000000',
        //         // 'effect': '0',
        //         // 'is_continue': '0',
        //         // 'speed': '2',
        //         // 'pause_time': '3000',
        //         // 'id': '0',
        //         // 'type': 'slide',
        //         // 'name': 'no name',
        //         // 'length': 0,
        //         // 'contents': [
        //         //   {
        //         //     'content': '/mnt/user/data/87E2289CD7173763A8A084E902E6D31E.png'
        //         //   }
        //         // ]
        //       }
        //     ]
        //   }
        // ];
        // this.regions.push(
        //   {
        //     id: '1',
        //     name: 'region1',
        //     x: '0',
        //     y: '0',
        //     width: '96',
        //     height: '192',
        //     items: [
        //       {
        //         id: '11',
        //         name: item.name,
        //         type: item.type,
        //         length: item.length,
        //         contents: [
        //           {
        //             content: `${item.contents}`
        //           }
        //         ]
        //       }
        //     ]
        //   }
        // );
        this.createProgram('自定义播放节目');
    };
    LedTestComponent.prototype.gFiles = function (item) {
        this.ledService.gFiles(item._id).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取空气质量点
    LedTestComponent.prototype.getAirdevices = function () {
        var that = this;
        var NorthEast = {
            'lng': 113.998944,
            'lat': 22.590191
        }; // 返回矩形区域的东北角
        var SouthWest = {
            'lng': 113.902502,
            'lat': 22.527578
        }; // 返回矩形区域的西南角
        this.airmonitorService.getAirDevice(NorthEast, SouthWest).subscribe({
            next: function (val) {
                that.model.airdevicelist = val; // 变为新值
            },
            complete: function () {
            },
            error: function (error) {
            }
        });
    };
    LedTestComponent.prototype.playTypeChange = function () { };
    LedTestComponent.prototype.createMedia = function () {
        var that = this;
        var body = {
            name: this.plays.name,
            type: this.currentType.type,
            contents: this.plays.contents,
            length: this.plays.length,
        };
        this.ledService.createMedia(body).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
                that.getMedias();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.getMedias = function () {
        var that = this;
        var page = this.page_3;
        var pagesize = this.pagesize;
        this.ledService.getMedias(page, pagesize).subscribe({
            next: function (val) {
                that.medias = val.data;
                that.total_3 = val.total;
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.getUsers = function () {
        var that = this;
        var page = this.page;
        var pagesize = this.pagesize;
        this.ledService.getUsers(page, pagesize).subscribe({
            next: function (val) {
                that.users = val.data;
                that.total = val.total;
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.createUser = function () {
        var that = this;
        var body = {
            name: this.user.name,
            password: '123456',
        };
        this.ledService.createUser(body).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
                that.getUsers();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.addTaskCtrl = function () {
        this.searchTaskBody.task = [];
        for (var index = 0; index < this.search_tasks_check.length; index++) {
            var element = this.search_tasks_check[index];
            if (element.check) {
                this.searchTaskBody.task.push(this.search_tasks[index]);
            }
        }
        console.log(this.searchTaskBody.task);
    };
    LedTestComponent.prototype.searchTask = function (type) {
        var that = this;
        var body;
        if (type === 1) {
            body = {
                'version': '1.0',
                'system_info': {
                    id: this.searchTaskBody.id,
                    width: 192,
                    height: 32,
                }
            };
        }
        else if (type === 2) {
            var task_1 = [];
            this.searchTaskBody.task.map(function (item, i) {
                task_1.push({
                    'id': item._id,
                    'status': 'PROCESSING',
                    'datagram': item.datagram
                });
            });
            body = {
                'version': '1.0',
                'system_info': {
                    id: this.searchTaskBody.id,
                    width: 192,
                    height: 32,
                },
                'task': task_1
            };
        }
        else if (type === 3) {
            var task_2 = [];
            this.searchTaskBody.task.map(function (item, i) {
                task_2.push({
                    'id': item._id,
                    'status': 'SUCCESS',
                    'datagram': item.datagram
                });
            });
            body = {
                'version': '1.0',
                'system_info': {
                    id: this.searchTaskBody.id,
                    width: '192',
                    height: '32',
                },
                'task': task_2
            };
        }
        this.ledService.searchTask(body).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
                that.getTasks();
                that.searchAllTask();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.searchAllTask = function () {
        var that = this;
        var id = this.searchTaskBody.id;
        var pageSize = this.pagesize;
        var currentPage = this.page_2;
        this.ledService.searchAllTask(id, currentPage, pageSize).subscribe({
            next: function (val) {
                console.log(val);
                that.search_tasks = val.data;
                that.total_2 = val.total;
                for (var index = 0; index < that.search_tasks.length; index++) {
                    that.search_tasks_check.push({ check: false });
                }
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.getTasks = function () {
        var that = this;
        var page = this.page_1;
        var pagesize = this.pagesize;
        this.ledService.getTasks(page, pagesize).subscribe({
            next: function (val) {
                that.tasks = val.data;
                that.total_1 = val.total;
                console.log(val);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.createTask = function (body) {
        var that = this;
        this.ledService.createTask(body).subscribe({
            next: function (val) {
                console.log(val);
            },
            complete: function () {
                that.getTasks();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    LedTestComponent.prototype.createTask1 = function () {
        var id = this.task1.id;
        var value = this.contrL1 ? 1 : 0;
        var body = {
            'id': id,
            'status': 'PENDING',
            'datagram': {
                'request': 'screen_switch',
                'arguments': [
                    {
                        'value': value
                    }
                ]
            }
        };
        this.createTask(body);
    };
    LedTestComponent.prototype.createTask2 = function () {
        var id = this.task2.id;
        var value = Number(this.task2.value);
        var auto_value = this.contrL2 ? '1' : '0';
        var body = {
            'id': id,
            'status': 'PENDING',
            'datagram': {
                'request': 'set_brightness',
                'arguments': [
                    {
                        'auto_mode': auto_value,
                        'value': value
                    }
                ]
            }
        };
        this.createTask(body);
    };
    LedTestComponent.prototype.createTask3 = function (id) {
        var timestamp = (new Date()).valueOf();
        var tid = this.task3.id;
        var body = {
            'id': tid || 'DE1700220125',
            'proid': id,
            'status': 'PENDING',
            'datagram': {
                'request': 'update_program',
                'arguments': [
                    {
                        'link': "http://172.18.8.44:9600/programs/getProgram?id=" + id,
                        'local': "/mnt/user/data/programs.json"
                    }
                ]
            }
        };
        this.createTask(body);
    };
    LedTestComponent.prototype.pageChange = function () {
        this.getUsers();
    };
    LedTestComponent.prototype.pageChange_1 = function () {
        this.getTasks();
    };
    LedTestComponent.prototype.pageChange_2 = function () {
        this.searchAllTask();
    };
    LedTestComponent.prototype.pageChange_3 = function () {
        this.getMedias();
    };
    LedTestComponent.prototype.pageChange_4 = function () {
        this.getPrograms();
    };
    LedTestComponent.prototype.changeContr1 = function () {
        this.contrL1 = !this.contrL1;
    };
    LedTestComponent.prototype.changeContr2 = function () {
        this.contrL2 = !this.contrL2;
    };
    // 路灯控制页亮度调节
    LedTestComponent.prototype.formatLabel = function (value) {
        // this.prompt = false;
        if (!value) {
            return 0;
        }
        if (value > 66) {
            return Math.round(value / 66) + '%';
        }
        return value + '%';
    };
    // 亮度改变
    LedTestComponent.prototype.changeSlider = function (arg) {
        console.log('亮度改变');
        console.log(arg);
        this.task2.value = arg;
    };
    LedTestComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-led-test',
            template: __webpack_require__(/*! ./led-test.component.html */ "./src/app/home/led-test/led-test.component.html"),
            styles: [__webpack_require__(/*! ./led-test.component.scss */ "./src/app/home/led-test/led-test.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_led_service__WEBPACK_IMPORTED_MODULE_1__["LedService"], _service_airmonitor_service__WEBPACK_IMPORTED_MODULE_2__["AirmonitorService"]])
    ], LedTestComponent);
    return LedTestComponent;
}());



/***/ }),

/***/ "./src/app/home/led-test/led.routes.ts":
/*!*********************************************!*\
  !*** ./src/app/home/led-test/led.routes.ts ***!
  \*********************************************/
/*! exports provided: LedRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LedRoutes", function() { return LedRoutes; });
/* harmony import */ var _led_test_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./led-test.component */ "./src/app/home/led-test/led-test.component.ts");

var LedRoutes = [
    {
        path: 'led',
        component: _led_test_component__WEBPACK_IMPORTED_MODULE_0__["LedTestComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/map/map.component.html":
/*!*********************************************!*\
  !*** ./src/app/home/map/map.component.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 地图 -->\r\n<div class=\"map_warp\">\r\n  <!-- 选择区域 -->\r\n    <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n      <!-- 城市列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n          <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n          <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n        </span>\r\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <dl *ngFor=\"let item of map_model.cityList\">\r\n              <dt>{{item.name}}</dt>\r\n              <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n      <!-- 区域列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n    \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n          <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n    \r\n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <ul class=\"arealist\" data-type=\"area\">\r\n              <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                            <em>不限</em>\r\n                        </li> -->\r\n              <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                (click)=\"selecteblock(node)\">\r\n                <em>{{node.name}}</em>\r\n              </li>\r\n    \r\n            </ul>\r\n            <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n              <ul class=\"blocklist\" data-type=\"block\">\r\n                <!-- <li data-val=\"0\">不限</li> -->\r\n                <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n    \r\n              </ul>\r\n            </div>\r\n    \r\n    \r\n          </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n      </div>\r\n    \r\n    \r\n    </div>\r\n\r\n  <!-- 右边按钮 -->\r\n  <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n    <div class=\"d-inline-block icon-item cur-pointer\">\r\n      <img src=\"../../../../assets/imgs/control.png\" alt=\"图片\">\r\n\r\n    </div>\r\n\r\n    <div class=\"d-inline-block icon-item cur-pointer\">\r\n\r\n      <img src=\"../../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n    </div>\r\n\r\n  </div>\r\n  <!-- 地图 -->\r\n  <div #map5 id=\"map_container5\" class=\"map_container no-fulls-map\"></div>\r\n</div>"

/***/ }),

/***/ "./src/app/home/map/map.component.scss":
/*!*********************************************!*\
  !*** ./src/app/home/map/map.component.scss ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".map_container {\n  width: 100%; }\n"

/***/ }),

/***/ "./src/app/home/map/map.component.ts":
/*!*******************************************!*\
  !*** ./src/app/home/map/map.component.ts ***!
  \*******************************************/
/*! exports provided: MapComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapComponent", function() { return MapComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_map_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/map-list */ "./src/app/data/map-list.ts");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: map.component.ts
@time: 2018 / 8 / 16 17: 18

*/
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MapComponent = /** @class */ (function () {
    function MapComponent(monitorService) {
        this.monitorService = monitorService;
        /*
        model:object
        light_list: array // 灾害数据
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.visible = true; // 控制可视区域
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.light_list = _data_map_list__WEBPACK_IMPORTED_MODULE_1__["MAPLIST"].val.light_list; // 数据模拟
        this.map_model.deviceList = []; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
    }
    MapComponent.prototype.ngOnInit = function () {
        this.addBeiduMap();
        this.getCity(); // 获取城市列表
        this.getDevice(); // 获取设备列表
    };
    // 百度地图API功能
    MapComponent.prototype.addBeiduMap = function () {
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(113.922329, 22.49656); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
        map.centerAndZoom(point, 19); // 设置中心和地图显示级别
        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放
        map.setMapStyle({ style: 'dark' });
        // 添加控件缩放
        var offset = new BMap.Size(20, 55);
        var navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        this.addMarker();
    };
    MapComponent.prototype.addMarker = function () {
        for (var index = 0; index < this.light_list.length; index++) {
            var item = this.light_list[index];
            var point = new BMap.Point(item.lng, item.lat);
            var myIcon = void 0;
            if (item.is_exception && item.is_exception === 1) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-breakdown.png', new BMap.Size(300, 157));
                // console.log('异常');
            }
            else if (item.is_online === 0) {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-up-1.png', new BMap.Size(300, 157));
                // console.log('掉线');
            }
            else {
                myIcon = new BMap.Icon('../../../../assets/imgs/light-normal.png', new BMap.Size(300, 157));
                // console.log('正常');
            }
            myIcon.setAnchor(new BMap.Size(16, 38));
            var marker2 = new BMap.Marker(point, { icon: myIcon }); // 创建标注
            this.map.addOverlay(marker2);
        }
    };
    // 解析地址- 设置中心和地图显示级别
    MapComponent.prototype.getPoint = function (baiduMap, city) {
        var zoom = this.switchZone(city.level);
        console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
    };
    // 获取数据
    // 获取城市列表 --ok
    MapComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                // that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取设备列表 -- ok
    MapComponent.prototype.getDevice = function () {
        var that = this;
        this.monitorService.getDevice().subscribe({
            next: function (val) {
                that.map_model.deviceList = val;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 省市区街道-地图级别
    MapComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    MapComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // console.log(nodeId);
            // console.log(obj.id);
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 进入全屏
    MapComponent.prototype.enterFullScreen = function () {
        console.log('进入全屏');
        console.log(this.visible);
        // this.visible = false;
        // localStorage.setItem('visible', 'false');
        // 设置缩放控件偏移量
        // const offset = new BMap.Size(20, 15);
        // this.navigationControl.setOffset(offset);
        // this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.enterFullScreen();
    };
    // 选择区域
    // 选择城市
    MapComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    MapComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 显示区域
    MapComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    MapComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    MapComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    MapComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    MapComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    MapComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    MapComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    MapComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map5'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], MapComponent.prototype, "map_container", void 0);
    MapComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-map',
            template: __webpack_require__(/*! ./map.component.html */ "./src/app/home/map/map.component.html"),
            styles: [__webpack_require__(/*! ./map.component.scss */ "./src/app/home/map/map.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_2__["MonitorService"]])
    ], MapComponent);
    return MapComponent;
}());



/***/ }),

/***/ "./src/app/home/map/map.routes.ts":
/*!****************************************!*\
  !*** ./src/app/home/map/map.routes.ts ***!
  \****************************************/
/*! exports provided: MapRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapRoutes", function() { return MapRoutes; });
/* harmony import */ var _map_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.component */ "./src/app/home/map/map.component.ts");

var MapRoutes = [
    {
        path: 'map',
        component: _map_component__WEBPACK_IMPORTED_MODULE_0__["MapComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/monitor/monitor.component.html":
/*!*****************************************************!*\
  !*** ./src/app/home/monitor/monitor.component.html ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n\r\n\r\n\r\n<div class=\"map_warp\">\r\n  <!-- 选择区域 -->\r\n  <div class=\"Selection-Region\" *ngIf=\"visible == true\">\r\n      <!-- 城市列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"citylistMouseleave()\">\r\n      \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showCiyt()\">\r\n          <span class=\"filter\" *ngIf=\"map_model.currentCity\">{{map_model.currentCity.name}}</span>\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentCity\">选择城市</span>\r\n          <!-- <i class=\"fa fa-bell-o nav-icon \" aria-hidden=\"true\"></i> -->\r\n        </span>\r\n        <div id=\"city-panel\" class=\"city-panel dropdown_panel\" *ngIf=\"cityshow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <dl *ngFor=\"let item of map_model.cityList\">\r\n              <dt>{{item.name}}</dt>\r\n              <dd *ngIf=\"item.children && item.children.length > 0\">\r\n                <a title=\"智慧城市\" *ngFor=\"let itemc of item.children\" (click)=\"selecteCity(itemc)\">{{itemc.name}}</a>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n      \r\n        </div>\r\n      \r\n      </div>\r\n      \r\n      <!-- 区域列表 -->\r\n      <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"arealistMouseleave()\">\r\n      \r\n        <span class=\"cl-blue cur-pointer\" (mouseover)=\"showArea()\">\r\n          <span class=\"filter\" *ngIf=\"!map_model.currentArea\">选择区域</span>\r\n          <span class=\"filter\" *ngIf=\"map_model.currentArea\">{{map_model.currentArea.name}}</span>\r\n        </span>\r\n      \r\n        <div class=\"arealist-wrap dropdown_panel\" *ngIf=\"areashow\">\r\n          <div class=\"dropdown_panel_inner\">\r\n            <span class=\"menu_arrow_left\"></span>\r\n            <ul class=\"arealist\" data-type=\"area\">\r\n              <!-- <li data-val=\"0\" class=\"arealist-item\" (mouseover)=\"arealistMouseNone()\">\r\n                              <em>不限</em>\r\n                          </li> -->\r\n              <li class=\"arealist-item\" *ngFor=\"let node of map_model.currentChildren\" (mouseover)=\"arealistMouseover(node)\"\r\n                (click)=\"selecteblock(node)\">\r\n                <em>{{node.name}}</em>\r\n              </li>\r\n      \r\n            </ul>\r\n            <div class=\"blocklist-wrap\" *ngIf=\"map_model.currentBlock.length > 0\">\r\n              <ul class=\"blocklist\" data-type=\"block\">\r\n                <!-- <li data-val=\"0\">不限</li> -->\r\n                <li *ngFor=\"let block of map_model.currentBlock\" (click)=\"selecteblock(block)\">{{block.name}}</li>\r\n      \r\n              </ul>\r\n            </div>\r\n      \r\n      \r\n          </div>\r\n      \r\n      \r\n        </div>\r\n      \r\n      </div>\r\n\r\n  \r\n    <!-- 设备列表 -->\r\n    <div class=\"d-inline-block sel-area-block\" (mouseleave)=\"devicelistMouseleave()\">\r\n  \r\n      <span class=\"cl-blue cur-pointer\" (mouseover)=\"showDevice()\">\r\n        <span class=\"filter\" *ngIf=\"!typeName\">设备类别</span>\r\n        <span class=\"filter\" *ngIf=\"typeName\">{{typeName}}</span>\r\n  \r\n      </span>\r\n      <div id=\"device-panel\" class=\"device-panel dropdown_panel\" *ngIf=\"deviceshow\">\r\n        <div class=\"dropdown_panel_inner\">\r\n          <span class=\"menu_arrow_left\"></span>\r\n          <dl>\r\n            <dt>\r\n              <a (click)=\"selecteDeviceNone()\">不限</a>\r\n            </dt>\r\n          </dl>\r\n          <dl *ngFor=\"let device of map_model.deviceList\">\r\n            <dt>\r\n              <a title=\"智慧城市\" (click)=\"selecteDevice(device)\">{{device.name}}</a>\r\n            </dt>\r\n          </dl>\r\n        </div>\r\n\r\n      </div>\r\n  \r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- 右边按钮 -->\r\n  <div class=\"btn-icon\" *ngIf=\"visible == true\">\r\n    <!-- <div class=\"d-inline-block icon-item cur-pointer\">\r\n      <img src=\"../../../assets/imgs/control.png\" alt=\"图片\">\r\n\r\n    </div> -->\r\n\r\n    <div class=\"d-inline-block icon-item cur-pointer\">\r\n    \r\n      <img src=\"../../../assets/imgs/switch.png\" alt=\"图片\" (click)=\"enterFullScreen()\">\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <!-- 地图 -->\r\n  <div #map1 id=\"map_container1\" class=\"map_container fulls-map\" ></div>\r\n\r\n  <!-- 设备操作 -->\r\n  <div class=\"device-detail\" *ngIf=\"deviceChild\">\r\n    <div class=\"device-title\" >\r\n      <span class=\"device-close float-right\" (click)=\"closeDetail()\">X</span>\r\n    </div>\r\n    <div *ngFor=\"let item of deviceChild\">\r\n          <p>\r\n            <span>设备名称:</span>\r\n            <span>{{item.description}}</span>\r\n          </p>\r\n          <p>\r\n            <span>设备ID:</span>\r\n            <span>{{item.name}}</span>\r\n          </p>\r\n          <table class=\"table\">\r\n            <tr>\r\n              <th>参数</th>\r\n              <th>值</th>\r\n              <th>单位</th>\r\n          \r\n            </tr>\r\n            <tr *ngFor=\"let items of item.deviceProperties\">\r\n              <td>{{items.name}}</td>\r\n              <td>{{items.value}}</td>\r\n              <td>{{items.Unit}}</td>\r\n            </tr>\r\n          </table>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n<!-- <div class=\"tag-bule\">\r\n\r\n</div> -->\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/home/monitor/monitor.component.scss":
/*!*****************************************************!*\
  !*** ./src/app/home/monitor/monitor.component.scss ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".test-cs {\n  height: 90px;\n  width: 90px;\n  background: #56c5ff;\n  padding: 24px 0; }\n\n.map_container {\n  width: 100%; }\n\n.fulls-map {\n  height: 100vh; }\n\n.dropdown-menu {\n  top: 29px !important;\n  min-width: 90px !important; }\n\n.dropdown-menu .dropdown-item {\n    font-size: 14px !important; }\n\n.device-detail {\n  width: 300px;\n  background: #fff;\n  border: 1px solid #ccc;\n  z-index: 4000;\n  position: absolute;\n  right: 85px;\n  top: 0px;\n  padding: 0px 15px; }\n\n.device-close {\n  cursor: pointer;\n  color: #8e8f91; }\n\n.device-title {\n  display: block;\n  padding: 0;\n  margin: 0;\n  height: 40px;\n  line-height: 40px;\n  border-bottom: 1px solid #ccc; }\n\n.color-red {\n  color: #f44336; }\n\n.color-yellow {\n  color: #fe9001; }\n\n.color-orange {\n  color: #f0c001; }\n\n.info-footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  margin: 0; }\n\n.info-logo {\n  position: absolute;\n  left: 70px; }\n\n.info-text {\n  margin-left: 130px;\n  font-size: 16px; }\n\n.mask-zt {\n  padding: 15px;\n  z-index: 2;\n  position: relative;\n  height: 150px; }\n\n.mask-zt:after {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0px;\n  right: 0px;\n  background: rgba(0, 0, 0, 0.6);\n  height: 100%;\n  z-index: -1; }\n\n.video-play {\n  position: absolute;\n  bottom: 0px;\n  right: 0; }\n\n.video-play img {\n    position: absolute;\n    right: 115px;\n    bottom: 10px; }\n\n.info-border {\n  border-bottom: 1px solid;\n  margin-bottom: 10px; }\n"

/***/ }),

/***/ "./src/app/home/monitor/monitor.component.ts":
/*!***************************************************!*\
  !*** ./src/app/home/monitor/monitor.component.ts ***!
  \***************************************************/
/*! exports provided: MonitorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonitorComponent", function() { return MonitorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_circle_overlay_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../service/circle-overlay.service */ "./src/app/service/circle-overlay.service.ts");
/* harmony import */ var _service_grad_overlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../service/grad.overlay */ "./src/app/service/grad.overlay.ts");
/* harmony import */ var _service_url_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../service/url.service */ "./src/app/service/url.service.ts");
/* harmony import */ var _service_monitor_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../service/monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _service_mess_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../service/mess.service */ "./src/app/service/mess.service.ts");
/* harmony import */ var _service_full_screen_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../service/full-screen.service */ "./src/app/service/full-screen.service.ts");
/* harmony import */ var _service_communicate_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../service/communicate.service */ "./src/app/service/communicate.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var MonitorComponent = /** @class */ (function () {
    function MonitorComponent(monitorService, messService, router, urlService, fullScreenService, communicateService) {
        this.monitorService = monitorService;
        this.messService = messService;
        this.router = router;
        this.urlService = urlService;
        this.fullScreenService = fullScreenService;
        this.communicateService = communicateService;
        /*
        model:object
        light_list: array // 灾害数据
        */
        this.model = {}; // 存储数据
        /*
        map_model: object // 城市列表相关
        @currentCity: any // 当前城市
        @currentArea: any // 当前区域
        @cityList: array // 城市列表
        @currentChildren: array // 区域列表一级
        @currentBlock: array // 当前城市街道 = []; // 区域列表2级
        */
        this.map_model = {}; // 存储数据
        this.markers = []; // 标记
        this.areashow = false; // 默认区域列表不显示
        this.cityshow = false; // 默认区域列表不显示
        this.deviceshow = false; // 默认设备列表不显示
        this.parentNode = null; // 用于递归查询JSON树 父子节点
        this.node = null; // 用于递归查询JSON树 父子节点
        this.type = 0; // 设备类型id
        this.visible = true; // 控制可视区域
        this.model.light_list = []; // 城市列表
        this.map_model.deviceList = []; // 城市列表
        this.map_model.cityList = []; // 城市列表
        this.map_model.currentChildren = []; // 区域列表一级
        this.map_model.currentBlock = []; // // 当前城市街道 = []; // 区域列表2级
        this.zoom = 12; // 默认
        // config.placement = 'bottom-left';
        this.visible = urlService.getURLParam('visible') === '' ? true : false;
    }
    MonitorComponent.prototype.ngOnInit = function () {
        this.getCity(); // 获取城市列表
        this.getDevice(); // 获取设备列表
        var that = this;
        // 退出全屏
        window.onresize = function () {
            if (!that.checkFull()) {
                // 要执行的动作
                console.log('你按下了Esc');
                that.exitFullScreen();
            }
        };
    };
    // 百度地图API功能
    MonitorComponent.prototype.addBeiduMap = function () {
        var city = this.map_model.currentCity;
        var map = this.map = new BMap.Map(this.map_container.nativeElement, {
            enableMapClick: true,
            minZoom: 11,
        }); // 创建地图实例
        // 这里我们使用BMap命名空间下的Point类来创建一个坐标点。Point类描述了一个地理坐标点，其中116.404表示经度，39.915表示纬度。（为天安门坐标）
        var point = new BMap.Point(114.064675, 22.550651); // 坐标可以通过百度地图坐标拾取器获取
        map.centerAndZoom(point, this.zoom); // 设置中心和地图显示级别
        map.setMapStyle({ style: 'grayscale' });
        this.getPoint(map, city); // 坐标可以通过百度地图坐标拾取器获取
        // 地图类型控件
        map.addControl(new BMap.MapTypeControl());
        // map.setCurrentCity('广州');
        // 添加控件缩放
        // const offset = this.visible === true ? new BMap.Size(20, 140) : new BMap.Size(20, 15);
        var offset = new BMap.Size(20, 60);
        var navigationControl = this.navigationControl = new BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            offset: offset,
        });
        map.addControl(navigationControl);
        var top_left_control = new BMap.ScaleControl({ anchor: BMAP_ANCHOR_BOTTOM_LEFT, offset: new BMap.Size(20, 85) }); // 左上角，添加比例尺
        map.addControl(top_left_control);
        map.enableScrollWheelZoom(true); // 启动滚轮放大缩小，默认禁用
        // map.enableContinuousZoom(true); // 连续缩放效果，默认禁用
        this.dragendOff(map);
        this.zoomendOff(map);
        this.mapClickOff(map);
    };
    // 监控-点击地图事件
    MonitorComponent.prototype.mapClickOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('click', function (e) {
            that.deviceChild = null;
        });
    };
    // 监控-拖动地图事件-显示用户拖动地图后地图中心的经纬度信息。
    MonitorComponent.prototype.dragendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('dragend', function () {
            that.remove_overlay(baiduMap);
            that.addMarker(); // 获取数据-添加标注
        });
    };
    // 监控-地图缩放事件-地图缩放后的级别。
    MonitorComponent.prototype.zoomendOff = function (baiduMap) {
        var that = this;
        baiduMap.addEventListener('zoomend', function () {
            that.remove_overlay(baiduMap);
            that.addMarker(); // 添加标注
        });
    };
    MonitorComponent.prototype.checkFull = function () {
        var isFull;
        isFull = document.fullscreenEnabled || document.webkitIsFullScreen;
        if (isFull === undefined) {
            isFull = false;
        }
        return isFull;
    };
    // 创建文本标注对象
    MonitorComponent.prototype.overMessage = function (baiduMap, pt, message) {
        var that = this;
        var opts = {
            position: pt,
            // offset: new BMap.Size(30, -30)    // 设置文本偏移量
            offset: new BMap.Size(0, 0) // 设置文本偏移量
        };
        var label = new BMap.Label(message, opts); // 创建文本标注对象
        label.setStyle({
            color: 'red',
            fontSize: '12px',
            height: '20px',
            lineHeight: '20px',
            fontFamily: '微软雅黑'
        });
        baiduMap.addOverlay(label);
    };
    // 解析地址- 设置中心和地图显示级别
    MonitorComponent.prototype.getPoint = function (baiduMap, city) {
        var that = this;
        // 创建地址解析器实例
        var myGeo = new BMap.Geocoder();
        var zoom = this.switchZone(city.level);
        var fullName = city.full_name;
        // console.log(city);
        var pt = city.center;
        var point = new BMap.Point(pt.lng, pt.lat);
        baiduMap.centerAndZoom(point, zoom);
        that.addMarker(); // 获取数据-添加标注
        // 将地址解析结果显示在地图上,并调整地图视野，获取数据-添加标注
        // myGeo.getPoint(fullName, function (point) {
        //   if (point) {
        //     console.log(point);
        //     baiduMap.centerAndZoom(point, zoom);
        //     pt = point;
        //     that.addMarker(); // 获取数据-添加标注
        //   } else {
        //     console.log('您选择地址没有解析到结果!');
        //   }
        // }, that.node.name);
    };
    // 省市区街道-地图级别
    MonitorComponent.prototype.switchZone = function (level) {
        var zone = 12;
        switch (level) {
            case 1:
                zone = 10;
                break;
            case 2:
                zone = 12;
                break;
            case 3:
                zone = 15;
                break;
            case 4:
                zone = 19;
                break;
            default:
                break;
        }
        return zone;
    };
    // 省市区街道-地图级别
    MonitorComponent.prototype.switchLevel = function (zone) {
        var level = 2;
        if (zone <= 10) {
            level = 1;
        }
        else if (zone <= 13 && zone > 10) {
            level = 2;
        }
        else if (zone <= 16 && zone > 13) {
            level = 3;
        }
        else {
            level = 4;
        }
        return level;
    };
    // 获取数据
    // 获取城市列表 --ok
    MonitorComponent.prototype.getCity = function () {
        var that = this;
        this.monitorService.getZoneDefault().subscribe({
            next: function (val) {
                that.map_model.cityList = val.regions;
                that.zoom = that.switchZone(val.zone.level);
                that.node = that.getNode(val.regions, val.zone.region_id);
                that.map_model.currentCity = that.node;
                that.map_model.currentChildren = that.node.children;
            },
            complete: function () {
                that.addBeiduMap(); // 创建地图
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取设备列表 -- ok
    MonitorComponent.prototype.getDevice = function () {
        var that = this;
        this.monitorService.getDevice().subscribe({
            next: function (val) {
                that.map_model.deviceList = val;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    //  获取按区域汇总的位置数据 --ok
    MonitorComponent.prototype.getRegion = function (length, color, mouseoverColor) {
        var that = this;
        var value;
        var zoom = this.map.getZoom(); // 地图级数
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var ne = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var sw = Bounds.getSouthWest(); // 返回矩形区域的西南角
        var type = this.type; // 设备类型
        var level = this.switchLevel(zoom) + 1;
        this.monitorService.getRegions(sw, ne, level, type).subscribe({
            next: function (val) {
                value = val;
            },
            complete: function () {
                that.addCirCle(value, length, color, mouseoverColor);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取详情
    MonitorComponent.prototype.getDetails = function (sw, ne, zoom) {
        var that = this;
        var type = this.type;
        var value;
        this.monitorService.getDetails(sw, ne, zoom, type).subscribe({
            next: function (val) {
                value = val;
            },
            complete: function () {
                that.addPoint(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // // 获取指定位置所挂设备参数定义
    MonitorComponent.prototype.getDeviceDetails = function (positionId, deviceType) {
        var value;
        var that = this;
        this.monitorService.getDeviceDetails(positionId, deviceType).subscribe({
            next: function (val) {
                value = val;
            },
            complete: function () {
                that.deviceChild = value;
                console.log(value);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 清除覆盖物
    MonitorComponent.prototype.remove_overlay = function (baiduMap) {
        baiduMap.clearOverlays();
    };
    // 根据级别获取数据-锚点
    MonitorComponent.prototype.addMarker = function () {
        var that = this;
        var Bounds = this.map.getBounds(); // 返回地图可视区域，以地理坐标表示
        var ne = Bounds.getNorthEast(); // 返回矩形区域的东北角
        var sw = Bounds.getSouthWest(); // 返回矩形区域的西南角
        var zoom = this.map.getZoom();
        var length, color, mouseoverColor;
        if (zoom <= 13) {
            length = 90;
            color = '#87a2b7';
            mouseoverColor = '#9bd9dd';
            that.getRegion(length, color, mouseoverColor);
        }
        else if (zoom <= 16 && zoom > 13) {
            length = 90;
            color = '#87a2b7';
            mouseoverColor = '#9bd9dd';
            that.getRegion(length, color, mouseoverColor);
        }
        else {
            that.getDetails(sw, ne, zoom);
        }
    };
    // 添加点标注
    MonitorComponent.prototype.addPoint = function (val) {
        this.markers = [];
        var points = [];
        var that = this;
        val.map(function (item, i) {
            var pt = new BMap.Point(item.point.lng, item.point.lat);
            // 添加自定义覆盖物
            var mySquare;
            if (item.with_error && item.with_error === true) {
                mySquare = new _service_grad_overlay__WEBPACK_IMPORTED_MODULE_3__["GradOverlar"](pt, 36, 'tag-red');
                // console.log('异常');
            }
            else if (item.with_offline === false) {
                mySquare = new _service_grad_overlay__WEBPACK_IMPORTED_MODULE_3__["GradOverlar"](pt, 36, 'tag-grad');
                // console.log('掉线');
            }
            else {
                mySquare = new _service_grad_overlay__WEBPACK_IMPORTED_MODULE_3__["GradOverlar"](pt, 36, 'tag-bule');
                // console.log('正常');
            }
            that.map.addOverlay(mySquare);
            that.markers.push(mySquare); // 聚合
            points.push(pt); // 聚合
        });
        // 点击点标注事件
        for (var index = 0; index < that.markers.length; index++) {
            var marker = that.markers[index];
            that.openSideBar(marker, that.map, val[index], points[index]);
        }
    };
    // 添加圆形标注
    MonitorComponent.prototype.addCirCle = function (val, length, color, mouseoverColor) {
        this.markers = [];
        var that = this;
        // const markers: any[] = [];
        val.map(function (item, i) {
            var pt = new BMap.Point(item.center.lng, item.center.lat);
            var name = item.name;
            var count = item.count;
            // 添加自定义覆盖物
            var mySquare = new _service_circle_overlay_service__WEBPACK_IMPORTED_MODULE_2__["CircleOverlarService"](pt, name, count, length, color, mouseoverColor);
            that.map.addOverlay(mySquare);
            that.markers.push(mySquare); // 聚合
        });
        // 点击圆形标注事件
        for (var index = 0; index < that.markers.length; index++) {
            var marker = that.markers[index];
            var item = val[index];
            this.setZoom(marker, this.map, item);
        }
    };
    // 圆圈区域点击事件
    MonitorComponent.prototype.setZoom = function (marker, baiduMap, item) {
        var zoom = this.map.getZoom();
        switch (zoom) {
            case 11:
            case 12:
            case 13:
                zoom = 15;
                break;
            case 14:
            case 15:
            case 16:
                zoom = 17;
                break;
            default:
                break;
        }
        marker.V.addEventListener('click', function () {
            var point = new BMap.Point(item.center.lng, item.center.lat); // 坐标可以通过百度地图坐标拾取器获取 --万融大厦
            baiduMap.centerAndZoom(point, zoom); // 设置中心和地图显示级别
            // baiduMap.setZoom(zoom);
        });
    };
    // 点注标点击事件
    MonitorComponent.prototype.openSideBar = function (marker, baiduMap, val, point) {
        var that = this;
        // <p style=’font - size: 12px; lineheight: 1.8em; ’> ${ val.name } </p>
        var opts = {
            width: 0,
            // height: 100,     // 信息窗口高度
            // title: `${val.name} | ${val.id }`, // 信息窗口标题
            // enableMessage: true, // 设置允许信息窗发送短息
            enableAutoPan: true,
        };
        var txt = "\n    <p style='font-size: 12px; line-height: 1.8em; border-bottom: 1px solid #ccc; padding-bottom: 10px;'> \u7F16\u53F7 | " + val.number + " </p>\n\n    ";
        if (val.device_types) {
            for (var index = 0; index < val.device_types.length; index++) {
                txt = txt + ("<p  class='cur-pointer'  id='" + val.device_types[index].id + "'> " + val.device_types[index].name + "</p>");
            }
        }
        var infoWindow = new BMap.InfoWindow(txt, opts);
        marker.V.addEventListener('click', function () {
            that.device = val;
            baiduMap.openInfoWindow(infoWindow, point); // 开启信息窗口
            setTimeout(function () {
                that.deviceAddEventListener();
            }, 0);
        });
    };
    // 点击子设备
    MonitorComponent.prototype.deviceAddEventListener = function () {
        var that = this;
        if (this.device.device_types) {
            var _loop_1 = function (index) {
                var positionId = this_1.device.id;
                var deviceType = this_1.device.device_types[index].id;
                var device = $("#" + deviceType);
                device.on('click', function () {
                    that.getDeviceDetails(positionId, deviceType);
                });
            };
            var this_1 = this;
            for (var index = 0; index < this.device.device_types.length; index++) {
                _loop_1(index);
            }
        }
    };
    // 点击关闭操作详情
    MonitorComponent.prototype.closeDetail = function () {
        this.deviceChild = null;
    };
    // 获取marker的位置
    MonitorComponent.prototype.getAttr = function (marker) {
        var p = marker.getPosition();
        alert('marker的位置是' + p.lng + ',' + p.lat);
    };
    // 获取当前位置坐标 // 设置中心和地图显示级别
    MonitorComponent.prototype.getGeolocation = function (baidumap) {
        var geolocation = new BMap.Geolocation(); // 获取当前位置坐标
        geolocation.getCurrentPosition(function (r) {
            if (this.getStatus() === BMAP_STATUS_SUCCESS) {
                // fun(r);
                var mk = new BMap.Marker(r.point);
                baidumap.addOverlay(mk); // 标注当前位置
                // 在创建地图实例后，我们需要对其进行初始化，BMap.Map.centerAndZoom()方法要求设置中心点坐标和地图级别。 地图必须经过初始化才可以执行其他操作。
                baidumap.centerAndZoom(r.point, 17); // 设置中心和地图显示级别
            }
            else {
                alert('failed' + this.getStatus());
            }
        }, { enableHighAccuracy: true });
    };
    //
    /*
     * 递归查询JSON树 父子节点
     */
    /**
     * 根据NodeID查找当前节点以及父节点
     *
     * @param  {[type]}
     * @param  {[type]}
     * @return {[type]}
     */
    MonitorComponent.prototype.getNode = function (json, nodeId) {
        var that = this;
        // 1.第一层 root 深度遍历整个JSON
        for (var i = 0; i < json.length; i++) {
            if (that.node) {
                break;
            }
            var obj = json[i];
            // 没有就下一个
            if (!obj || !obj.id) {
                continue;
            }
            // 2.有节点就开始找，一直递归下去
            if (obj.id === nodeId) {
                // 找到了与nodeId匹配的节点，结束递归
                that.node = obj;
                break;
            }
            else {
                // 3.如果有子节点就开始找
                if (obj.children) {
                    // 4.递归前，记录当前节点，作为parent 父亲
                    that.parentNode = obj;
                    // 递归往下找
                    that.getNode(obj.children, nodeId);
                }
                else {
                    // 跳出当前递归，返回上层递归
                    continue;
                }
            }
        }
        // 5.如果木有找到父节点，置为null，因为没有父亲
        if (!that.node) {
            that.parentNode = null;
        }
        // 6.返回结果obj
        // return {
        //   parentNode: that.parentNode,
        //   node: that.node
        // };
        return that.node;
    };
    // 路由跳转-传递参数-这是在html中绑定的click跳转事件
    MonitorComponent.prototype.jumpHandle = function () {
        this.router.navigate(["home/video"]);
    };
    // 打开新页面
    MonitorComponent.prototype.addURLParamAddOpen = function () {
        this.urlService.addURLParamAddOpen('visible', 'false');
        localStorage.setItem('visible', 'false');
    };
    // 进入全屏
    MonitorComponent.prototype.enterFullScreen = function () {
        this.visible = false;
        localStorage.setItem('visible', 'false');
        console.log('进入全屏');
        // 设置缩放控件偏移量
        var offset = new BMap.Size(20, 15);
        this.navigationControl.setOffset(offset);
        this.communicateService.sendMessage(this.visible); // 发布一条消息
        this.fullScreenService.enterFullScreen();
    };
    // 退出全屏
    MonitorComponent.prototype.exitFullScreen = function () {
        // this.urlService.addURLParam('visible', 'false');
        this.visible = true;
        localStorage.setItem('visible', 'true');
        console.log('退出全屏');
        console.log(this.visible);
        // 设置缩放控件偏移量
        var offset = new BMap.Size(20, 60);
        this.navigationControl.setOffset(offset);
        this.communicateService.sendMessage(this.visible); // 发布一条消息
        // this.fullScreenService.exitFullScreen();
    };
    // 选择城市
    MonitorComponent.prototype.selecteCity = function (city) {
        this.map_model.currentCity = city;
        this.node = city;
        this.getPoint(this.map, city); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentChildren = city.children;
    };
    // 选择区域
    MonitorComponent.prototype.selecteblock = function (block) {
        this.getPoint(this.map, block); // 解析地址- 设置中心和地图显示级别
        this.map_model.currentArea = block;
    };
    // 选择设备
    MonitorComponent.prototype.selecteDevice = function (device) {
        this.type = device.id;
        this.typeName = device.name;
        console.log(this.type);
        this.remove_overlay(this.map);
        this.addMarker();
    };
    // selecteDeviceNone
    MonitorComponent.prototype.selecteDeviceNone = function () {
        this.type = 0;
        this.typeName = null;
        this.remove_overlay(this.map);
        this.addMarker();
    };
    // 选择设备
    // 显示区域
    MonitorComponent.prototype.showArea = function () {
        this.areashow = true;
    };
    // 显示城市
    MonitorComponent.prototype.showCiyt = function () {
        this.cityshow = true;
    };
    // 显示设备
    MonitorComponent.prototype.showDevice = function () {
        this.deviceshow = true;
    };
    // 选择区域
    MonitorComponent.prototype.arealistMouseover = function (area) {
        this.map_model.currentBlock = area.children;
    };
    // 离开区域
    MonitorComponent.prototype.arealistMouseleave = function () {
        this.areashow = false;
        this.map_model.currentBlock = [];
    };
    // 离开城市
    MonitorComponent.prototype.citylistMouseleave = function () {
        this.cityshow = false;
    };
    // 离开设备
    MonitorComponent.prototype.devicelistMouseleave = function () {
        this.deviceshow = false;
    };
    MonitorComponent.prototype.arealistMouseNone = function () {
        this.areashow = true;
        this.map_model.currentBlock = [];
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map1'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], MonitorComponent.prototype, "map_container", void 0);
    MonitorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-monitor',
            template: __webpack_require__(/*! ./monitor.component.html */ "./src/app/home/monitor/monitor.component.html"),
            styles: [__webpack_require__(/*! ./monitor.component.scss */ "./src/app/home/monitor/monitor.component.scss")]
        }),
        __metadata("design:paramtypes", [_service_monitor_service__WEBPACK_IMPORTED_MODULE_5__["MonitorService"],
            _service_mess_service__WEBPACK_IMPORTED_MODULE_6__["MessService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _service_url_service__WEBPACK_IMPORTED_MODULE_4__["UrlService"],
            _service_full_screen_service__WEBPACK_IMPORTED_MODULE_7__["FullScreenService"], _service_communicate_service__WEBPACK_IMPORTED_MODULE_8__["CommunicateService"]])
    ], MonitorComponent);
    return MonitorComponent;
}());



/***/ }),

/***/ "./src/app/home/monitor/monitor.routes.ts":
/*!************************************************!*\
  !*** ./src/app/home/monitor/monitor.routes.ts ***!
  \************************************************/
/*! exports provided: MonitorRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonitorRoutes", function() { return MonitorRoutes; });
/* harmony import */ var _monitor_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./monitor.component */ "./src/app/home/monitor/monitor.component.ts");

var MonitorRoutes = [
    {
        path: 'monitor',
        component: _monitor_component__WEBPACK_IMPORTED_MODULE_0__["MonitorComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/strategy/strategy.component.html":
/*!*******************************************************!*\
  !*** ./src/app/home/strategy/strategy.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"nav-margin strategy\">\r\n  <!-- 左侧 -->\r\n  <div class=\"strategy-left\">\r\n    <div class=\"strategy-add\">\r\n      <span class=\"strategy-title\">策略表</span>\r\n      <button type=\"button\" class=\"btn btn-bg\" (click)=\"openAddStrategy(contentAddStrategy)\">\r\n        新建\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"strategy-list\">\r\n      <ul >\r\n        <li *ngFor=\"let item of strategyList;let i = index\" class=\"cur-pointer\" (click)=\"selectStrategy(item,i)\"  [ngClass]=\"{'active': i == strategy_index}\">\r\n          <span>{{item.name}}</span>\r\n          <div class=\"modify-strategy d-inline\">\r\n              <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdataStrategy(contentUpdateStrategy, item, i)\">修改</a>\r\n              <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelStrategy(contentDelStrategy,item, i)\">删除</a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- 右侧 -->\r\n  <div class=\"strategy-right\">\r\n    <div class=\"title-right\">\r\n      <span *ngIf=\"currentStrategy\" class=\"strategy-title\">{{currentStrategy.name}}</span>\r\n      <span class=\"jump-iron\">\r\n        <i class=\"fa fa-arrow-circle-o-left fa-2x cur-pointer color-btn-text\" (click)=\"jumpHandle('home/application/light')\"></i>\r\n      </span>\r\n\r\n    </div>\r\n    <!-- 菜单-->\r\n    <div class=\"nav-strategy\">\r\n      <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let item of navs;let i = index\" role=\"presentation \" class=\" cur-pointer\"\r\n          (click)=\"changeNav(i)\" [ngClass]=\"{'active':item.id === nav_index}\">\r\n          <a >{{item.name}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <!-- 菜单一  策略时间-->\r\n    <div *ngIf=\"nav_index === 0\" class=\"strategy-table\">\r\n      <!-- 日期 -->\r\n      <div class=\"row\">\r\n        <div class=\"col-6 col-md-4 \">\r\n          <div class=\" panel-default city-list\">\r\n            <div class=\"date-title\">\r\n              <span >日期</span>\r\n              <button class=\"btn btn-bg\" (click)=\"openAddRule(contentAddRule)\">添加</button>\r\n\r\n            </div>\r\n            <ul *ngIf=\"ruleList\" class=\"data-list\">\r\n              <li *ngFor=\"let item of ruleList;let i = index\" class=\"cur-pointer\" (click)=\"selectRule(item, i)\"  [ngClass]=\"{'active': i == rule_index}\">\r\n                <span>{{item.start.month}}月{{item.start.day}}日~{{item.end.month}}月{{item.end.day}}日</span>\r\n                <div class=\"modify-strategy d-inline\">\r\n                    <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdataRule(contentUpdataRule,item, i)\">修改</a>\r\n                    <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelRule(contentDelRule,item, i)\">删除</a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <div *ngIf=\"ruleList.length === 0 || !ruleList\" style=\"margin-bottom: 5px;\">无数据！</div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-6 col-md-4 \">\r\n          <div class=\"table-holiday panel-default\">\r\n            <div class=\"date-title\">\r\n              <span>工作日</span>\r\n            </div>\r\n            <div *ngIf=\"ruleList && ruleList.length > 1\"> \r\n                    <!-- 开灯时间： -->\r\n                    <div class=\"row align-items-center justify-content-center\">\r\n                      <div class=\"col-4 padding-0\">\r\n                        <label for=\"brightnessTime\">开灯时间：</label>\r\n                    \r\n                      </div>\r\n                      <div class=\"col-6 span-marg-bot\">\r\n                        <!-- <span>17:00</span> -->\r\n                        <span *ngIf=\"currentRule && currentRule.workdayRules && currentRule.workdayRules[0]\">\r\n                          {{currentRule.workdayRules[0].start.hour}}时 {{currentRule.workdayRules[0].start.minute}}分\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row align-items-center justify-content-center\">\r\n                      <div class=\"col-4 padding-0\">\r\n                        <label for=\"changeBrightness\">起始亮度：</label>\r\n                      </div>\r\n                      <div class=\"col-6 span-marg-bot\">\r\n                        <!-- <span>30</span> -->\r\n                        <span *ngIf=\"currentRule && currentRule.workdayRules && currentRule.workdayRules[0]\">\r\n                          {{currentRule.workdayRules[0].lightLevel}}%</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    <table class=\"table table-hover\">\r\n                    \r\n                      <thead>\r\n                        <tr class=\"table-header\">\r\n                          <th>中间时间段</th>\r\n                          <th>亮度</th>\r\n                        </tr>\r\n                      </thead>\r\n                    \r\n                      <tr *ngFor=\"let item of workdayList\">\r\n                        <td>{{item.start.hour}}时{{item.start.minute}}分</td>\r\n                        <td>{{item.lightLevel}}%</td>\r\n                      </tr>\r\n                    </table>\r\n                    <div *ngIf=\"workdayList.length === 0 || !workdayList\" style=\"margin-bottom: 5px;\">无数据！</div>\r\n                      <!-- 关灯时间： -->\r\n                    <div class=\"row align-items-center justify-content-center\">\r\n                      <div class=\"col-4 padding-0\">\r\n                        <label for=\"brightnessTime\">关灯时间：</label>\r\n                    \r\n                      </div>\r\n                      <div class=\"col-6 span-marg-bot\">\r\n                        <!-- <span>7:00</span> -->\r\n                        <span *ngIf=\"currentRule && currentRule.workdayRules && currentRule.workdayRules[currentRule.workdayRules.length - 1]\">\r\n                          {{currentRule.workdayRules[currentRule.workdayRules.length - 1].start.hour}}\r\n                          时 {{currentRule.workdayRules[currentRule.workdayRules.length - 1].start.minute}}分</span>\r\n                      </div>\r\n                    </div>\r\n            </div>\r\n            <div *ngIf=\"ruleList.length === 0 || !ruleList\" style=\"margin-bottom: 5px;\">无数据！</div>\r\n\r\n\r\n        \r\n          </div>\r\n        \r\n        </div>\r\n\r\n        <div class=\"col-6 col-md-4 \">\r\n          <div class=\"table-holiday panel-default\">\r\n            <div class=\"date-title\">\r\n              <span>节假日</span>\r\n            </div>\r\n            <div *ngIf=\"ruleList && ruleList.length > 1\">\r\n                <!-- 开灯时间： -->\r\n                <div class=\"row align-items-center justify-content-center\">\r\n                  <div class=\"col-4 padding-0\">\r\n                    <label for=\"brightnessTime\">开灯时间：</label>\r\n                \r\n                  </div>\r\n                  <div class=\"col-6 span-marg-bot\">\r\n                    <!-- <span>17:00</span> -->\r\n                    <span *ngIf=\"currentRule && currentRule.holidayRules && currentRule.holidayRules[0]\">\r\n                      {{currentRule.holidayRules[0].start.hour}}时 {{currentRule.holidayRules[0].start.minute}}分\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row align-items-center justify-content-center\">\r\n                  <div class=\"col-4 padding-0\">\r\n                    <label for=\"changeBrightness\">起始亮度：</label>\r\n                  </div>\r\n                  <div class=\"col-6 span-marg-bot\">\r\n                    <!-- <span>30</span> -->\r\n                    <span *ngIf=\"currentRule && currentRule.holidayRules && currentRule.holidayRules[0]\">\r\n                      {{currentRule.holidayRules[0].lightLevel}}%</span>\r\n                  </div>\r\n                </div>          \r\n                \r\n                <table class=\"table table-hover\">\r\n                \r\n                  <thead>\r\n                    <tr class=\"table-header\">\r\n                      <th>中间时间段</th>\r\n                      <th>亮度</th>\r\n                    </tr>\r\n                  </thead>\r\n                \r\n                  <tr *ngFor=\"let item of holidayList\">\r\n                    <td>{{item.start.hour}}时{{item.start.minute}}分</td>\r\n                    <td>{{item.lightLevel}}%</td>\r\n                  </tr>\r\n                </table>\r\n                <div *ngIf=\"holidayList.length === 0 || !holidayList\" style=\"margin-bottom: 5px;\">无数据！</div>\r\n                <!-- 关灯时间： -->\r\n                <div class=\"row align-items-center justify-content-center\">\r\n                  <div class=\"col-4 padding-0\">\r\n                    <label for=\"brightnessTime\">关灯时间：</label>\r\n                \r\n                  </div>\r\n                  <div class=\"col-6 span-marg-bot\">\r\n                    <!-- <span>7:00</span> -->\r\n                    <span *ngIf=\"currentRule && currentRule.holidayRules && currentRule.holidayRules[currentRule.holidayRules.length - 1]\">\r\n                      {{currentRule.holidayRules[currentRule.holidayRules.length - 1].start.hour}}\r\n                      时 {{currentRule.holidayRules[currentRule.holidayRules.length - 1].start.minute}}分</span>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"ruleList.length === 0 || !ruleList\" style=\"margin-bottom: 5px;\">无数据！</div>\r\n        \r\n\r\n        \r\n          </div>\r\n        \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n    <!-- 菜单二 策略范围 -->\r\n    <div *ngIf=\"nav_index === 1\" class=\"strategy-table\">\r\n      <div class=\"row\">\r\n        <div class=\"col-3\" style=\" max-width: 250px; \">\r\n          <!-- 搜索列表 -->\r\n          <div class=\"city-list panel-default\">\r\n            <ul id=\"treeDemo\" class=\"ztree\"></ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n          <div class=\"panel-default page-list-table\">\r\n            <!-- 搜索 -->\r\n            <form class=\"form-inline xy-pad search-form\">\r\n\r\n              <div class=\"form-group\">\r\n                <input id=\"sole-input\" class=\"form-control searchbox-content-common\" type=\"text\" name=\"word\" autocomplete=\"off\" maxlength=\"256\"\r\n                  placeholder=\"Search\" value=\"\">\r\n              </div>\r\n            \r\n              <button type=\"submit\" class=\"btn btn-bg\">搜索</button>\r\n              <button type=\"submit\" class=\"btn btn-bg form-btn\" [disabled]=\"regionbody.length === 0\" (click)=\"setRegion()\">下发策略</button>\r\n            </form>\r\n            \r\n            <table class=\"table table-hover\">\r\n            \r\n              <thead>\r\n                <tr class=\"table-header\">\r\n                  <!-- <th>\r\n                    <input type=\"checkbox\" (change)=\"allCheckbox()\" [checked]= \"allCheck\" [(ngModel)]= \"allCheck\">\r\n                  </th> -->\r\n                  <th>设备名称</th>\r\n                  <th>设备编号</th>\r\n                  <th>应用策略</th>\r\n                  <th>亮度</th>\r\n                  <th>电压（mv）</th>\r\n                  <th>电流（mA）</th>\r\n                  <th>是否在线</th>\r\n                  <th>是否故障</th>\r\n    \r\n                </tr>\r\n              </thead>\r\n              <tr *ngFor=\"let item of rangeListItems;let i = index\">\r\n                <!-- <td class=\"\">\r\n                  <input type=\"checkbox\" (change)=\"itemCheckbox(item)\" [checked]= \"item['check']\" [(ngModel)]= \"item['check']\">\r\n                </td> -->\r\n                <td class=\"\">{{item.description}}</td>\r\n                <td class=\"\">{{item.name}}</td>\r\n                <td class=\"\" *ngIf=\"item.rule && item.rule.name\">{{item.rule.name}}</td>\r\n                <td class=\"\">{{item.level}}%</td>\r\n                <td class=\"\">{{item.volt}}</td>\r\n                <td class=\"\">{{item.current}}</td>\r\n                <td class=\"\">{{item.offline}}</td>\r\n                <td class=\"\">{{item.error}}</td>\r\n              </tr>\r\n            </table>\r\n            <div *ngIf=\"rangeListItems.length === 0 || !rangeListItems\">无数据！</div>\r\n            <div *ngIf=\"rangeListItems.length > 0\">\r\n                  <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n                    (pageChange)=\"pageChange()\"></ngb-pagination>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n  <!-- 添加策略 ok-->\r\n  <ng-template #contentAddStrategy let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <font class=\"modal-title\">添加策略</font>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div>\r\n        策略名称：\r\n        <input type=\"text\" [(ngModel)]=\"strategyName\" name=\"strategyName\" maxlength=\"10\">\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Save click')\">确定</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <!-- 修改策略 ok-->\r\n  <ng-template #contentUpdateStrategy let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <font class=\"modal-title\">添加策略</font>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div>\r\n        策略名称：\r\n        <input type=\"text\" [(ngModel)]=\"strategyName\" name=\"strategyName\">\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Save click')\">确定</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n\r\n<!-- 删除策略 ok -->\r\n  <ng-template #contentDelStrategy let-c=\"close\" let-d=\"dismiss\">\r\n    <app-sq-modal [input]=\"modelData\" (output)=\"closeDelStrategy($event)\"></app-sq-modal>\r\n  </ng-template>\r\n\r\n  <!-- 创建策略规则 ok -->\r\n  <ng-template #contentAddRule let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <font class=\"modal-title\">创建策略时间</font>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <!-- <mat-horizontal-stepper [linear]=\"isLinear\" #stepper> -->\r\n        <!-- <mat-step [stepControl]=\"firstFormGroup\"  > -->\r\n        <!-- <form [formGroup]=\"firstFormGroup\"> -->\r\n        <div class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <div ng-reflect-ng-switch=\"number\" class=\" d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 1, 'mat-step-icon-not-touched':step !== 1}\">\r\n                    \r\n                        <span class=\"mat-step-icon-content ng-star-inserted\">1</span>\r\n                    \r\n                      </div>\r\n                      <label for=\"选择日期范围\" class=\"label-top\">选择日期范围</label>\r\n                      <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\" ></div>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <div ng-reflect-ng-switch=\"number\" class=\" d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 2, 'mat-step-icon-not-touched':step !== 2}\">\r\n                    \r\n                        <span class=\"mat-step-icon-content ng-star-inserted \" >2</span>\r\n                    \r\n                      </div>\r\n                      <label for=\"填写工作日时间\" class=\"label-top\">填写工作日时间</label>\r\n                      <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\"></div>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <div ng-reflect-ng-switch=\"number\" class=\"n d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 3, 'mat-step-icon-not-touched':step !== 3}\">\r\n                    \r\n                        <span class=\"mat-step-icon-content ng-star-inserted \">3</span>\r\n                    \r\n                      </div>\r\n                      <label for=\"填写节假日时间\" class=\"label-top\">填写节假日时间</label>\r\n                      <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\"></div>\r\n                    </div>\r\n        </div>\r\n\r\n          <div *ngIf=\"step==1\">\r\n                      <!-- <ng-template matStepLabel>选择日期范围</ng-template> -->\r\n\r\n\r\n                        <div class=\"row border-xif\">\r\n                            <ngb-datepicker #dp (select)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\" class=\"date-style\">\r\n                            </ngb-datepicker>\r\n                        </div>\r\n\r\n                      <ng-template #t let-date=\"date\" let-focused=\"focused\">\r\n                        <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\" [class.faded]=\"isHovered(date) || isInside(date)\"\r\n                          (mouseenter)=\"hoveredDate = date\" (mouseleave)=\"hoveredDate = null\">\r\n                          {{ date.day }}\r\n                        </span>\r\n                      </ng-template>\r\n                      <div  style=\" padding: 12px 0 0 12px; \">\r\n                        <p style=\"margin-bottom: 0\" class=\"d-inline-block\">\r\n                            <span>开始时间：</span>\r\n                            <span *ngIf=\"fromDate\">{{fromDate.month}}月{{fromDate.day}}日</span>\r\n                        </p>\r\n                        <p style=\"margin-bottom: 0;margin-left: 30px\" class=\"d-inline-block\">\r\n                          <span>结束时间：</span>\r\n                          <span *ngIf=\"toDate\">{{toDate.month}}月{{toDate.day}}日</span>\r\n                        </p>\r\n                        <!-- <div class=\"col-6 text-left\">\r\n                          <span>开始时间：</span>\r\n                          <span *ngIf=\"fromDate\">{{fromDate.month}}月{{fromDate.day}}日</span>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-6 text-right\">\r\n                          <span>结束时间：</span>\r\n                          <span *ngIf=\"toDate\">{{toDate.month}}月{{toDate.day}}日</span>\r\n                        </div> -->\r\n                      \r\n                      </div>\r\n          </div>\r\n\r\n                      \r\n                      <!-- <div>\r\n                        <button mat-button matStepperNext>Next</button>\r\n                      </div> -->\r\n        <!-- </form> -->\r\n\r\n  \r\n        <!-- </mat-step> -->\r\n        <!-- <mat-step [stepControl]=\"secondFormGroup\" > -->\r\n          <!-- <form [formGroup]=\"secondFormGroup\"> -->\r\n              <div *ngIf=\"step==2\">\r\n                                <!-- <ng-template matStepLabel>填写工作日时间</ng-template> -->\r\n                                <!-- <label for=\"填写工作日时间\">填写工作日时间</label> -->\r\n                                \r\n                                <!-- 开灯时间： -->\r\n                                <div class=\"row border-xif\">\r\n                                  <div class=\"col-6\">\r\n                                    <div class=\"row align-items-center justify-content-center\">\r\n                                      <div class=\"col-4\">\r\n                                        <span class=\"required_red\">*</span>\r\n                                        <label for=\"workday_start_time\">开灯时间：</label>\r\n                                \r\n                                      </div>\r\n                                      <div class=\"col-6\">\r\n                                        <ngb-timepicker [(ngModel)]=\"workday_start_time\" id=\"workday_start_time\"></ngb-timepicker>\r\n                                        <mat-error *ngIf=\"workday_start_time == null\">\r\n                                          <strong>开灯时间为必填项</strong>\r\n                                        </mat-error>\r\n                                        \r\n                                      </div>\r\n                                    </div>\r\n                                \r\n                                  </div>\r\n                                \r\n                                  <div class=\"col-6\">\r\n                                    <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                      <div class=\"col-4\">\r\n                                        <span class=\"required_red\">*</span>\r\n                                        <label for=\"changeBrightness\">起始亮度：</label>\r\n                                      </div>\r\n                                      <div class=\"col-6\">\r\n                                \r\n                                        <!-- <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness\"  max=\"100\" required/> -->\r\n                                        <form class=\"example-form\">\r\n                                          <mat-form-field class=\"example-full-width\">\r\n                                            <input matInput [formControl]=\"numberFormControl\" type=\"number\" max=\"100\"\r\n                                              [(ngModel)]=\"workday_start_brightness\"  required>\r\n                                              <!-- <p *ngIf=\"workday_start_brightness > 100 \">亮度数值为0 ~ 100</p> -->\r\n                                            <mat-error>\r\n                                              <strong *ngIf=\"numberFormControl.hasError('required')\">起始亮度为必填项</strong>\r\n                                            </mat-error>\r\n                                          </mat-form-field>\r\n                                          <mat-error *ngIf=\"workday_start_brightness > 100 || workday_start_brightness < 0\">\r\n                                            <strong >亮度数值为0 ~ 100</strong>\r\n                                          </mat-error>\r\n                                        </form>\r\n                                      </div>\r\n                                    </div>\r\n                                \r\n                                  </div>\r\n                                </div>\r\n                                <!-- 中间时间 -->\r\n                                <div>\r\n                                  <div class=\"row border-xif\">\r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"workday_start_time1\">时间：</label>\r\n                                \r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                          <ngb-timepicker [(ngModel)]=\"workday_start_time1\" id=\"workday_start_time1\"></ngb-timepicker>\r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                \r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"changeBrightness\">亮度：</label>\r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                \r\n                                          <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness1\" max=\"100\" />\r\n                                          <mat-error *ngIf=\"workday_start_brightness1 > 100 || workday_start_brightness1 < 0\">\r\n                                            <strong >亮度数值为0 ~ 100</strong>\r\n                                          </mat-error>\r\n                                          <!-- <form class=\"example-form\">\r\n                                                                        <mat-form-field class=\"example-full-width\">\r\n                                                                          <input matInput placeholder=\"Favorite food\" value=\"Sushi\" [(ngModel)]=\"workday_start_brightness1\">\r\n                                                                        </mat-form-field>\r\n                                                                      </form> -->\r\n                                \r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"row border-xi\">\r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"brightnessTime2\">时间：</label>\r\n                                \r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                          <ngb-timepicker [(ngModel)]=\"workday_start_time2\" id=\"workday_start_time2\"></ngb-timepicker>\r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                \r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"changeBrightness\">亮度：</label>\r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                \r\n                                          <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness2\" max=\"100\" />\r\n                                          <mat-error *ngIf=\"workday_start_brightness2 > 100 || workday_start_brightness2 < 0\">\r\n                                            <strong >亮度数值为0 ~ 100</strong>\r\n                                          </mat-error>\r\n                                          <!-- <form class=\"example-form\">\r\n                                                                        <mat-form-field class=\"example-full-width\">\r\n                                                                          <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"workday_start_brightness2\">\r\n                                                                        </mat-form-field>\r\n                                                                      </form> -->\r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"row border-xi\">\r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"brightnessTime3\">时间：</label>\r\n                                \r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                          <ngb-timepicker [(ngModel)]=\"workday_start_time3\" id=\"workday_start_time3\"></ngb-timepicker>\r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                \r\n                                    <div class=\"col-6\">\r\n                                      <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                        <div class=\"col-4\">\r\n                                          <label for=\"changeBrightness\">亮度：</label>\r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                \r\n                                          <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness3\" max=\"100\" />\r\n                                          <mat-error *ngIf=\"workday_start_brightness3 > 100 || workday_start_brightness3 < 0\">\r\n                                            <strong >亮度数值为0 ~ 100</strong>\r\n                                          </mat-error>\r\n                                          <!-- <form class=\"example-form\">\r\n                                                                        <mat-form-field class=\"example-full-width\">\r\n                                                                          <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"workday_start_brightness3\">\r\n                                                                        </mat-form-field>\r\n                                                                      </form> -->\r\n                                        </div>\r\n                                      </div>\r\n                                \r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <!-- 关灯时间： -->\r\n                                <div class=\"row border-xif\">\r\n                                  <div class=\"col-6\">\r\n                                    <div class=\"row align-items-center justify-content-center\">\r\n                                      <div class=\"col-4\">\r\n                                        <span class=\"required_red\">*</span>\r\n                                        <label for=\"workday_end_time\">关灯时间：</label>\r\n                                \r\n                                      </div>\r\n                                      <div class=\"col-6\">\r\n                                        <ngb-timepicker [(ngModel)]=\"workday_end_time\" id=\"workday_end_time\"></ngb-timepicker>\r\n                                        <mat-error *ngIf=\"workday_end_time == null\">\r\n                                          <strong>关灯时间为必填项</strong>\r\n                                        </mat-error>\r\n                                      </div>\r\n                                    </div>\r\n                                \r\n                                  </div>\r\n                                </div>\r\n                                \r\n                                <!-- <div>\r\n                                  <button mat-button matStepperPrevious>Back</button>\r\n                                  <button mat-button matStepperNext>Next</button>\r\n                                </div> -->\r\n              </div>\r\n\r\n          <!-- </form> -->\r\n  \r\n        <!-- </mat-step> -->\r\n  \r\n        <!-- <mat-step > -->\r\n          <div *ngIf=\"step==3\">\r\n                        <!-- <ng-template matStepLabel>填写节假日时间</ng-template> -->\r\n                        <!-- <label for=\"填写节假日时间\">填写节假日时间</label> -->\r\n                        <!-- 开灯时间： -->\r\n                        <div class=\"row border-xif\">\r\n                          <div class=\"col-6\">\r\n                            <div class=\"row align-items-center justify-content-center\">\r\n                              <div class=\"col-4\">\r\n                                <span class=\"required_red\">*</span>\r\n                                <label for=\"holiday_start_time\">开灯时间：</label>\r\n                        \r\n                              </div>\r\n                              <div class=\"col-6\">\r\n                                <ngb-timepicker [(ngModel)]=\"holiday_start_time\" id=\"holiday_start_time\"></ngb-timepicker>\r\n                                <mat-error *ngIf=\"holiday_start_time == null\">\r\n                                  <strong>开灯时间为必填项</strong>\r\n                                </mat-error>\r\n                              </div>\r\n                            </div>\r\n                        \r\n                          </div>\r\n                        \r\n                          <div class=\"col-6\">\r\n                            <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                              <div class=\"col-4\">\r\n                                <span class=\"required_red\">*</span>\r\n                                <label for=\"changeBrightness\">起始亮度：</label>\r\n                              </div>\r\n                              <div class=\"col-6\">\r\n                        \r\n                                <!-- <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness\"  max=\"100\" required/> -->\r\n                                <form class=\"example-form\">\r\n                                  <mat-form-field class=\"example-full-width\">\r\n                                    <input matInput [formControl]=\"number2FormControl\" type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness\" max=\"100\"\r\n                                      [errorStateMatcher]=\"matcher\">\r\n                                    <mat-error *ngIf=\"number2FormControl.hasError('required')\">\r\n                                      <strong>起始亮度为必填项</strong>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                  <mat-error *ngIf=\"holiday_start_brightness > 100 || holiday_start_brightness < 0\">\r\n                                    <strong >亮度数值为0 ~ 100</strong>\r\n                                  </mat-error>\r\n                                </form>\r\n                              </div>\r\n                            </div>\r\n                        \r\n                          </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        <!-- 中间时间 -->\r\n                        <div>\r\n                          <div class=\"row border-xif\">\r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"holiday_start_time1\">时间：</label>\r\n                        \r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                  <ngb-timepicker [(ngModel)]=\"holiday_start_time1\" id=\"holiday_start_time1\"></ngb-timepicker>\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                        \r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"changeBrightness\">亮度：</label>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                        \r\n                                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness1\" max=\"100\" />\r\n                                  <mat-error *ngIf=\"holiday_start_brightness1 > 100 || holiday_start_brightness1 < 0\">\r\n                                    <strong >亮度数值为0 ~ 100</strong>\r\n                                  </mat-error>\r\n                                  <!-- <form class=\"example-form\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                  <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness1\">\r\n                                                </mat-form-field>\r\n                                              </form> -->\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row border-xi\">\r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"holiday_start_time2\">时间：</label>\r\n                        \r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                  <ngb-timepicker [(ngModel)]=\"holiday_start_time2\" id=\"holiday_start_time2\"></ngb-timepicker>\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                        \r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"changeBrightness\">亮度：</label>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                        \r\n                                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness2\" max=\"100\" />\r\n                                  <mat-error *ngIf=\"holiday_start_brightness2 > 100 || holiday_start_brightness2 < 0\">\r\n                                    <strong >亮度数值为0 ~ 100</strong>\r\n                                  </mat-error>\r\n                                  <!-- <form class=\"example-form\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                  <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness2\">\r\n                                                </mat-form-field>\r\n                                              </form> -->\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row border-xi\">\r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"holiday_start_time3\">时间：</label>\r\n                        \r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                  <ngb-timepicker [(ngModel)]=\"holiday_start_time3\" id=\"holiday_start_time3\"></ngb-timepicker>\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                        \r\n                            <div class=\"col-6\">\r\n                              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                                <div class=\"col-4\">\r\n                                  <label for=\"changeBrightness\">亮度：</label>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                        \r\n                                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness3\" max=\"100\" />\r\n                                  <mat-error *ngIf=\"holiday_start_brightness3 > 100 || holiday_start_brightness3 < 0\">\r\n                                    <strong >亮度数值为0 ~ 100</strong>\r\n                                  </mat-error>\r\n                                  <!-- <form class=\"example-form\">\r\n                                                <mat-form-field class=\"example-full-width\">\r\n                                                  <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness3\">\r\n                                                </mat-form-field>\r\n                                              </form> -->\r\n                                </div>\r\n                              </div>\r\n                        \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <!-- 关灯时间： -->\r\n                        <div class=\"row border-xif\">\r\n                          <div class=\"col-6\">\r\n                            <div class=\"row align-items-center justify-content-center\">\r\n                              <div class=\"col-4\">\r\n                                <span class=\"required_red\">*</span>\r\n                                <label for=\"holiday_end_time\">关灯时间：</label>\r\n                        \r\n                              </div>\r\n                              <div class=\"col-6\">\r\n                                <ngb-timepicker [(ngModel)]=\"holiday_end_time\" id=\"holiday_end_time\"></ngb-timepicker>\r\n                                  <mat-error *ngIf=\"holiday_end_time == null\">\r\n                                    <strong>关灯时间为必填项</strong>\r\n                                  </mat-error>\r\n                              </div>\r\n                            </div>\r\n                        \r\n                          </div>\r\n                        </div>\r\n                        <!-- <div>\r\n                          <button mat-button matStepperPrevious>Back</button>\r\n                          <button mat-button matStepperNext>Next</button>\r\n                        </div> -->\r\n          </div>\r\n  \r\n\r\n  \r\n        <!-- </mat-step> -->\r\n        <!-- <mat-step>\r\n            <ng-template matStepLabel>完成</ng-template>\r\n            OK！\r\n            <div>\r\n              <button mat-button matStepperPrevious>Back</button>\r\n              <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n            </div>\r\n          </mat-step> -->\r\n      <!-- </mat-horizontal-stepper> -->\r\n  \r\n  \r\n  \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"preStep()\" *ngIf=\"step!==1\">上一步</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"nextStep()\" *ngIf=\"step!==3\" \r\n        [disabled]=\"step ==2 && workday_start_time == null || step ==2 && workday_end_time == null || step ==2\r\n         && !workday_start_brightness || step ==2 && workday_start_brightness == null || step ==2\r\n         && workday_start_brightness > 100 || step ==2 && workday_start_brightness < 0 || step ==2\r\n         && workday_start_brightness1 > 100 || step ==2 && workday_start_brightness1 < 0 || step ==2\r\n         && workday_start_brightness2 > 100 || step ==2 && workday_start_brightness2 < 0 || step ==2\r\n         && workday_start_brightness3 > 100 || step ==2 && workday_start_brightness3 < 0\">下一步</button>\r\n\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Save click')\" *ngIf=\"step ==3\" \r\n      [disabled]=\"step ==3 && holiday_start_time == null || step ==3 && holiday_end_time == null || step ==3\r\n       && !holiday_start_brightness || step ==3 && holiday_start_brightness == null || step ==3\r\n       && holiday_start_brightness > 100 || step ==3 && holiday_start_brightness < 0 || step ==3\r\n       && holiday_start_brightness1 > 100 || step ==3 && holiday_start_brightness1 < 0 || step ==3\r\n       && holiday_start_brightness2 > 100 || step ==3 && holiday_start_brightness2 < 0 || step ==3\r\n       && holiday_start_brightness3 > 100 || step ==3 && holiday_start_brightness3 < 0 \">完成</button>\r\n\r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <!-- 更改策略规则 ok -->\r\n  <ng-template #contentUpdataRule let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <font class=\"modal-title\">更改策略时间</font>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <!-- <mat-horizontal-stepper [linear]=\"isLinear\" #stepper> -->\r\n      <!-- <mat-step [stepControl]=\"firstFormGroup\"  > -->\r\n      <!-- <form [formGroup]=\"firstFormGroup\"> -->\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <div ng-reflect-ng-switch=\"number\" class=\" d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 1, 'mat-step-icon-not-touched':step !== 1}\">\r\n  \r\n            <span class=\"mat-step-icon-content ng-star-inserted\">1</span>\r\n  \r\n          </div>\r\n          <label for=\"选择日期范围\" class=\"label-top\">选择日期范围</label>\r\n          <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\"></div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div ng-reflect-ng-switch=\"number\" class=\" d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 2, 'mat-step-icon-not-touched':step !== 2}\">\r\n  \r\n            <span class=\"mat-step-icon-content ng-star-inserted \">2</span>\r\n  \r\n          </div>\r\n          <label for=\"填写工作日时间\" class=\"label-top\">填写工作日时间</label>\r\n          <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\"></div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div ng-reflect-ng-switch=\"number\" class=\"n d-inline-block\" [ngClass]=\"{'mat-step-icon': step == 3, 'mat-step-icon-not-touched':step !== 3}\">\r\n  \r\n            <span class=\"mat-step-icon-content ng-star-inserted \">3</span>\r\n  \r\n          </div>\r\n          <label for=\"填写节假日时间\" class=\"label-top\">填写节假日时间</label>\r\n          <div class=\"mat-stepper-horizontal-line ng-tns-c2-0 ng-star-inserted lsq-line\"></div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div *ngIf=\"step==1\">\r\n        <!-- <ng-template matStepLabel>选择日期范围</ng-template> -->\r\n  \r\n  \r\n        <div class=\"row border-xif\">\r\n          <ngb-datepicker #dp (select)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\" class=\"date-style\">\r\n          </ngb-datepicker>\r\n        </div>\r\n  \r\n        <ng-template #t let-date=\"date\" let-focused=\"focused\">\r\n          <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\" [class.faded]=\"isHovered(date) || isInside(date)\"\r\n            (mouseenter)=\"hoveredDate = date\" (mouseleave)=\"hoveredDate = null\">\r\n            {{ date.day }}\r\n          </span>\r\n        </ng-template>\r\n        <div style=\" padding: 12px 0 0 12px; \">\r\n          <p style=\"margin-bottom: 0\" class=\"d-inline-block\">\r\n            <span>开始时间：</span>\r\n            <span *ngIf=\"fromDate\">{{fromDate.month}}月{{fromDate.day}}日</span>\r\n          </p>\r\n          <p style=\"margin-bottom: 0;margin-left: 30px\" class=\"d-inline-block\">\r\n            <span>结束时间：</span>\r\n            <span *ngIf=\"toDate\">{{toDate.month}}月{{toDate.day}}日</span>\r\n          </p>\r\n          <!-- <div class=\"col-6 text-left\">\r\n                            <span>开始时间：</span>\r\n                            <span *ngIf=\"fromDate\">{{fromDate.month}}月{{fromDate.day}}日</span>\r\n                            \r\n                          </div>\r\n                          <div class=\"col-6 text-right\">\r\n                            <span>结束时间：</span>\r\n                            <span *ngIf=\"toDate\">{{toDate.month}}月{{toDate.day}}日</span>\r\n                          </div> -->\r\n  \r\n        </div>\r\n      </div>\r\n  \r\n  \r\n      <!-- <div>\r\n                          <button mat-button matStepperNext>Next</button>\r\n                        </div> -->\r\n      <!-- </form> -->\r\n  \r\n  \r\n      <!-- </mat-step> -->\r\n      <!-- <mat-step [stepControl]=\"secondFormGroup\" > -->\r\n      <!-- <form [formGroup]=\"secondFormGroup\"> -->\r\n      <div *ngIf=\"step==2\">\r\n        <!-- <ng-template matStepLabel>填写工作日时间</ng-template> -->\r\n        <!-- <label for=\"填写工作日时间\">填写工作日时间</label> -->\r\n  \r\n        <!-- 开灯时间： -->\r\n        <div class=\"row border-xif\">\r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"workday_start_time\">开灯时间：</label>\r\n  \r\n              </div>\r\n              <div class=\"col-6\">\r\n                <ngb-timepicker [(ngModel)]=\"workday_start_time\" id=\"workday_start_time\"></ngb-timepicker>\r\n                <mat-error *ngIf=\"workday_start_time == null\">\r\n                  <strong>开灯时间为必填项</strong>\r\n                </mat-error>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"changeBrightness\">起始亮度：</label>\r\n              </div>\r\n              <div class=\"col-6\">\r\n  \r\n                <!-- <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness\"  max=\"100\" required/> -->\r\n                <form class=\"example-form\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [formControl]=\"numberFormControl\" type=\"number\" max=\"100\" [(ngModel)]=\"workday_start_brightness\" [errorStateMatcher]=\"matcher\"\r\n                      required>\r\n                    <mat-error *ngIf=\"numberFormControl.hasError('required')\">\r\n                      <strong>起始亮度为必填项</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-error *ngIf=\"workday_start_brightness > 100 || workday_start_brightness < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                </form>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n        <!-- 中间时间 -->\r\n        <div>\r\n          <div class=\"row border-xif\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"workday_start_time1\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"workday_start_time1\" id=\"workday_start_time1\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness1\" max=\"100\" />\r\n                  <mat-error *ngIf=\"workday_start_brightness1 > 100 || workday_start_brightness1 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                                          <mat-form-field class=\"example-full-width\">\r\n                                                                            <input matInput placeholder=\"Favorite food\" value=\"Sushi\" [(ngModel)]=\"workday_start_brightness1\">\r\n                                                                          </mat-form-field>\r\n                                                                        </form> -->\r\n  \r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n          <div class=\"row border-xi\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"brightnessTime2\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"workday_start_time2\" id=\"workday_start_time2\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness2\" max=\"100\" />\r\n                  <mat-error *ngIf=\"workday_start_brightness2 > 100 || workday_start_brightness2 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                                          <mat-form-field class=\"example-full-width\">\r\n                                                                            <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"workday_start_brightness2\">\r\n                                                                          </mat-form-field>\r\n                                                                        </form> -->\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n          <div class=\"row border-xi\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"brightnessTime3\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"workday_start_time3\" id=\"workday_start_time3\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"workday_start_brightness3\" max=\"100\" />\r\n                  <mat-error *ngIf=\"workday_start_brightness3 > 100 || workday_start_brightness3 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                                          <mat-form-field class=\"example-full-width\">\r\n                                                                            <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"workday_start_brightness3\">\r\n                                                                          </mat-form-field>\r\n                                                                        </form> -->\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- 关灯时间： -->\r\n        <div class=\"row border-xif\">\r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"workday_end_time\">关灯时间：</label>\r\n  \r\n              </div>\r\n              <div class=\"col-6\">\r\n                <ngb-timepicker [(ngModel)]=\"workday_end_time\" id=\"workday_end_time\"></ngb-timepicker>\r\n                <mat-error *ngIf=\"workday_end_time == null\">\r\n                  <strong>关灯时间为必填项</strong>\r\n                </mat-error>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n  \r\n        <!-- <div>\r\n                                    <button mat-button matStepperPrevious>Back</button>\r\n                                    <button mat-button matStepperNext>Next</button>\r\n                                  </div> -->\r\n      </div>\r\n  \r\n      <!-- </form> -->\r\n  \r\n      <!-- </mat-step> -->\r\n  \r\n      <!-- <mat-step > -->\r\n      <div *ngIf=\"step==3\">\r\n        <!-- <ng-template matStepLabel>填写节假日时间</ng-template> -->\r\n        <!-- <label for=\"填写节假日时间\">填写节假日时间</label> -->\r\n        <!-- 开灯时间： -->\r\n        <div class=\"row border-xif\">\r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"holiday_start_time\">开灯时间：</label>\r\n  \r\n              </div>\r\n              <div class=\"col-6\">\r\n                <ngb-timepicker [(ngModel)]=\"holiday_start_time\" id=\"holiday_start_time\"></ngb-timepicker>\r\n                <mat-error *ngIf=\"holiday_start_time == null\">\r\n                  <strong>开灯时间为必填项</strong>\r\n                </mat-error>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"changeBrightness\">起始亮度：</label>\r\n              </div>\r\n              <div class=\"col-6\">\r\n  \r\n                <!-- <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness\"  max=\"100\" required/> -->\r\n                <form class=\"example-form\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [formControl]=\"number2FormControl\" type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness\" max=\"100\"\r\n                      [errorStateMatcher]=\"matcher\">\r\n                    <mat-error *ngIf=\"number2FormControl.hasError('required')\">\r\n                      <strong>起始亮度为必填项</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-error *ngIf=\"holiday_start_brightness > 100 || holiday_start_brightness < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                </form>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n  \r\n  \r\n  \r\n        <!-- 中间时间 -->\r\n        <div>\r\n          <div class=\"row border-xif\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"holiday_start_time1\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"holiday_start_time1\" id=\"holiday_start_time1\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness1\" max=\"100\" />\r\n                  <mat-error *ngIf=\"holiday_start_brightness1 > 100 || holiday_start_brightness1 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                  <mat-form-field class=\"example-full-width\">\r\n                                                    <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness1\">\r\n                                                  </mat-form-field>\r\n                                                </form> -->\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n          <div class=\"row border-xi\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"holiday_start_time2\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"holiday_start_time2\" id=\"holiday_start_time2\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness2\" max=\"100\" />\r\n                  <mat-error *ngIf=\"holiday_start_brightness2 > 100 || holiday_start_brightness2 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                  <mat-form-field class=\"example-full-width\">\r\n                                                    <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness2\">\r\n                                                  </mat-form-field>\r\n                                                </form> -->\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n          <div class=\"row border-xi\">\r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\">\r\n                <div class=\"col-4\">\r\n                  <label for=\"holiday_start_time3\">时间：</label>\r\n  \r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <ngb-timepicker [(ngModel)]=\"holiday_start_time3\" id=\"holiday_start_time3\"></ngb-timepicker>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n  \r\n            <div class=\"col-6\">\r\n              <div class=\"row align-items-center justify-content-center\" style=\" height: 100%; \">\r\n                <div class=\"col-4\">\r\n                  <label for=\"changeBrightness\">亮度：</label>\r\n                </div>\r\n                <div class=\"col-6\">\r\n  \r\n                  <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"holiday_start_brightness3\" max=\"100\" />\r\n                  <mat-error *ngIf=\"holiday_start_brightness3 > 100 || holiday_start_brightness3 < 0\">\r\n                    <strong >亮度数值为0 ~ 100</strong>\r\n                  </mat-error>\r\n                  <!-- <form class=\"example-form\">\r\n                                                  <mat-form-field class=\"example-full-width\">\r\n                                                    <input matInput type=\"number\" max=\"100\" [(ngModel)]=\"holiday_start_brightness3\">\r\n                                                  </mat-form-field>\r\n                                                </form> -->\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 关灯时间： -->\r\n        <div class=\"row border-xif\">\r\n          <div class=\"col-6\">\r\n            <div class=\"row align-items-center justify-content-center\">\r\n              <div class=\"col-4\">\r\n                <span class=\"required_red\">*</span>\r\n                <label for=\"holiday_end_time\">关灯时间：</label>\r\n  \r\n              </div>\r\n              <div class=\"col-6\">\r\n                <ngb-timepicker [(ngModel)]=\"holiday_end_time\" id=\"holiday_end_time\"></ngb-timepicker>\r\n                <mat-error *ngIf=\"holiday_end_time == null\">\r\n                  <strong>关灯时间为必填项</strong>\r\n                </mat-error>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n        <!-- <div>\r\n                            <button mat-button matStepperPrevious>Back</button>\r\n                            <button mat-button matStepperNext>Next</button>\r\n                          </div> -->\r\n      </div>\r\n  \r\n  \r\n  \r\n      <!-- </mat-step> -->\r\n      <!-- <mat-step>\r\n              <ng-template matStepLabel>完成</ng-template>\r\n              OK！\r\n              <div>\r\n                <button mat-button matStepperPrevious>Back</button>\r\n                <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n              </div>\r\n            </mat-step> -->\r\n      <!-- </mat-horizontal-stepper> -->\r\n  \r\n  \r\n  \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"preStep()\" *ngIf=\"step!==1\">上一步</button>\r\n      \r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"nextStep()\" *ngIf=\"step!==3\" \r\n        [disabled]=\"step ==2 && workday_start_time == null || step ==2 && workday_end_time == null || \r\n        step ==2 && !workday_start_brightness || step ==2 && workday_start_brightness == null ||\r\n        step ==2 && workday_start_brightness > 100 || step ==2 && workday_start_brightness < 0 ||\r\n        step ==2 && workday_start_brightness1 > 100 || step ==2 && workday_start_brightness1 < 0 ||\r\n        step ==2 && workday_start_brightness2 > 100 || step ==2 && workday_start_brightness2 < 0 ||\r\n        step ==2 && workday_start_brightness3 > 100 || step ==2 && workday_start_brightness3 < 0\">下一步</button>\r\n      \r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Save click')\" *ngIf=\"step ==3\" \r\n        [disabled]=\"step ==3 && holiday_start_time == null || step ==3 && holiday_end_time == null || \r\n        step ==3 && !holiday_start_brightness || step ==3 && holiday_start_brightness == null ||\r\n        step ==3 && holiday_start_brightness > 100 || step ==3 && holiday_start_brightness < 0 ||\r\n        step ==3 && holiday_start_brightness1 > 100 || step ==3 && holiday_start_brightness1 < 0 ||\r\n        step ==3 && holiday_start_brightness2 > 100 || step ==3 && holiday_start_brightness2 < 0 ||\r\n        step ==3 && holiday_start_brightness3 > 100 || step ==3 && holiday_start_brightness3 < 0\">完成</button>\r\n      \r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<!-- 删除策略规则 -->\r\n<ng-template #contentDelRule let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal [input]=\"modelData\" (output)=\"closeDelRule($event)\"></app-sq-modal>\r\n</ng-template>\r\n"

/***/ }),

/***/ "./src/app/home/strategy/strategy.component.scss":
/*!*******************************************************!*\
  !*** ./src/app/home/strategy/strategy.component.scss ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n.strategy {\n  position: relative; }\n.strategy-left {\n  width: 250px;\n  height: 100vh;\n  border: #dee2e6 1px solid;\n  background: #dee2e6; }\n.strategy-left .strategy-add {\n    position: relative;\n    padding: 10px 0;\n    background-color: rgba(153, 153, 153, 0.5);\n    font-size: 20px; }\n.strategy-left .strategy-add button {\n      position: absolute;\n      right: 10px; }\n.strategy-left .strategy-list {\n    height: calc(100% - 57px);\n    overflow-y: auto; }\n.strategy-left .strategy-list ul {\n      padding: 0px; }\n.strategy-left .strategy-list ul li {\n        height: 56px;\n        line-height: 56px;\n        border-bottom: 1px solid #ccc;\n        padding: 0 15px;\n        position: relative; }\n.strategy-left .strategy-list ul li .modify-strategy {\n          position: absolute;\n          right: 5px; }\n.strategy-left .strategy-list ul li:hover {\n        background-color: rgba(0, 0, 0, 0.075); }\n.strategy-title {\n  font-size: 1.57rem;\n  padding-left: 15px; }\n.strategy-right {\n  position: absolute;\n  top: 0px;\n  left: 250px;\n  width: calc(100vw - 300px); }\n.strategy-right .title-right {\n    margin-top: 10px; }\n.strategy-right .jump-iron {\n    position: absolute;\n    right: 20px; }\n.strategy-right .nav-strategy {\n    padding-left: 15px;\n    margin-top: 10px; }\n.operate {\n  display: inline-block;\n  width: 50px;\n  /* height: 25px; */\n  text-align: center; }\n.strategy-table {\n  margin: 10px;\n  padding: 10px 5px; }\n.strategy-table .span-marg-bot {\n    margin-bottom: .5rem; }\n.br {\n  border: 1px solid #ccc;\n  margin-bottom: 30px; }\n.dash-1 {\n  height: 400px; }\n.table-3 {\n  height: 300px; }\n.map_container {\n  height: 300px;\n  width: 100%；; }\n.city-list {\n  height: 750px;\n  overflow-y: auto; }\n.strategy-top {\n  font-size: 30px;\n  line-height: 45px;\n  color: #000000;\n  font-style: Normal;\n  font-weight: 400;\n  font-family: 微软雅黑; }\n.select-del {\n  border: 0;\n  background: transparent;\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  margin-left: 10px; }\n.data-list {\n  padding: 0px; }\n.data-list li {\n    height: 56px;\n    line-height: 56px;\n    border-bottom: 1px solid #ccc;\n    padding: 0 12px;\n    position: relative; }\n.data-list li .modify-strategy {\n      position: absolute;\n      right: 5px; }\n.data-list li:hover {\n    background-color: rgba(0, 0, 0, 0.075); }\n.date-title {\n  height: 50px;\n  line-height: 50px;\n  position: relative; }\n.date-title .btn {\n    position: absolute;\n    right: 0px; }\n.border-xif {\n  border-top: 1px solid #e9ecef;\n  padding: 15px 0; }\n.border-xi {\n  padding: 15px 0; }\n.padding-0 {\n  padding: 0; }\n.custom-day {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem; }\n.custom-day.focused {\n  background-color: #e6e6e6; }\n.custom-day.range, .custom-day:hover {\n  background-color: #0275d8;\n  color: white; }\n.custom-day.faded {\n  background-color: rgba(2, 117, 216, 0.5); }\n.required_red {\n  color: red; }\n.label-top {\n  position: relative;\n  top: -6px; }\n.page-list-table {\n  max-height: 750px;\n  overflow-y: auto; }\n.date-style {\n  margin: 0 auto; }\n"

/***/ }),

/***/ "./src/app/home/strategy/strategy.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/home/strategy/strategy.component.ts ***!
  \*****************************************************/
/*! exports provided: MyErrorStateMatcher, StrategyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyErrorStateMatcher", function() { return MyErrorStateMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StrategyComponent", function() { return StrategyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_strategy_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../service/strategy.service */ "./src/app/service/strategy.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: strategy.componen.ts
@time: 2018 /8 / 16 9: 00

*/








var now = new Date();
var equals = function (one, two) {
    return one && two && two.year === one.year && two.month === one.month && two.day === one.day;
};
var before = function (one, two) {
    return !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day
        ? false : one.day < two.day : one.month < two.month : one.year < two.year;
};
var after = function (one, two) {
    return !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day
        ? false : one.day > two.day : one.month > two.month : one.year > two.year;
};
/** Error when invalid control is dirty, touched, or submitted. */
var MyErrorStateMatcher = /** @class */ (function () {
    function MyErrorStateMatcher() {
    }
    MyErrorStateMatcher.prototype.isErrorState = function (control, form) {
        var isSubmitted = form && form.submitted;
        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));
    };
    return MyErrorStateMatcher;
}());

var StrategyComponent = /** @class */ (function () {
    function StrategyComponent(modalService, strategyService, element, router, calendar, _formBuilder, config) {
        var _this = this;
        this.modalService = modalService;
        this.strategyService = strategyService;
        this.element = element;
        this.router = router;
        this._formBuilder = _formBuilder;
        this.isOptional = false;
        this.isEditable = false;
        this.numberFormControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
        ]);
        this.number2FormControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
        ]);
        this.matcher = new MyErrorStateMatcher();
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.navs = [
            {
                id: 0,
                name: '策略时间'
            },
            {
                id: 1,
                name: '策略范围'
            }
        ];
        this.sub_navs = [{
                id: 0,
                name: '节假日时间'
            },
            {
                id: 1,
                name: '工作日时间'
            }
        ];
        this.nav_index = 0; // 菜单索引
        this.strategyList = []; // 从接口获取的策略列表
        this.ruleList = []; // 规则集合
        this.dateList = []; // 日期策略
        this.holidayList = []; // 节假日策略
        this.workdayList = []; // 工作时间策略
        this.rangeListItems = []; // 规则集合
        this.regionList = []; // 策略所覆盖的区域ID集合
        this.strategy_index = 0; // 策略索引
        this.rule_index = 0; // 策略索引
        this.model = {}; // 存储数据
        this.brightness = 30; // 亮度
        this.workday_start_time = { hour: 6, minute: 30 }; // 工作日时间
        this.workday_end_time = { hour: 23, minute: 30 }; // 工作日时间
        this.workday_start_brightness = 30; // 亮度
        this.end_brightness = 0;
        this.holiday_start_time = { hour: 6, minute: 30 }; // 工作日时间
        this.holiday_end_time = { hour: 23, minute: 30 }; // 工作日时间
        this.holiday_start_brightness = 30; // 亮度
        this.step = 1; // 步骤
        this.nodeParentList = [];
        // hoveredDate: NgbDate;
        // fromDate: NgbDate;
        // toDate: NgbDate;
        this.isLinear = false; // 步骤
        this.page = 1; // 分页
        this.pageSize = 10; // 分页
        this.allCheck = true; // 全选
        this.regionbody = []; // 策略覆盖区域body
        this.setRegionMess = false; // 下发策略
        this.isHovered = function (date) { return _this.fromDate && !_this.toDate && _this.hoveredDate && after(date, _this.fromDate) && before(date, _this.hoveredDate); };
        this.isInside = function (date) { return after(date, _this.fromDate) && before(date, _this.toDate); };
        this.isFrom = function (date) { return equals(date, _this.fromDate); };
        this.isTo = function (date) { return equals(date, _this.toDate); };
        // isHovered = (date: NgbDateStruct) =>
        //   this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate)
        // isInside = (date: NgbDateStruct) =>
        //   date.after(this.fromDate) && date.before(this.toDate)
        this.isRange = function (date) {
            return equals(date, _this.fromDate) || equals(date, _this.toDate) || _this.isInside(date) || _this.isHovered(date);
        };
        this.fromDate = calendar.getToday(); // 日历
        this.toDate = calendar.getNext(calendar.getToday(), 'd', 10); // 日历
        config.spinners = false; // 时间控制
        // this.dateList = this.strategyList[0].dateList;
        // 树的操作
        // 点击
        var that = this;
        this.zTreeOnClick = function (event, treeId, treeNode) {
            that.currentTreeNodeId = treeNode.id;
            that.getRegionLights(treeNode.id);
        };
        this.zTreeOnCheck = function (event, treeId, treeNode) {
            // 获取当前被勾选的节点集合
            that.regionbody = [];
            var treeObj = $.fn.zTree.getZTreeObj('treeDemo');
            var nodes = treeObj.getCheckedNodes(true);
            console.log(nodes);
            if (nodes.length > 0) {
                nodes.map(function (item, i) {
                    var isParent = item.isParent;
                    if (!isParent) {
                        that.regionbody.push({
                            'allDevices': true,
                            'deviceIds': [
                                0
                            ],
                            'regionId': item.id
                        });
                    }
                });
            }
        };
    }
    StrategyComponent.prototype.ngOnInit = function () {
        this.getStrategyList();
        this.firstFormGroup = this._formBuilder.group({
            firstCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.secondFormGroup = this._formBuilder.group({
            secondCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.thirdFormGroup = this._formBuilder.group({
            thirdCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.getZoneDefault(); // 获取城市
    };
    // 获取策略表
    StrategyComponent.prototype.getStrategyList = function () {
        var that = this;
        this.strategyService.getStrategy().subscribe({
            next: function (val) {
                that.strategyList = val;
                that.currentStrategy = that.currentStrategy || val[0];
            },
            complete: function () {
                that.getRules(that.currentStrategy);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 点击策略及初始化时调用
    StrategyComponent.prototype.getRules = function (item) {
        var that = this;
        var strategyId = item.id;
        this.strategyService.getRules(strategyId).subscribe({
            next: function (val) {
                that.ruleList = val;
            },
            complete: function () {
                that.selectRule(that.ruleList[0], 0);
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 在左侧中点击一策略
    StrategyComponent.prototype.selectStrategy = function (item, index) {
        // 策略范围视图下切换策略，会回到策略时间视图
        if (this.nav_index === 1) {
            this.nav_index = 0;
        }
        this.strategy_index = index;
        this.strategy_item = item;
        var that = this;
        // this.currentRule = []; // 切换到其他策略时，当前所选规则置空
        this.currentStrategy = item;
        this.getRules(item);
    };
    // 点击一个规则
    StrategyComponent.prototype.selectRule = function (item, i) {
        this.currentRule = item;
        this.getWorkdayList(item);
        this.rule_index = i;
    };
    // 获取工作日中间段时间
    StrategyComponent.prototype.getWorkdayList = function (rule) {
        this.workdayList = [];
        this.holidayList = [];
        if (!rule) {
            return;
        }
        var len = rule.workdayRules && rule.workdayRules.length;
        var len1 = rule.holidayRules && rule.holidayRules.length;
        if (len > 2) {
            this.workdayList = rule.workdayRules.slice(1, len - 1);
        }
        if (len1 > 2) {
            this.holidayList = rule.holidayRules.slice(1, len1 - 1);
        }
    };
    // 添加策略弹框操作
    StrategyComponent.prototype.openAddStrategy = function (content, index) {
        var _this = this;
        // 初始参数
        var that = this;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
        this.strategyName = '';
        modal.result.then(function (result) {
            console.log('strategy--add');
            that.addStrategy(); // 接口处-添加策略
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    // 接口处-添加策略
    StrategyComponent.prototype.addStrategy = function () {
        var that = this;
        this.strategyService.addStrategy(this.strategyName).subscribe({
            next: function (val) {
                that.getStrategyList(); // 重新获取策略
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 更新策略-弹框操作
    StrategyComponent.prototype.openUpdataStrategy = function (content, item, index) {
        var _this = this;
        var that = this;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
        this.strategyName = item.name;
        modal.result.then(function (result) {
            console.log('strategy -updata');
            that.updateStrategy(item.id, that.strategyName); // 接口处-更新策略
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    // 接口处-更新策略
    StrategyComponent.prototype.updateStrategy = function (id, name) {
        var that = this;
        this.strategyService.updateStrategy(id, name).subscribe({
            next: function (val) {
                that.currentStrategy.name = name;
                that.getStrategyList(); // 重新获取策略
                // that.strategy_index = 0;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 删除策略弹框
    StrategyComponent.prototype.openDelStrategy = function (content, item, i) {
        var that = this;
        this.strategy_del_id = item.id;
        this.strategy_del_index = i;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除策略
    StrategyComponent.prototype.closeDelStrategy = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delStrategy();
        }
        this.mr.close();
    };
    // 接口处-删除策略
    StrategyComponent.prototype.delStrategy = function () {
        var index = this.strategy_del_index;
        this.strategyList.splice(index, 1);
        var that = this;
        var id = this.strategy_del_id;
        this.strategyService.delStrategy(id).subscribe({
            next: function (val) {
                that.strategy_index = 0;
                that.currentStrategy = null;
                that.getStrategyList(); // 重新获取策略
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 打开添加规则-弹框操作
    StrategyComponent.prototype.openAddRule = function (content) {
        var _this = this;
        this.step = 1;
        this.workday_start_time = { hour: 6, minute: 30 }; // 工作日时间
        this.workday_end_time = { hour: 23, minute: 30 }; // 工作日时间
        this.workday_start_time1 = null; // 工作日时间
        this.workday_start_time2 = null; // 工作日时间
        this.workday_start_time3 = null; // 工作日时间
        this.workday_start_brightness = 30; // 亮度
        this.workday_start_brightness1 = null; // 亮度
        this.workday_start_brightness2 = null; // 亮度
        this.workday_start_brightness3 = null; // 亮度
        this.end_brightness = 0;
        this.holiday_start_time = { hour: 6, minute: 30 }; // 工作日时间
        this.holiday_end_time = { hour: 23, minute: 30 }; // 工作日时间
        this.holiday_start_time1 = null; // 工作日时间
        this.holiday_start_time2 = null; // 工作日时间
        this.holiday_start_time3 = null; // 工作日时间
        this.holiday_start_brightness = 30; // 亮度
        this.holiday_start_brightness1 = null; // 亮度
        this.holiday_start_brightness2 = null; // 亮度
        this.holiday_start_brightness3 = null; // 亮度
        var that = this;
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        modal.result.then(function (result) {
            console.log('rule-add');
            that.addRules(); // 接口处-添加策略
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    // 添加策略规则
    StrategyComponent.prototype.addRules = function () {
        var that = this;
        var item = this.currentStrategy;
        var id = this.currentStrategy.id;
        var start = {
            day: this.fromDate.day,
            month: this.fromDate.month
        };
        var toDate = this.toDate ? this.toDate : this.fromDate;
        var end = {
            day: toDate.day,
            month: toDate.month
        };
        var workdayRules = [];
        var holidayRules = [];
        if (this.workday_start_time && this.workday_start_brightness) {
            workdayRules.push({
                'lightLevel': this.workday_start_brightness,
                'smart': true,
                'start': this.workday_start_time
            });
            if (this.workday_start_time1 && this.workday_start_time1.hour && this.workday_start_time1.minute && this.workday_start_brightness1) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness1,
                    'smart': true,
                    'start': this.workday_start_time1
                });
            }
            if (this.workday_start_time2 && this.workday_start_time2.hour && this.workday_start_time2.minute && this.workday_start_brightness2) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness2,
                    'smart': true,
                    'start': this.workday_start_time2
                });
            }
            if (this.workday_start_time3 && this.workday_start_time3.hour && this.workday_start_time3.minute && this.workday_start_brightness3) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness3,
                    'smart': true,
                    'start': this.workday_start_time3
                });
            }
            if (this.workday_end_time && this.workday_end_time.hour && this.workday_end_time.minute) {
                workdayRules.push({
                    'lightLevel': this.end_brightness,
                    'smart': true,
                    'start': this.workday_end_time
                });
            }
        }
        if (this.holiday_start_time && this.holiday_start_brightness) {
            holidayRules.push({
                'lightLevel': this.holiday_start_brightness,
                'smart': true,
                'start': this.holiday_start_time
            });
            if (this.holiday_start_time1 && this.holiday_start_brightness1) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness1,
                    'smart': true,
                    'start': this.holiday_start_time1
                });
            }
            if (this.holiday_start_time2 && this.holiday_start_brightness2) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness2,
                    'smart': true,
                    'start': this.holiday_start_time2
                });
            }
            if (this.holiday_start_time3 && this.holiday_start_brightness3) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness3,
                    'smart': true,
                    'start': this.holiday_start_time3
                });
            }
            if (this.holiday_end_time) {
                holidayRules.push({
                    'lightLevel': this.end_brightness,
                    'smart': true,
                    'start': this.holiday_end_time
                });
            }
        }
        this.strategyService.addRules(id, start, end, workdayRules, holidayRules).subscribe({
            next: function (val) {
                // that.selectStrategy(item, i); // 重新获取策略
                that.getRules(item);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 打开更新规则-弹框操作
    StrategyComponent.prototype.openUpdataRule = function (content, item, index) {
        var _this = this;
        this.step = 1;
        var currentRule = this.currentRule;
        // 初始参数
        this.workday_start_time = currentRule.workdayRules && currentRule.workdayRules[0] && currentRule.workdayRules[0].start; // 工作日时间
        var len = currentRule.workdayRules.length;
        this.workday_end_time = currentRule.workdayRules && currentRule.workdayRules[len - 1] &&
            currentRule.workdayRules[len - 1].start; // 工作日时间
        if (len === 3) {
            this.workday_start_time1 = currentRule.workdayRules && currentRule.workdayRules[1] && currentRule.workdayRules[1].start; // 工作日时间
            this.workday_start_brightness1 = currentRule.workdayRules &&
                currentRule.workdayRules[1] && currentRule.workdayRules[1].lightLevel; // 亮度
        }
        else if (len === 4) {
            this.workday_start_time1 = currentRule.workdayRules && currentRule.workdayRules[1] && currentRule.workdayRules[1].start; // 工作日时间
            this.workday_start_time2 = currentRule.workdayRules && currentRule.workdayRules[2] && currentRule.workdayRules[2].start; // 工作日时间
            this.workday_start_brightness1 = currentRule.workdayRules &&
                currentRule.workdayRules[1] && currentRule.workdayRules[1].lightLevel; // 亮度
            this.workday_start_brightness2 = currentRule.workdayRules &&
                currentRule.workdayRules[2] && currentRule.workdayRules[2].lightLevel; // 亮度
        }
        else if (len === 5) {
            this.workday_start_time1 = currentRule.workdayRules && currentRule.workdayRules[1] && currentRule.workdayRules[1].start; // 工作日时间
            this.workday_start_time2 = currentRule.workdayRules && currentRule.workdayRules[2] && currentRule.workdayRules[2].start; // 工作日时间
            this.workday_start_time3 = currentRule.workdayRules && currentRule.workdayRules[2] && currentRule.workdayRules[3].start; // 工作日时间
            this.workday_start_brightness1 = currentRule.workdayRules &&
                currentRule.workdayRules[1] && currentRule.workdayRules[1].lightLevel; // 亮度
            this.workday_start_brightness2 = currentRule.workdayRules &&
                currentRule.workdayRules[2] && currentRule.workdayRules[2].lightLevel; // 亮度
            this.workday_start_brightness3 = currentRule.workdayRules &&
                currentRule.workdayRules[3] && currentRule.workdayRules[3].lightLevel; // 亮度
        }
        this.workday_start_brightness = currentRule.workdayRules && currentRule.workdayRules[0] && currentRule.workdayRules[0].lightLevel; // 亮度
        this.end_brightness = 0;
        this.holiday_start_time = currentRule.holidayRules && currentRule.holidayRules[0] && currentRule.holidayRules[0].start; // 工作日时间
        var len1 = currentRule.holidayRules.length;
        this.holiday_end_time = currentRule.holidayRules && currentRule.holidayRules[len1 - 1] &&
            currentRule.holidayRules[len1 - 1].start; // 工作日时间
        if (len1 === 3) {
            this.holiday_start_time1 = currentRule.holidayRules && currentRule.holidayRules[1] && currentRule.holidayRules[1].start; // 工作日时间
            this.holiday_start_brightness1 = currentRule.holidayRules &&
                currentRule.holidayRules[1] && currentRule.holidayRules[1].lightLevel; // 亮度
        }
        else if (len1 === 4) {
            this.holiday_start_time1 = currentRule.holidayRules && currentRule.holidayRules[1] && currentRule.holidayRules[1].start; // 工作日时间
            this.holiday_start_time2 = currentRule.holidayRules && currentRule.holidayRules[2] && currentRule.holidayRules[2].start; // 工作日时间
            this.holiday_start_brightness1 = currentRule.holidayRules &&
                currentRule.holidayRules[1] && currentRule.holidayRules[1].lightLevel; // 亮度
            this.holiday_start_brightness2 = currentRule.holidayRules &&
                currentRule.holidayRules[2] && currentRule.holidayRules[2].lightLevel; // 亮度
        }
        else if (len1 === 5) {
            this.holiday_start_time1 = currentRule.holidayRules && currentRule.holidayRules[1] && currentRule.holidayRules[1].start; // 工作日时间
            this.holiday_start_time2 = currentRule.holidayRules && currentRule.holidayRules[2] && currentRule.holidayRules[2].start; // 工作日时间
            this.holiday_start_time3 = currentRule.holidayRules && currentRule.holidayRules[3] && currentRule.holidayRules[3].start; // 工作日时间
            this.holiday_start_brightness1 = currentRule.holidayRules &&
                currentRule.holidayRules[1] && currentRule.holidayRules[1].lightLevel; // 亮度
            this.holiday_start_brightness2 = currentRule.holidayRules &&
                currentRule.holidayRules[2] && currentRule.holidayRules[2].lightLevel; // 亮度
            this.holiday_start_brightness3 = currentRule.holidayRules &&
                currentRule.holidayRules[3] && currentRule.holidayRules[3].lightLevel; // 亮度
        }
        this.holiday_start_brightness = currentRule.holidayRules &&
            currentRule.holidayRules[0] && currentRule.holidayRules[0].lightLevel; // 亮度
        var that = this;
        var modal = this.modalService.open(content, { size: 'lg' });
        this.mr = modal;
        modal.result.then(function (result) {
            console.log('rule-add');
            that.updataRules(item); // 接口处-添加策略
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    // 添加更新策略规则
    StrategyComponent.prototype.updataRules = function (item) {
        var that = this;
        var currentStrategy = this.currentStrategy;
        var id = this.currentStrategy.id;
        var start = {
            day: this.fromDate.day,
            month: this.fromDate.month
        };
        var toDate = this.toDate ? this.toDate : this.fromDate;
        var end = {
            day: toDate.day,
            month: toDate.month
        };
        var workdayRules = [];
        var holidayRules = [];
        if (this.workday_start_time && this.workday_start_brightness) {
            workdayRules.push({
                'lightLevel': this.workday_start_brightness,
                'smart': true,
                'start': this.workday_start_time
            });
            if (this.workday_start_time1 && this.workday_start_brightness1) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness1,
                    'smart': true,
                    'start': {
                        hour: this.workday_start_time1.hour,
                        minute: this.workday_start_time1.minute
                    }
                });
            }
            if (this.workday_start_time2 && this.workday_start_brightness2) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness2,
                    'smart': true,
                    'start': {
                        hour: this.workday_start_time2.hour,
                        minute: this.workday_start_time2.minute
                    }
                });
            }
            if (this.workday_start_time3 && this.workday_start_brightness3) {
                workdayRules.push({
                    'lightLevel': this.workday_start_brightness3,
                    'smart': true,
                    'start': {
                        hour: this.workday_start_time3.hour,
                        minute: this.workday_start_time3.minute
                    }
                });
            }
            if (this.workday_end_time) {
                workdayRules.push({
                    'lightLevel': this.end_brightness,
                    'smart': true,
                    'start': this.workday_end_time
                });
            }
        }
        if (this.holiday_start_time && this.holiday_start_brightness) {
            holidayRules.push({
                'lightLevel': this.holiday_start_brightness,
                'smart': true,
                'start': this.holiday_start_time
            });
            if (this.holiday_start_time1 && this.holiday_start_brightness1) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness1,
                    'smart': true,
                    'start': {
                        hour: this.holiday_start_time1.hour,
                        minute: this.holiday_start_time1.minute
                    }
                });
            }
            if (this.holiday_start_time2 && this.holiday_start_brightness2) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness2,
                    'smart': true,
                    'start': {
                        hour: this.holiday_start_time2.hour,
                        minute: this.holiday_start_time2.minute
                    }
                });
            }
            if (this.holiday_start_time3 && this.holiday_start_brightness3) {
                holidayRules.push({
                    'lightLevel': this.holiday_start_brightness3,
                    'smart': true,
                    'start': {
                        hour: this.holiday_start_time3.hour,
                        minute: this.holiday_start_time3.minute
                    }
                });
            }
            if (this.holiday_end_time) {
                holidayRules.push({
                    'lightLevel': this.end_brightness,
                    'smart': true,
                    'start': this.holiday_end_time
                });
            }
        }
        this.strategyService.updataRules(id, item.id, start, end, workdayRules, holidayRules).subscribe({
            next: function (val) {
                // that.selectStrategy(item, i); // 重新获取策略
                that.getRules(currentStrategy);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 删除策略规则弹框
    StrategyComponent.prototype.openDelRule = function (content, item, i) {
        var that = this;
        this.strategy_rule_del_id = item.id;
        this.strategy_rule_del_index = i;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除策略规则
    StrategyComponent.prototype.closeDelRule = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delRule();
        }
        this.mr.close();
    };
    // 接口处-删除策略
    StrategyComponent.prototype.delRule = function () {
        var that = this;
        var index = this.strategy_rule_del_index;
        this.ruleList.splice(index, 1);
        var id = this.currentStrategy.id;
        var rule_data_id = this.strategy_rule_del_id;
        this.strategyService.delRule(id, rule_data_id).subscribe({
            next: function (val) {
                // that.strategy_index = 0;
                that.getRules(that.currentStrategy); // 重新获取策略
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 关闭弹框
    StrategyComponent.prototype.colseModal = function () {
        this.mr.close();
    };
    // 下一步
    StrategyComponent.prototype.nextStep = function () {
        this.step = this.step + 1;
    };
    // 上一步
    StrategyComponent.prototype.preStep = function () {
        this.step = this.step - 1;
    };
    StrategyComponent.prototype.onDateSelection = function (date) {
        if (!this.fromDate && !this.toDate) {
            this.fromDate = date;
        }
        else if (this.fromDate && !this.toDate && after(date, this.fromDate)) {
            this.toDate = date;
        }
        else {
            this.toDate = null;
            this.fromDate = date;
        }
        if (this.fromDate !== null && this.toDate !== null) {
            console.log('from :' + this.fromDate.day);
            console.log('to :' + this.toDate.day);
            var fromStr = this.fromDate.year + '-' + this.fromDate.month + '-' + this.fromDate.day;
            var toStr = this.toDate.year + '-' + this.toDate.month + '-' + this.toDate.day;
        }
    };
    // 按钮响应事件
    StrategyComponent.prototype.showDatepicker = function (d) {
        d.toggle();
    };
    StrategyComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    // 切换菜单项-策略时间- 策略范围
    StrategyComponent.prototype.changeNav = function (index) {
        this.nav_index = index;
        if (index === 1) {
            this.getZtreeRegion();
            // setTimeout(() => {
            //   this.getZoneTree();
            //   this.setZtreeNode();
            // }, 1);
        }
    };
    StrategyComponent.prototype.setZtreeNode = function () {
        var _this = this;
        var that = this;
        var treeObj = $.fn.zTree.getZTreeObj('treeDemo');
        this.regionList.map(function (item) {
            var node = treeObj.getNodeByParam('id', item.regionId, null);
            if (node) {
                treeObj.checkNode(node, true, true);
                // console.log(11111111);
                // console.log(node);
                // console.log(node.parentTId);
                // console.log(node.isParent);
                _this.findParent(node);
                _this.findParent(node.getParentNode());
                // that.findFinalParent(node);
                // for (let i = that.nodeParentList.length - 1; i > 0; i--) {
                //   that.nodeParentList[i].open = true;
                //   console.log(333333);
                //   console.log(that.nodeParentList[i]);
                // }
            }
        });
    };
    // findFinalParent(node) {
    //   const that = this;
    //   console.log(44444444444);
    //   let p = node.getParentNode();
    //   while (p && !p.open) {
    //     that.nodeParentList.push(p);
    //     p = p.getParentNode();
    //   }
    // }
    StrategyComponent.prototype.findParent = function (node) {
        var p = node.getParentNode();
        if (p && !p.open) {
            console.log(444);
            p.open = true;
            // console.log(p.open);
            // const treeObj = $.fn.zTree.getZTreeObj('treeDemo');
            // const node1 = treeObj.getNodeByTId(p.tId);
            // console.log(node1);
            // node1.open = true;
            // this.findParent(p);
        }
    };
    // 获取策略所覆盖的区域集合
    StrategyComponent.prototype.getZtreeRegion = function () {
        var that = this;
        this.strategyService.getZtreeRegion(this.currentStrategy.id).subscribe({
            next: function (val) {
                that.regionList = val;
                console.log(val);
            },
            complete: function () {
                that.getZoneTree();
                that.setZtreeNode();
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 策略范围-策略下发
    //
    //
    // 获取城市列表
    StrategyComponent.prototype.getZoneTree = function () {
        // const that = this;
        var setting = {
            view: {
                selectedMulti: true
            },
            check: {
                enable: true,
                chkStyle: 'checkbox',
                chkboxType: { 'Y': 'ps', 'N': 'ps' }
            },
            callback: {
                onClick: this.zTreeOnClick,
                onCheck: this.zTreeOnCheck // 勾选事件
            }
        };
        var zNodes = this.zNodes;
        this.zTreeObj = $.fn.zTree.init($('#treeDemo'), setting, zNodes);
    };
    // 接口处-删除策略
    StrategyComponent.prototype.getRegionLights = function (id) {
        var that = this;
        var page = this.page;
        var pageSize = this.pageSize;
        this.strategyService.getRegionLights(id, page, pageSize).subscribe({
            next: function (val) {
                that.rangeList = val;
                that.rangeListItems = val.items;
                that.total = val.total; // 分页
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 获取城市列表
    StrategyComponent.prototype.getZoneDefault = function () {
        var that = this;
        this.strategyService.getZoneDefault()
            .subscribe({
            next: function (res) {
                that.model.ZoneDefault = res;
                that.zNodes = res.regions;
                var id = that.currentTreeNodeId = res.regions[0].id;
                that.getRegionLights(id);
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 下发策略
    StrategyComponent.prototype.setRegion = function () {
        var that = this;
        var body = this.regionbody;
        var ruleId = this.currentStrategy.id;
        this.strategyService.setRegion(ruleId, body)
            .subscribe({
            next: function (res) {
                console.log('ok!');
                that.setRegionMess = true;
            },
            complete: function () {
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 分页
    StrategyComponent.prototype.pageChange = function () {
        var id = this.currentTreeNodeId;
        this.getRegionLights(id);
    };
    // 路由跳转
    StrategyComponent.prototype.jumpHandle = function (url) {
        this.router.navigate([url]);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map2'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], StrategyComponent.prototype, "map_container", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('map3'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], StrategyComponent.prototype, "map_container3", void 0);
    StrategyComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-strategy',
            template: __webpack_require__(/*! ./strategy.component.html */ "./src/app/home/strategy/strategy.component.html"),
            styles: [__webpack_require__(/*! ./strategy.component.scss */ "./src/app/home/strategy/strategy.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_strategy_service__WEBPACK_IMPORTED_MODULE_4__["StrategyService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbCalendar"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbTimepickerConfig"]])
    ], StrategyComponent);
    return StrategyComponent;
}());



/***/ }),

/***/ "./src/app/home/strategy/strategy.routes.ts":
/*!**************************************************!*\
  !*** ./src/app/home/strategy/strategy.routes.ts ***!
  \**************************************************/
/*! exports provided: StrategyRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StrategyRoutes", function() { return StrategyRoutes; });
/* harmony import */ var _strategy_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./strategy.component */ "./src/app/home/strategy/strategy.component.ts");

var StrategyRoutes = [
    {
        path: 'strategy',
        component: _strategy_component__WEBPACK_IMPORTED_MODULE_0__["StrategyComponent"],
    }
];


/***/ }),

/***/ "./src/app/home/user/admin/admin.component.html":
/*!******************************************************!*\
  !*** ./src/app/home/user/admin/admin.component.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 新建/修改用户信息 -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{addOrUpdate}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body add-user-modal\">\r\n    <!-- 新建信息表单 -->\r\n    <div class=\"user-info\">\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\"><span style=\"color: red;\">*</span>账户名称：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.userName\" name=\"userName\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\"><span style=\"color: red;\">*</span>密码：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <!-- <div *ngIf=\"addOrUpdate === '修改用户'\" class=\"form-inline\">\r\n        <label class=\"control-label\"><span style=\"color: red;\">*</span>确认密码：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.password1\" name=\"password1\" class=\"form-control\" placeholder=\"\">\r\n      </div> -->\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\">Email：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\">联系方式：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.mobile\" name=\"mobile\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\">姓名：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.fullName\" name=\"fullName\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\">昵称：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.nickName\" name=\"nickName\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\"><span style=\"color: red;\">*</span>性别：</label>\r\n        <!-- <input type=\"text\" [(ngModel)]=\"user.gender\" name=\"gender\" class=\"form-control\" placeholder=\"\"> -->\r\n        <select name=\"profile1\" [(ngModel)]=\"user.gender\" class=\"cur-pointer form-control\">\r\n          <option *ngFor=\"let index of genderData\" [ngValue]=\"index\">\r\n              {{ index.name }}\r\n            </option>\r\n      </select>\r\n      </div>\r\n      <div class=\"form-inline\">\r\n        <label class=\"control-label\">AvatarUrl：</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.avatar\" name=\"avatar\" class=\"form-control\" placeholder=\"\">\r\n      </div>\r\n\r\n      <div class=\"form-inline role-check\">\r\n        <label class=\"control-label\"><span style=\"color: red;\">*</span>角色：</label>\r\n        <div class=\"form-inline role-check-list\">\r\n            <div *ngFor=\"let role of roleList1; let i = index\">\r\n                <label class=\"checkbox-inline\">\r\n                  <input type=\"checkbox\" [checked]=\"user.roleListCheck[i].check\" [(ngModel)]=\"user.roleListCheck[i].check\"\r\n                    (change)=\"addRoleToUser()\">{{role.name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n            \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addorUpdt()\" [disabled]=\"!user.userName || user.userName == '' ||\r\n    !user.password || user.password == '' || !user.gender || user.gender == '' || user.userName.length > 30 || user.password.length > 30\r\n    || user.email.length > 30 || user.mobile.length > 30 || user.fullName.length > 30 || user.nickName.length > 30 ||\r\n    user.avatar.length > 30 || user.roleIds.length < 1\">确定</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n<!-- 删除位置 -->\r\n<ng-template #contentDelUser let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal  [input]=\"modelData\" (output)=\"closeUser($event)\"></app-sq-modal>\r\n</ng-template>\r\n<div class=\"bodyofadmin\">\r\n  <p *ngFor=\"let alert of alerts\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"card card-primary panel-default\">\r\n    <div class=\"card-header\">\r\n      <span>用户管理</span>\r\n      <div class=\"add-user\">\r\n          <a class=\"cur-pointer btn-a theme-text\" (click)=\"openAddUser(content)\">新建用户</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form class=\"card-block form-inline admin-manage\">\r\n      <!-- 搜索输入框 -->\r\n      <div class=\"form-group inner-addon left-addon \">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control border-none\" name=\"search-content\" id=\"userQuery\" [(ngModel)]=\"queryStr\" \r\n              autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索用户名、用户姓名\"/>\r\n            <i class=\"fa fa-search search-icon\" (click)=\"execQuery()\"></i>\r\n          </div>\r\n      </div>\r\n      <select name=\"profile\" [(ngModel)]=\"curRole\" change=\"roleChange()\" class=\"cur-pointer form-control\">\r\n          <option *ngFor=\"let index of roleList\" [ngValue]=\"index\">\r\n              {{ index.name }}\r\n            </option>\r\n      </select>\r\n      <!-- <input type=\"date\" class=\"form-control\" value=\"Start date\" />\r\n      <input type=\"date\" class=\"form-control\" value=\"End date\" /> -->\r\n      \r\n    </form>\r\n\r\n    <div class=\"card-block\">\r\n        <!-- 用户信息表 -->\r\n        <table class=\"table table-hover\">\r\n            <thead class=\"table-header\">\r\n              <tr>\r\n                <th>账户名称</th>\r\n                <th>用户姓名</th>\r\n                <th>昵称</th>\r\n                <th>性别</th>\r\n                <th>联系方式</th>\r\n                <th>邮箱</th>\r\n                <th>操作</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let user of userList\" class=\"lineheight\">\r\n                <td>{{user.userName}}</td>\r\n                <td>{{user.fullName}}</td>\r\n                <td>{{user.nickName}}</td>\r\n                <td><span *ngIf=\"user.gender === 0\">男</span><span *ngIf=\"user.gender === 1\">女</span></td>\r\n                <td>{{user.mobile}}</td>\r\n                <td>{{user.email}}</td>\r\n                <td>\r\n                  <div class=\"modify-strategy d-inline\">\r\n                    <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdateUser(content, user)\">修改</a>\r\n                    <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelUser(contentDelUser, user)\">删除</a>\r\n                  </div>\r\n\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n        <div *ngIf=\"userList.length === 0 || !userList\">无数据！</div>\r\n        <div *ngIf=\"userList.length > 0\">\r\n          <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n            (pageChange)=\"pageChange()\"></ngb-pagination>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/home/user/admin/admin.component.scss":
/*!******************************************************!*\
  !*** ./src/app/home/user/admin/admin.component.scss ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n.bodyofadmin {\n  width: calc(100vw - 50px); }\n.card-header {\n  border-bottom: 0px;\n  position: relative; }\n.card-header .add-user {\n    margin: 0px;\n    text-align: right;\n    position: absolute;\n    right: 15px;\n    bottom: 5px; }\n.card-block {\n  margin: 5px 0px 0px;\n  min-height: 38px; }\n.search-icon {\n  font-size: 20px;\n  margin: 5px;\n  margin-left: 0px; }\n.search-icon:hover, .search-icon:active {\n  color: #007bff;\n  cursor: pointer; }\n.modal-body .form-control {\n  font-size: 14px;\n  height: calc(1.8rem + 2px);\n  margin-bottom: 5px; }\n.modal-body .control-label {\n  width: 75px;\n  text-align: left; }\n.modal-body .user-info {\n  margin: 0px auto;\n  width: 280px; }\n.modal-body .user-info .control-label {\n    width: 90px; }\n.modal-body .role-check .checkbox-inline {\n  padding-right: 10px;\n  padding-bottom: 5px; }\n.modal-body .role-check .role-check-list {\n  max-width: 188px; }\n.add-user-modal {\n  text-align: center;\n  width: 100%; }\n.right {\n  float: right; }\n.btn-check {\n  border: 0px;\n  background-color: transparent;\n  cursor: pointer; }\n.admin-manage .form-control {\n  font-size: 14px;\n  width: auto;\n  height: 38px;\n  margin-right: 5px; }\n.th-top-border {\n  border: none;\n  border-top: 1px solid; }\n.lineheight {\n  line-height: 1.0; }\n"

/***/ }),

/***/ "./src/app/home/user/admin/admin.component.ts":
/*!****************************************************!*\
  !*** ./src/app/home/user/admin/admin.component.ts ***!
  \****************************************************/
/*! exports provided: AdminComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminComponent", function() { return AdminComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_admin_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/admin.service */ "./src/app/service/admin.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AdminComponent = /** @class */ (function () {
    function AdminComponent(modalService, adminService) {
        this.modalService = modalService;
        this.adminService = adminService;
        this.setting = {}; // zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
        // zTree 的数据属性，深入使用请参考 API 文档（zTreeNode 节点数据详解）
        this.zNodes = [
            {
                name: '设备概览', open: true, children: [
                    { name: 'test1_1' }, { name: 'test1_2' }
                ]
            },
            {
                name: '设备监控', open: true, children: [
                    { name: 'test2_1' }, { name: 'test2_2' }
                ]
            },
            {
                name: '设备管理', open: true, children: [
                    { name: '新增' }, { name: '添加' }, { name: '报销' }
                ]
            },
            {
                name: '系统管理', open: true, children: [
                    {
                        name: '用户管理', children: [
                            { name: '新增' }, { name: '添加' }, { name: '修改' }
                        ]
                    },
                    {
                        name: '权限管理', children: [
                            { name: '新增' }, { name: '添加' }, { name: '修改' }
                        ]
                    }
                ]
            }
        ];
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.genderData = [
            { name: '男', value: 0 },
            { name: '女', value: 1 }
        ];
        this.user = {}; // 存储数据
        this.userList = []; // 用户表
        this.roleList = []; // 角色表
        this.roleList1 = []; // 不含“不限”项
        this.queryStr = ''; // 检索字符串
        this.pageSize = 10;
        this.alerts = [];
        this.alertsModal = [];
        this.page = 1;
    }
    AdminComponent.prototype.ngOnInit = function () {
        this.zTreeObj = $.fn.zTree.init($('#treeDemo'), this.setting, this.zNodes);
        this.getUserList();
        this.getRoleList();
    };
    // 获取用户列表
    AdminComponent.prototype.getUserList = function () {
        var that = this;
        this.adminService.getAllUser(this.queryStr, this.page, this.pageSize).subscribe({
            next: function (val) {
                console.log(val);
                that.userList = val.items;
                that.total = val.total;
            },
            complete: function () { },
            error: function (error) {
                // console.log('errorOnAdminpage');
                console.log(error);
            }
        });
    };
    // 获取角色列表
    AdminComponent.prototype.getRoleList = function () {
        var that = this;
        this.adminService.getAllRole().subscribe({
            next: function (val) {
                that.roleList1 = val;
                that.roleList = val.map(function (item) { return Object.assign({}, item); });
                that.roleList.unshift({ id: 0, name: '不限' }); // 所有项
                that.curRole = that.roleList[0];
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 分页
    AdminComponent.prototype.pageChange = function () {
        this.getUserList();
    };
    // 按角色筛选
    AdminComponent.prototype.roleChange = function () {
        // console.log(this.curRole);
    };
    // 检索用户的账户名或姓名
    AdminComponent.prototype.execQuery = function () {
        this.getUserList();
    };
    // 打开新增用户 框体
    AdminComponent.prototype.openAddUser = function (content) {
        var _this = this;
        var that = this;
        this.addOrUpdate = '新建用户';
        this.user.userName = '';
        this.user.password = '';
        this.user.email = '';
        this.user.mobile = '';
        this.user.fullName = '';
        this.user.nickName = '';
        this.user.gender = '';
        this.user.avatar = '';
        this.user.roleListCheck = []; // 新建用户时各角色的选中状态（check）
        this.user.roleIds = [];
        this.roleList1.map(function (item, i) {
            that.user.roleListCheck.push({ check: false }); // 一一对应角色表roleList1
        });
        var modal = this.modalService.open(content, { windowClass: 'md' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    AdminComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    // 新增用户点击事件
    AdminComponent.prototype.addUser = function () {
        var that = this;
        this.adminService.addNewUser(this.user.userName, this.user.password, this.user.gender.value, this.user.avatar, this.user.email, this.user.mobile, this.user.fullName, this.user.nickName, this.user.roleIds).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '新增成功！',
                });
            },
            complete: function () {
                that.mr.close();
                that.getUserList();
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u65B0\u589E\u5931\u8D25\uFF1A" + message + "\uFF01",
                });
                console.log(error);
            }
        });
    };
    // 打开修改用户信息 框
    AdminComponent.prototype.openUpdateUser = function (content, item) {
        var _this = this;
        console.log(item);
        var that = this;
        this.addOrUpdate = '修改用户';
        this.user.curUser = item; // 所修改的用户
        this.user.userName = item.userName;
        this.user.password = item.password;
        this.user.email = item.email;
        this.user.mobile = item.mobile;
        this.user.fullName = item.fullName;
        this.user.nickName = item.nickName;
        // this.user.gender = item.gender;
        if (item.gender === 0) {
            this.user.gender = this.genderData[0];
        }
        else {
            this.user.gender = this.genderData[1];
        }
        this.user.avatar = item.avatarurl;
        this.user.roleListCheck = []; // 新建用户时各角色的选中状态（check）
        this.user.roleIds = [];
        this.roleList1.map(function (item1, i) {
            that.user.roleListCheck.push({ check: false }); // 一一对应角色表roleList1
        });
        var modal = this.modalService.open(content, { windowClass: 'md' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 修改用户点击事件
    AdminComponent.prototype.updataUser = function () {
        var that = this;
        this.adminService.updateUser(this.user.curUser.id, this.user.userName, this.user.password, this.user.gender.value, this.user.avatar, this.user.email, this.user.mobile, this.user.fullName, this.user.nickName, this.user.roleIds).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '修改成功！',
                });
            },
            complete: function () {
                that.mr.close();
                that.getUserList();
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25\uFF1A" + message + "\uFF01",
                });
                console.log(error);
            }
        });
    };
    // 新建/修改用户点击事件
    AdminComponent.prototype.addorUpdt = function () {
        if (this.addOrUpdate === '新建用户') {
            this.addUser();
        }
        else {
            this.updataUser();
        }
    };
    // 删除设备弹框
    AdminComponent.prototype.openDelUser = function (content, item) {
        var that = this;
        this.user.itemDelId = item.id;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除设备规则
    AdminComponent.prototype.closeUser = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delUser();
        }
        this.mr.close();
    };
    // 删除设备-接口处
    AdminComponent.prototype.delUser = function () {
        var that = this;
        var id = this.user.itemDelId;
        var flag = false;
        var pages = (this.total + this.pageSize - 1) / this.pageSize;
        if (this.page >= pages && this.userList.length === 1) {
            flag = true;
        }
        this.adminService.deleteUser(id).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '删除成功！',
                });
            },
            complete: function () {
                if (flag) {
                    that.page = that.page - 1;
                    that.getUserList();
                }
                else {
                    that.getUserList();
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 为新建用户选定角色，多选按键点击事件
    AdminComponent.prototype.addRoleToUser = function () {
        var that = this;
        this.user.roleIds = [];
        this.user.roleListCheck.map(function (item, i) {
            if (item.check === true) {
                var item1 = that.roleList1[i].id;
                if (item1) {
                    that.user.roleIds.push(item1);
                }
            }
        });
        console.log(this.user.roleIds);
    };
    AdminComponent.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    AdminComponent.prototype.closeAlertModal = function (alert) {
        var index = this.alertsModal.indexOf(alert);
        this.alertsModal.splice(index, 1);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], AdminComponent.prototype, "alerts", void 0);
    AdminComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-admin',
            template: __webpack_require__(/*! ./admin.component.html */ "./src/app/home/user/admin/admin.component.html"),
            styles: [__webpack_require__(/*! ./admin.component.scss */ "./src/app/home/user/admin/admin.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_admin_service__WEBPACK_IMPORTED_MODULE_2__["AdminService"]])
    ], AdminComponent);
    return AdminComponent;
}());



/***/ }),

/***/ "./src/app/home/user/right/right.component.html":
/*!******************************************************!*\
  !*** ./src/app/home/user/right/right.component.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">新建角色</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <!-- <p>One fine body&hellip;</p> -->\r\n      <!--窗体内容 -->\r\n      <table class=\"tabl\">\r\n        <tr>\r\n          <td>角色名称:</td>\r\n          <td>\r\n            <input type=\"text\">\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>角色描述:</td>\r\n          <td>\r\n            <textarea rows=\"3\" cols=\"90\" class=\"ta\"></textarea>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <div>\r\n        <div class=\"div-a\">\r\n          <div>\r\n            功能权限：\r\n          </div>\r\n          <table class=\"bor tabl-a\">\r\n            <tr >\r\n              <td valign=\"top\">\r\n                <div>\r\n                  <ul id=\"guitree\" class=\"ztree\"></ul>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div class=\"div-a\">\r\n          <div>\r\n            数据权限：\r\n          </div>\r\n          <table class=\"bor\">\r\n            <tr>\r\n              <td valign=\"top\">\r\n                <div>\r\n                  <ul id=\"treeDemo\" class=\"ztree\"></ul>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"c('Save click')\">确定</button>\r\n      <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n    </div>\r\n  </ng-template>\r\n<!-- 新增、修改角色 -->\r\n<ng-template #content1 let-c=\"close\" let-d=\"dismiss\">\r\n  <p *ngFor=\"let alert of alertsModal\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlertModal(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{AddorUpdate}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"user-info\">\r\n        <div class=\"form-inline\">\r\n          <label class=\"control-label\"><span style=\"color: red;\">*</span>角色名称：</label>\r\n          <input type=\"text\" [(ngModel)]=\"role.name\" name=\"rolename\" class=\"form-control\" placeholder=\"\">\r\n        </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addorUpdt()\" [disabled]=\"!role.name || role.name == '' \r\n      || role.name.length > 30\">确定</button>\r\n    <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"d('Cross click')\">取消</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- 删除位置 -->\r\n<ng-template #contentDelRole let-c=\"close\" let-d=\"dismiss\">\r\n  <app-sq-modal  [input]=\"modelData\" (output)=\"closeUser($event)\"></app-sq-modal>\r\n</ng-template>\r\n<!-- 主体 -->\r\n<div class=\"bodyofright\">\r\n  <p *ngFor=\"let alert of alerts\" class=\"lsq-alert\">\r\n    <ngb-alert [type]=\"alert.type\" (close)=\"closeAlert(alert)\">{{ alert.message }}</ngb-alert>\r\n  </p>\r\n  <div class=\"card card-primary panel-default\">\r\n    <div class=\"card-header\">\r\n      <span>角色管理</span>\r\n      <div class=\"add-right\">\r\n          <a class=\"cur-pointer btn-a theme-text\" (click)=\"openAddRole(content1)\">新建角色</a>\r\n      </div>\r\n    </div>\r\n    <!-- 搜索表单 -->\r\n    <form class=\"card-block form-inline right-manage\">\r\n      <!-- 搜索输入框 -->\r\n      <div class=\"form-group inner-addon left-addon \">\r\n          <div class=\"form-group\">\r\n            <!-- <input type=\"text\" class=\"form-control border-none\" name=\"search-content\" id=\"\" placeholder=\"{{'XXX'}}\"/> -->\r\n            <input type=\"text\" class=\"form-control border-none\" name=\"search-content\" id=\"roleQuery\" [(ngModel)]=\"queryStr\" \r\n              autocomplete=\"off\" maxlength=\"256\" placeholder=\"检索角色名\"/>\r\n            <i class=\"fa fa-search search-icon\" (click)=\"execQuery()\"></i>\r\n          </div>\r\n      </div>\r\n      <!-- <input type=\"date\" class=\"form-control\" value=\"\" /> -->\r\n    </form>\r\n\r\n    <div class=\"card-block\">\r\n        <!-- 用户信息表 -->\r\n        <table class=\"table table-hover\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>序号</th>\r\n              <!-- <th>ID</th> -->\r\n              <th>角色名</th>\r\n              <th>操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let role of roleList; let i = index\" class=\"lineheight\">\r\n              <td>{{i + 1}}</td>\r\n              <!-- <td class=\"success\" >{{role.id}}</td> -->\r\n              <td>{{role.name}}</td>\r\n              <td>\r\n                <div class=\"modify-strategy d-inline\">\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openUpdateRole(content1, role)\">修改</a>\r\n                  <a class=\"cur-pointer btn-a theme-text d-inline\" (click)=\"openDelRole(contentDelRole, role)\">删除</a>\r\n                </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div *ngIf=\"roleList.length === 0 || !roleList\">无数据！</div>\r\n        <div *ngIf=\"roleList.length > 0\">\r\n          <ngb-pagination [collectionSize]=total [(page)]=\"page\" [maxSize]=\"5\" [rotate]=\"true\" [ellipses]=\"false\" [boundaryLinks]=\"true\"\r\n            (pageChange)=\"pageChange()\"></ngb-pagination>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/home/user/right/right.component.scss":
/*!******************************************************!*\
  !*** ./src/app/home/user/right/right.component.scss ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n/*\r\n  Font Styles: \r\n*/\n/*\r\n  Measurements: \r\n*/\n/*\r\n  Shadows: \r\n*/\n.bodyofright {\n  width: calc(100vw - 50px); }\n.card-header {\n  border-bottom: 0px;\n  position: relative; }\n.card-header .add-right {\n    margin: 0px;\n    text-align: right;\n    position: absolute;\n    right: 15px;\n    bottom: 5px; }\n.card-block {\n  margin: 5px 0px 0px;\n  min-height: 38px; }\n.search-icon {\n  font-size: 20px;\n  margin: 5px;\n  margin-left: 0px; }\n.search-icon:hover, .search-icon:active {\n  color: #007bff;\n  cursor: pointer; }\n.right-manage .form-control {\n  font-size: 14px;\n  width: auto;\n  height: 38px;\n  margin-right: 5px; }\n.th-top-border {\n  border: none;\n  border-top: 1px solid; }\n.btn-parent {\n  padding: 15px; }\n.modal-dialog {\n  top: 12%; }\n.ta {\n  resize: none; }\n.bor {\n  border: 1px solid;\n  width: 300px;\n  height: 400px;\n  margin-top: 20px; }\n.title-font {\n  float: left;\n  font-size: 16px;\n  color: #000000;\n  font-style: Normal;\n  font-weight: 400;\n  font-family: 微软雅黑; }\n.btn-check {\n  border: 0px;\n  background-color: transparent;\n  cursor: pointer; }\n.tabl {\n  border-collapse: separate;\n  border-spacing: 0px 10px; }\n.div-a {\n  float: left; }\n.tabl-a {\n  margin-right: 100px; }\n.div-search {\n  margin: 0 auto;\n  margin-top: 20px; }\n.div-i {\n  float: left;\n  border: 1px solid darkslategray;\n  border-radius: 30px; }\n.search-input {\n  border: none;\n  border-radius: 30px; }\n.tabl-b td {\n  border: none;\n  text-align: center;\n  vertical-align: middle; }\n.modal-btn {\n  background-color: #fff;\n  border: 1px solid #000; }\n.btn-i {\n  margin-right: 6px; }\n.span-text {\n  float: left;\n  width: 20px;\n  margin: 0 auto;\n  margin-top: 10px; }\n.panel-def {\n  padding: 15px 30px;\n  width: calc(100vw - 80px);\n  margin: 0 15px; }\n.lineheight {\n  line-height: 1.0; }\n.modal-body {\n  text-align: center;\n  width: 100%; }\n.modal-body .role-info {\n    margin: 0px auto;\n    width: 280px; }\n.modal-body .role-info .control-label {\n      min-width: 90px; }\n"

/***/ }),

/***/ "./src/app/home/user/right/right.component.ts":
/*!****************************************************!*\
  !*** ./src/app/home/user/right/right.component.ts ***!
  \****************************************************/
/*! exports provided: RightComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RightComponent", function() { return RightComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _service_right_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/right.service */ "./src/app/service/right.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var RightComponent = /** @class */ (function () {
    function RightComponent(modalService, rightService) {
        this.modalService = modalService;
        this.rightService = rightService;
        this.setting = {}; // zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
        // zTree 的数据属性，深入使用请参考 API 文档（zTreeNode 节点数据详解）
        this.role = {}; // 存储数据
        this.modelData = {
            title: '删除',
            body: 'hh',
        };
        this.roleList = []; // 角色表
        this.queryStr = ''; // 检索字符串
        this.pageSize = 10;
        this.alerts = [];
        this.alertsModal = [];
        this.page = 1;
    }
    RightComponent.prototype.ngOnInit = function () {
        this.getRoleList();
    };
    // 获取所有角色
    RightComponent.prototype.getRoleList = function () {
        var that = this;
        this.rightService.getAllRole(this.queryStr, this.page, this.pageSize).subscribe({
            next: function (val) {
                that.roleList = val.items;
                console.log(that.roleList);
                that.total = val.total;
            },
            complete: function () { },
            error: function (error) {
                console.log(error);
            }
        });
    };
    // 打开新增角色 框
    RightComponent.prototype.openAddRole = function (content) {
        var _this = this;
        var that = this;
        this.AddorUpdate = '新增角色';
        this.role.name = '';
        var modal = this.modalService.open(content, { windowClass: 'md' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 新增角色
    RightComponent.prototype.addRole = function () {
        var that = this;
        this.rightService.addNewRole(this.role.name).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '新增成功！',
                });
                that.mr.close();
            },
            complete: function () {
                that.getRoleList();
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u65B0\u589E\u5931\u8D25\uFF1A" + message + "\uFF01",
                });
                console.log(error);
            }
        });
    };
    // 打开修改角色 框
    RightComponent.prototype.openUpdateRole = function (content, item) {
        var _this = this;
        var that = this;
        this.AddorUpdate = '修改角色';
        this.role.curRole = item;
        this.role.name = item.name;
        var modal = this.modalService.open(content, { windowClass: 'md' });
        this.mr = modal;
        modal.result.then(function (result) {
            _this.closeResult = "Closed with: " + result;
            console.log(_this.closeResult);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            console.log(_this.closeResult);
        });
    };
    // 修改角色
    RightComponent.prototype.updateRole = function () {
        var that = this;
        this.rightService.updateRole(this.role.curRole.id, this.role.name).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '修改成功！',
                });
                that.mr.close();
            },
            complete: function () {
                that.getRoleList();
            },
            error: function (error) {
                var message = error.json().errors[0].defaultMessage;
                that.alertsModal.push({
                    id: 1,
                    type: 'danger',
                    message: "\u4FEE\u6539\u5931\u8D25\uFF1A" + message + "\uFF01",
                });
                console.log(error);
            }
        });
    };
    // 新增/修改角色 - 模态框 确认点击事件
    RightComponent.prototype.addorUpdt = function () {
        var that = this;
        if (this.AddorUpdate === '新增角色') {
            that.addRole();
        }
        else {
            that.updateRole();
        }
    };
    // 删除 弹框
    RightComponent.prototype.openDelRole = function (content, item) {
        var that = this;
        this.role.itemDelId = item.id;
        var modal = this.modalService.open(content, { size: 'sm' });
        this.mr = modal;
    };
    // 删除设备规则
    RightComponent.prototype.closeUser = function ($event) {
        console.log($event);
        if ($event === 'ok') {
            this.delRole();
        }
        this.mr.close();
    };
    // 删除设备-接口处
    RightComponent.prototype.delRole = function () {
        var that = this;
        var id = this.role.itemDelId;
        var flag = false;
        var pages = (this.total + this.pageSize - 1) / this.pageSize;
        if (this.page >= pages && this.roleList.length === 1) {
            flag = true;
        }
        this.rightService.deleteRole(id).subscribe({
            next: function (val) {
                that.alerts.push({
                    id: 1,
                    type: 'success',
                    message: '删除成功！',
                });
            },
            complete: function () {
                if (flag) {
                    that.page = that.page - 1;
                    that.getRoleList();
                }
                else {
                    that.getRoleList();
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    };
    RightComponent.prototype.pageChange = function () { };
    RightComponent.prototype.execQuery = function () {
        this.getRoleList();
    };
    RightComponent.prototype.getDismissReason = function (reason) {
        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["ModalDismissReasons"].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    RightComponent.prototype.closeAlert = function (alert) {
        var index = this.alerts.indexOf(alert);
        this.alerts.splice(index, 1);
    };
    RightComponent.prototype.closeAlertModal = function (alert) {
        var index = this.alertsModal.indexOf(alert);
        this.alertsModal.splice(index, 1);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], RightComponent.prototype, "alerts", void 0);
    RightComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-right',
            template: __webpack_require__(/*! ./right.component.html */ "./src/app/home/user/right/right.component.html"),
            styles: [__webpack_require__(/*! ./right.component.scss */ "./src/app/home/user/right/right.component.scss")]
        }),
        __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"], _service_right_service__WEBPACK_IMPORTED_MODULE_2__["RightService"]])
    ], RightComponent);
    return RightComponent;
}());



/***/ }),

/***/ "./src/app/home/user/user.component.html":
/*!***********************************************!*\
  !*** ./src/app/home/user/user.component.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"nav-margin\">\r\n  <p>\r\n  \r\n  </p>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/home/user/user.component.scss":
/*!***********************************************!*\
  !*** ./src/app/home/user/user.component.scss ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/home/user/user.component.ts":
/*!*********************************************!*\
  !*** ./src/app/home/user/user.component.ts ***!
  \*********************************************/
/*! exports provided: UserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserComponent", function() { return UserComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var UserComponent = /** @class */ (function () {
    function UserComponent() {
    }
    UserComponent.prototype.ngOnInit = function () {
    };
    UserComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-user',
            template: __webpack_require__(/*! ./user.component.html */ "./src/app/home/user/user.component.html"),
            styles: [__webpack_require__(/*! ./user.component.scss */ "./src/app/home/user/user.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], UserComponent);
    return UserComponent;
}());



/***/ }),

/***/ "./src/app/home/user/user.module.ts":
/*!******************************************!*\
  !*** ./src/app/home/user/user.module.ts ***!
  \******************************************/
/*! exports provided: UserModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserModule", function() { return UserModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _admin_admin_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./admin/admin.component */ "./src/app/home/user/admin/admin.component.ts");
/* harmony import */ var _right_right_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./right/right.component */ "./src/app/home/user/right/right.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var UserModule = /** @class */ (function () {
    function UserModule() {
    }
    UserModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__["SharedModule"]
            ],
            declarations: [_admin_admin_component__WEBPACK_IMPORTED_MODULE_5__["AdminComponent"], _right_right_component__WEBPACK_IMPORTED_MODULE_6__["RightComponent"]],
            schemas: [
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["CUSTOM_ELEMENTS_SCHEMA"],
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["NO_ERRORS_SCHEMA"]
            ]
        })
    ], UserModule);
    return UserModule;
}());



/***/ }),

/***/ "./src/app/home/user/user.routes.ts":
/*!******************************************!*\
  !*** ./src/app/home/user/user.routes.ts ***!
  \******************************************/
/*! exports provided: UserRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserRoutes", function() { return UserRoutes; });
/* harmony import */ var _admin_admin_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./admin/admin.component */ "./src/app/home/user/admin/admin.component.ts");
/* harmony import */ var _right_right_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./right/right.component */ "./src/app/home/user/right/right.component.ts");
/* harmony import */ var _user_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user.component */ "./src/app/home/user/user.component.ts");
/* harmony import */ var _guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../guard/auth-guard.service */ "./src/app/guard/auth-guard.service.ts");




var UserRoutes = [
    {
        path: 'user',
        component: _user_component__WEBPACK_IMPORTED_MODULE_2__["UserComponent"],
        canActivate: [_guard_auth_guard_service__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]],
        children: [
            {
                path: '',
                // canActivateChild: [AuthGuard],
                children: [
                    { path: '', redirectTo: 'admin', pathMatch: 'full' },
                    { path: 'admin', component: _admin_admin_component__WEBPACK_IMPORTED_MODULE_0__["AdminComponent"] },
                    { path: 'right', component: _right_right_component__WEBPACK_IMPORTED_MODULE_1__["RightComponent"] },
                ]
            }
        ]
    }
];


/***/ }),

/***/ "./src/app/index.ts":
/*!**************************!*\
  !*** ./src/app/index.ts ***!
  \**************************/
/*! exports provided: httpInterceptorProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "httpInterceptorProviders", function() { return httpInterceptorProviders; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _interceptorService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interceptorService */ "./src/app/interceptorService.ts");


/** Http interceptor providers in outside-in order */
var httpInterceptorProviders = [
    { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HTTP_INTERCEPTORS"], useClass: _interceptorService__WEBPACK_IMPORTED_MODULE_1__["InterceptorService"], multi: true },
];
/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/interceptorService.ts":
/*!***************************************!*\
  !*** ./src/app/interceptorService.ts ***!
  \***************************************/
/*! exports provided: InterceptorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InterceptorService", function() { return InterceptorService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/ */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var ngx_cookie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-cookie */ "./node_modules/ngx-cookie/fesm5/ngx-cookie.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var InterceptorService = /** @class */ (function () {
    function InterceptorService(injector, _cookieService) {
        this.injector = injector;
        this._cookieService = _cookieService;
    }
    InterceptorService.prototype.goTo = function (url) {
        var _this = this;
        setTimeout(function () { return _this.injector.get(_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]).navigateByUrl(url); });
    };
    InterceptorService.prototype.handleData = function (event) {
        // 业务处理：一些通用操作
        var that = this;
        switch (event.status) {
            case 200:
                var jwt = event.headers.get('jwt');
                if (jwt) {
                    localStorage.setItem('token', jwt);
                }
                return Object(rxjs___WEBPACK_IMPORTED_MODULE_4__["of"])(event); // break;
            case 500:// 过期状态码
                if (event['error'].message && event['error'].message.indexOf('expired')) {
                    localStorage.removeItem('token');
                    that.goTo('/login');
                }
                return Object(rxjs___WEBPACK_IMPORTED_MODULE_4__["throwError"])(event); // break;
            default:
                return Object(rxjs___WEBPACK_IMPORTED_MODULE_4__["throwError"])(event); // break;
        }
        // return of(event);
    };
    InterceptorService.prototype.intercept = function (req, next) {
        var _this = this;
        var that = this;
        var url = req.url;
        var currentUser = this._cookieService.getObject('currentUser');
        var newReq = req.clone({
            url: url,
        });
        return next.handle(newReq).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (httpError) {
            return _this.handleData(httpError);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["mergeMap"])(function (event) {
            // 允许统一对请求错误处理，这是因为一个请求若是业务上错误的情况下其HTTP请求的状态是200的情况下需要
            if (event instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"] && event.status === 200) {
                return _this.handleData(event);
            }
            // 若一切都正常，则后续操作
            return Object(rxjs___WEBPACK_IMPORTED_MODULE_4__["of"])(event);
        }));
    };
    InterceptorService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], ngx_cookie__WEBPACK_IMPORTED_MODULE_5__["CookieService"]])
    ], InterceptorService);
    return InterceptorService;
}());



/***/ }),

/***/ "./src/app/login/login.component.html":
/*!********************************************!*\
  !*** ./src/app/login/login.component.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row  login-center\">\r\n\r\n<div class=\"login-left\">\r\n  <div class=\"product-name\"><p >{{'新阳蓝光'}}</p></div>\r\n  <div class=\"product-title\">\r\n    <p>{{'基于路灯的智慧城市系统'}}</p>\r\n    <p>{{'Intelligent City System Based On Street Lamp'}}</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row  login-right align-items-center justify-content-center\">\r\n\r\n  <form name=\"form\" (ngSubmit)=\"f.form.valid && login()\" #f=\"ngForm\" novalidate class=\"login-form\">\r\n    <div >\r\n        <h3 class=\"text-center login-titel\">{{'欢迎登录'}}</h3>\r\n      </div>\r\n    <div class=\"form-group inner-addon left-addon \">\r\n      \r\n      <div class=\" ar-error\">\r\n        <div *ngIf=\"f.submitted && !username.valid\" class=\"help-block\">{{'请输入用户名!'}}</div>\r\n        <div *ngIf=\"f.submitted && !password.valid && username.valid\" class=\"help-block \">{{'请输入密码!'}}</div>\r\n        <!-- <div *ngIf=\"error\" class=\"\">{{error}}</div> -->\r\n        <mat-error *ngIf=\"error\">\r\n          <strong>{{error}}</strong>\r\n        </mat-error>\r\n      </div>\r\n\r\n      <div class=\"form-group\" style=\"margin-bottom: 25px\" [ngClass]=\"{ 'has-error': f.submitted && !username.valid }\">\r\n        <i class=\"fa fa-user-o fa-lg fa-fw  login-icon\"></i>\r\n        <input type=\"text\" class=\"form-control border-none login-input\" name=\"username\" id=\"username\" placeholder=\"{{'用户名'}}\" autocomplete [(ngModel)]=\"model.username\"\r\n          #username=\"ngModel\" required (keydown)=\"onKeydown($event)\" autocomplete=\"off\" />\r\n      </div>\r\n      <div class=\"form-group\" style=\"margin-bottom: 25px\" [ngClass]=\"{ 'has-error': f.submitted && !password.valid }\">\r\n        <i class=\"fa fa-key fa-lg fa-fw  login-icon\"></i>\r\n        <input type=\"text\" class=\"form-control border-none login-input\" id=\"password\" name=\"password\" placeholder=\"{{'密码'}}\" autocomplete [(ngModel)]=\"model.password\"\r\n          #password=\"ngModel\" required (keydown)=\"onKeydown($event)\" onfocus=\"this.type='password'\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <!-- 删除了btn-primary -->\r\n        <button [disabled]=\"loading\" class=\"btn col-md-12 btn-login\">\r\n          <span>登录</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n\r\n</div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/login/login.component.scss":
/*!********************************************!*\
  !*** ./src/app/login/login.component.scss ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@media (max-width: 575.98px) {\n  .product-name, .product-title, .login-left {\n    display: none; }\n  .login-right {\n    background: rgba(255, 255, 255, 0.7) !important;\n    top: 160px !important;\n    height: 50vh !important; }\n    .login-right .form-control:focus {\n      background: rgba(255, 255, 255, 0) !important;\n      box-shadow: 0 0 0 0.2rem #c2b4c7; }\n    .login-right .login-input {\n      background: rgba(255, 255, 255, 0) !important; } }\n\n.help-block {\n  color: red; }\n\n.login-form {\n  width: 240px; }\n\n.btn-login {\n  display: inline-block;\n  background-color: #434f5c;\n  border-color: #434f5c;\n  color: #fff;\n  font-size: 18px; }\n\n.btn.focus, .btn:focus {\n  box-shadow: 0 0 0 0.2rem rgba(59, 64, 70, 0.25); }\n\n.form-control:focus {\n  border-color: #ced4da;\n  box-shadow: 0 0 0 0.2rem white; }\n\n.btn-login:visited, .btn-login:hover, .btn-login:focus, .btn-login:active {\n  background-color: #506173;\n  border-color: #506173; }\n\n.middle {\n  float: none;\n  display: inline-block;\n  vertical-align: middle; }\n\n.login-right {\n  position: absolute;\n  background: white;\n  width: 300px;\n  padding: 15px;\n  top: 36px;\n  right: 48px;\n  height: 93vh; }\n\n.login-left {\n  position: absolute;\n  width: calc(100vw - 300px);\n  background: rgba(0, 0, 0, 0.5);\n  top: 36px;\n  left: 30px;\n  height: 93vh;\n  color: #fff;\n  font-size: 36px; }\n\n.login-left .product-name {\n    position: absolute;\n    top: 20px;\n    left: 40px; }\n\n.login-left .product-title {\n    position: absolute;\n    text-align: right;\n    bottom: 100px;\n    right: 80px; }\n\n.login-center {\n  height: 100vh;\n  margin: 0;\n  background-image: url('login-bg.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative; }\n\n.login-titel {\n  margin-bottom: 40px;\n  font-size: 23px; }\n\n.login-icon {\n  position: relative;\n  bottom: -27px; }\n\n.login-input {\n  padding-left: 32px;\n  font-size: 14px; }\n"

/***/ }),

/***/ "./src/app/login/login.component.ts":
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _guard_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guard/auth.service */ "./src/app/guard/auth.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LoginComponent = /** @class */ (function () {
    function LoginComponent(authService, router) {
        this.authService = authService;
        this.router = router;
        this.model = {};
        this.loading = false;
    }
    LoginComponent.prototype.onKeydown = function (event) {
        if (event.keyCode !== 13) {
            this.error = '';
        }
    };
    LoginComponent.prototype.login = function () {
        var that = this;
        this.loading = true;
        // this.authService.login1(this.model.username, this.model.password).subscribe(() => {});
        this.authService.login1(this.model.username, this.model.password)
            .subscribe({
            next: function (val) {
                if (that.authService.isLoggedIn) {
                    // Get the redirect URL from our auth service
                    // If no redirect has been set, use the default
                    var redirect = that.authService.redirectUrl ? that.authService.redirectUrl : '/home';
                    // Set our navigation extras object
                    // that passes on our global query params and fragment
                    var navigationExtras = {
                        queryParamsHandling: 'preserve',
                        preserveFragment: true
                    };
                    // Redirect the user
                    // this.router.navigate([redirect], navigationExtras);
                    that.router.navigate([redirect]);
                }
                else {
                    that.error = '登录失败!';
                    that.loading = false;
                }
            },
            complete: function () { },
            error: function (error) {
                console.log(error.json());
                that.error = error.json().errors[0].defaultMessage;
                that.loading = false;
            }
        });
    };
    LoginComponent.prototype.logout = function () {
        this.authService.logout();
    };
    LoginComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-login',
            template: __webpack_require__(/*! ./login.component.html */ "./src/app/login/login.component.html"),
            styles: [__webpack_require__(/*! ./login.component.scss */ "./src/app/login/login.component.scss")]
        }),
        __metadata("design:paramtypes", [_guard_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], LoginComponent);
    return LoginComponent;
}());

/*

Copyright(c): 2018 深圳创新设计研究院
Author: luo.shuqi@live.com
@file: login.component.ts
@time: 2018 / 7 / 2 17: 18

*/


/***/ }),

/***/ "./src/app/material.module.ts":
/*!************************************!*\
  !*** ./src/app/material.module.ts ***!
  \************************************/
/*! exports provided: MaterialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialModule", function() { return MaterialModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var MaterialModule = /** @class */ (function () {
    function MaterialModule() {
    }
    MaterialModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatToolbarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatFormFieldModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatOptionModule"]
            ],
            exports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatToolbarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatFormFieldModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatOptionModule"]
            ]
        })
    ], MaterialModule);
    return MaterialModule;
}());



/***/ }),

/***/ "./src/app/not-found.component.ts":
/*!****************************************!*\
  !*** ./src/app/not-found.component.ts ***!
  \****************************************/
/*! exports provided: PageNotFoundComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageNotFoundComponent", function() { return PageNotFoundComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var PageNotFoundComponent = /** @class */ (function () {
    function PageNotFoundComponent() {
    }
    PageNotFoundComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: '<h2>Page not found</h2>'
        })
    ], PageNotFoundComponent);
    return PageNotFoundComponent;
}());

/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/selective-preloading-strategy.ts":
/*!**************************************************!*\
  !*** ./src/app/selective-preloading-strategy.ts ***!
  \**************************************************/
/*! exports provided: SelectivePreloadingStrategy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectivePreloadingStrategy", function() { return SelectivePreloadingStrategy; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var SelectivePreloadingStrategy = /** @class */ (function () {
    function SelectivePreloadingStrategy() {
        this.preloadedModules = [];
    }
    SelectivePreloadingStrategy.prototype.preload = function (route, load) {
        if (route.data && route.data['preload']) {
            // add the route path to the preloaded module array
            this.preloadedModules.push(route.path);
            // log the route path to the console
            console.log('Preloaded: ' + route.path);
            return load();
        }
        else {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
        }
    };
    SelectivePreloadingStrategy = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], SelectivePreloadingStrategy);
    return SelectivePreloadingStrategy;
}());

/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/service/admin.service.ts":
/*!******************************************!*\
  !*** ./src/app/service/admin.service.ts ***!
  \******************************************/
/*! exports provided: AdminService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminService", function() { return AdminService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AdminService = /** @class */ (function () {
    function AdminService(http) {
        this.http = http;
    }
    // 获取所有用户 - 分页
    AdminService.prototype.getAllUser = function (queryStr, page, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/security/user?queryStr=" + queryStr + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            return res;
        }));
    };
    // 新增用户
    AdminService.prototype.addNewUser = function (name, password, gender, avatarUrl, email, mobile, fullName, nickName, roleIds) {
        return this.http.post('/security/user', {
            'userName': name,
            'password': password,
            'gender': gender,
            'avatarurl': avatarUrl,
            'email': email,
            'mobile': mobile,
            'fullName': fullName,
            'nickName': nickName,
            'roles': roleIds
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            return res;
            // if (res.status === 200) {
            //     const data = res.json();
            //     return data;
            // } else if (res.status === 400) {
            //     return res.json();
            // }
        }));
    };
    // 修改用户
    AdminService.prototype.updateUser = function (id, name, password, gender, avatarUrl, email, mobile, fullName, nickName, roleIds) {
        return this.http.put('/security/user', {
            'id': id,
            'userName': name,
            'password': password,
            'gender': gender,
            'avatarurl': avatarUrl,
            'email': email,
            'mobile': mobile,
            'fullName': fullName,
            'nickName': nickName,
            'roles': roleIds
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            var data = { status: 200 };
            return data;
            // if (res.status === 200) {
            //     const data = {status: 200};
            //     return data;
            // } else if (res.status === 400) {
            //     return res.json();
            // }
        }));
    };
    // 删除用户
    AdminService.prototype.deleteUser = function (id) {
        return this.http.delete("/security/user?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            var data = { status: 200 };
            return data;
            // if (res.status === 200) {
            //     const data = { status: 200};
            //     return data;
            // } else if (res.status === 202) {
            //     return res.json().code.toString();
            // }
        }));
    };
    // 获取所有角色
    AdminService.prototype.getAllRole = function () {
        return this.http.get("/security/role/all")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            return res;
            // if (res.status === 200) {
            //     const data = res.json();
            //     return data;
            // } else if (res.status === 202) {
            //     return res.json().code.toString();
            // }
        }));
    };
    AdminService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], AdminService);
    return AdminService;
}());



/***/ }),

/***/ "./src/app/service/airmonitor.service.ts":
/*!***********************************************!*\
  !*** ./src/app/service/airmonitor.service.ts ***!
  \***********************************************/
/*! exports provided: AirmonitorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AirmonitorService", function() { return AirmonitorService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AirmonitorService = /** @class */ (function () {
    function AirmonitorService(http) {
        this.http = http;
    }
    // 获取指定坐标范围内的所有设备
    AirmonitorService.prototype.getAirDevice = function (ne, sw) {
        return this.http.post("/api/airmonitor/inbounds", {
            'ne': ne,
            'sw': sw
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定设备的多项历史数据
    AirmonitorService.prototype.getHistoryData = function (id, from, to, page, pageSize) {
        return this.http.get("/api/airmonitor/history/" + id + "?from=" + from + "&to=" + to + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取历史数据的统计值
    AirmonitorService.prototype.getStatistics = function (id, field, agg, from, to, interval) {
        return this.http
            .get("/api/airmonitor/stat/" + id + "/" + field + "/" + agg + "?from=" + from + "&to=" + to + "&interval=" + interval)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    AirmonitorService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], AirmonitorService);
    return AirmonitorService;
}());



/***/ }),

/***/ "./src/app/service/camera.service.ts":
/*!*******************************************!*\
  !*** ./src/app/service/camera.service.ts ***!
  \*******************************************/
/*! exports provided: CameraService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraService", function() { return CameraService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http, Headers, Response } from '@angular/http';

var CameraService = /** @class */ (function () {
    function CameraService(http) {
        this.http = http;
    }
    // 获取指定坐标范围内的摄像头信息
    CameraService.prototype.getCameras = function (ne, sw) {
        return this.http.post('/api/camera/inbounds', {
            'ne': ne,
            'sw': sw
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    CameraService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], CameraService);
    return CameraService;
}());



/***/ }),

/***/ "./src/app/service/circle-overlay-air.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/service/circle-overlay-air.service.ts ***!
  \*******************************************************/
/*! exports provided: CircleOverlarAirService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircleOverlarAirService", function() { return CircleOverlarAirService; });
function CircleOverlarAirService(center, name, count, length, color, mouseoverColor) {
    // console.log(this);
    this._center = center;
    this._length = length;
    this._color = color;
    this._mouseoverColor = mouseoverColor;
    this._name = name;
    this._count = count;
}
CircleOverlarAirService.prototype = new BMap.Overlay();
// 实现初始化方法
CircleOverlarAirService.prototype.initialize = function (map) {
    var that = this;
    // 保存map对象实例
    this._map = map;
    // 创建div元素，作为自定义覆盖物的容器
    var div = document.createElement('div');
    // div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);
    // div.style.zIndex = BMap.Overlay.getZIndex(this._center.lat);
    div.style.zIndex = '999';
    div.style.position = 'absolute';
    // 可以根据参数设置元素外观
    div.style.width = this._length + 'px';
    div.style.height = this._length + 'px';
    // div.style.lineHeight = this._length + 'px';
    div.style.background = this._color;
    div.style.paddingTop = 15 + 'px';
    div.className = 'i-circle';
    // 将div添加到覆盖物容器中
    map.getPanes().markerPane.appendChild(div);
    // 保存div实例
    this._div = div;
    // 需要将div元素作为方法的返回值，当调用该覆盖物的show、
    // hide方法，或者对覆盖物进行移除时，API都将操作此元素。
    var span = this._span = document.createElement('span');
    var span2 = this._span2 = document.createElement('span');
    // const span3 = this._span3 = document.createElement('span');
    var br = document.createElement('br');
    // const br2 = document.createElement('br');
    div.appendChild(span);
    div.appendChild(br);
    div.appendChild(span2);
    // div.appendChild(br2);
    // div.appendChild(span3);
    span.appendChild(document.createTextNode(this._name));
    span2.appendChild(document.createTextNode(this._count));
    // span3.appendChild(document.createTextNode(this._name));
    var arrow = this._arrow = document.createElement('div');
    div.onmouseover = function () {
        this.style.backgroundColor = that._mouseoverColor;
        this.style.zIndex = '1000';
        // this.style.borderColor = '#0000ff';
        // this.getElementsByTagName('span')[0].innerHTML = that._overText;
        // arrow.style.backgroundPosition = '0px -20px';
    };
    div.onmouseout = function () {
        this.style.backgroundColor = that._color;
        this.style.zIndex = '999';
        // this.style.borderColor = "#BC3B3A";
        // this.getElementsByTagName("span")[0].innerHTML = that._text;
        // arrow.style.backgroundPosition = "0px 0px";
    };
    return div;
};
// 实现绘制方法
CircleOverlarAirService.prototype.draw = function () {
    // 根据地理坐标转换为像素坐标，并设置给容器
    var position = this._map.pointToOverlayPixel(this._center);
    this._div.style.left = position.x - this._length / 2 + 'px';
    this._div.style.top = position.y - this._length / 2 + 'px';
};
// 实现显示方法
CircleOverlarAirService.prototype.show = function () {
    if (this._div) {
        this._div.style.display = '';
    }
};
// 实现隐藏方法
CircleOverlarAirService.prototype.hide = function () {
    if (this._div) {
        this._div.style.display = 'none';
    }
};
// 添加自定义方法
CircleOverlarAirService.prototype.toggle = function () {
    if (this._div) {
        if (this._div.style.display === '') {
            this.hide();
        }
        else {
            this.show();
        }
    }
};


/***/ }),

/***/ "./src/app/service/circle-overlay.service.ts":
/*!***************************************************!*\
  !*** ./src/app/service/circle-overlay.service.ts ***!
  \***************************************************/
/*! exports provided: CircleOverlarService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircleOverlarService", function() { return CircleOverlarService; });
// export class CircleOverlarService {
//     center: any;
//     length: any;
//     color: any;
//     constructor(center, length, color) {
//         this.center = center;
//         this.length = length;
//         this.color = color;
//     }
// }
function CircleOverlarService(center, name, count, length, color, mouseoverColor) {
    // console.log(this);
    this._center = center;
    this._length = length;
    this._color = color;
    this._mouseoverColor = mouseoverColor;
    this._name = name;
    this._count = count;
}
CircleOverlarService.prototype = new BMap.Overlay();
// 实现初始化方法
CircleOverlarService.prototype.initialize = function (map) {
    var that = this;
    // 保存map对象实例
    this._map = map;
    // console.log(this._point);
    // console.log(this);
    // 创建div元素，作为自定义覆盖物的容器
    var div = document.createElement('div');
    // div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);
    // div.style.zIndex = BMap.Overlay.getZIndex(this._center.lat);
    div.style.zIndex = '999';
    div.style.position = 'absolute';
    // 可以根据参数设置元素外观
    div.style.width = this._length + 'px';
    div.style.height = this._length + 'px';
    // div.style.lineHeight = this._length + 'px';
    div.style.background = this._color;
    div.className = 'i-circle';
    // 将div添加到覆盖物容器中
    map.getPanes().markerPane.appendChild(div);
    // 保存div实例
    this._div = div;
    // 需要将div元素作为方法的返回值，当调用该覆盖物的show、
    // hide方法，或者对覆盖物进行移除时，API都将操作此元素。
    var span = this._span = document.createElement('span');
    var span2 = this._span2 = document.createElement('span');
    var br = document.createElement('br');
    div.appendChild(span);
    div.appendChild(br);
    div.appendChild(span2);
    span.appendChild(document.createTextNode(this._name));
    span2.appendChild(document.createTextNode(this._count));
    var arrow = this._arrow = document.createElement('div');
    div.onmouseover = function () {
        this.style.backgroundColor = that._mouseoverColor;
        this.style.zIndex = '1000';
        // this.style.borderColor = '#0000ff';
        // this.getElementsByTagName('span')[0].innerHTML = that._overText;
        // arrow.style.backgroundPosition = '0px -20px';
    };
    div.onmouseout = function () {
        this.style.backgroundColor = that._color;
        this.style.zIndex = '999';
        // this.style.borderColor = "#BC3B3A";
        // this.getElementsByTagName("span")[0].innerHTML = that._text;
        // arrow.style.backgroundPosition = "0px 0px";
    };
    return div;
};
// 实现绘制方法
CircleOverlarService.prototype.draw = function () {
    // 根据地理坐标转换为像素坐标，并设置给容器
    var position = this._map.pointToOverlayPixel(this._center);
    this._div.style.left = position.x - this._length / 2 + 'px';
    this._div.style.top = position.y - this._length / 2 + 'px';
};
// 实现显示方法
CircleOverlarService.prototype.show = function () {
    if (this._div) {
        this._div.style.display = '';
    }
};
// 实现隐藏方法
CircleOverlarService.prototype.hide = function () {
    if (this._div) {
        this._div.style.display = 'none';
    }
};
// 添加自定义方法
CircleOverlarService.prototype.toggle = function () {
    if (this._div) {
        if (this._div.style.display === '') {
            this.hide();
        }
        else {
            this.show();
        }
    }
};


/***/ }),

/***/ "./src/app/service/communicate.service.ts":
/*!************************************************!*\
  !*** ./src/app/service/communicate.service.ts ***!
  \************************************************/
/*! exports provided: CommunicateService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommunicateService", function() { return CommunicateService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var CommunicateService = /** @class */ (function () {
    function CommunicateService() {
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
    }
    CommunicateService.prototype.sendMessage = function (message) {
        this.subject.next({ mess: message });
    };
    CommunicateService.prototype.clearMessage = function () {
        this.subject.next();
    };
    CommunicateService.prototype.getMessage = function () {
        return this.subject.asObservable();
    };
    CommunicateService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], CommunicateService);
    return CommunicateService;
}());



/***/ }),

/***/ "./src/app/service/cover.service.ts":
/*!******************************************!*\
  !*** ./src/app/service/cover.service.ts ***!
  \******************************************/
/*! exports provided: CoverService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoverService", function() { return CoverService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http, Headers, Response } from '@angular/http';

var CoverService = /** @class */ (function () {
    function CoverService(http) {
        this.http = http;
    }
    // 获取详细的位置数据
    CoverService.prototype.getCovers = function (ne, sw) {
        return this.http.post('/api/manhole/inbounds', {
            'ne': ne,
            'sw': sw
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定类型的事件
    CoverService.prototype.getIssues = function (deviceType, state) {
        return this.http.get("/api/issue/open?deviceType=" + deviceType + "&state=" + state)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定设备的事件
    CoverService.prototype.getDeviceIssues = function (deviceId, state) {
        return this.http.get("/api/issue/open?deviceId=" + deviceId + "&state=" + state)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 设置指定事件状态0-1
    CoverService.prototype.setIssues = function (issueId, state, comment) {
        return this.http.post("/api/issue/" + issueId + "/state", {
            'comment': comment,
            'state': state
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 设置指定设备事件状态
    CoverService.prototype.setDeviceIssues = function (deviceId, orgState, state, comment, assigneeId) {
        return this.http.post("/api/issue/state?deviceId=" + deviceId, {
            'comment': comment,
            'orgState': orgState,
            'state': state,
            'assigneeId': assigneeId
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 获取指定设备类型的不同状态的统计
    CoverService.prototype.getStatus = function (deviceType, state, comment) {
        return this.http.post("/api/issue/open/stat?deviceType=" + deviceType, {
            'comment': comment,
            'state': state
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取所有用户 - 分页
    CoverService.prototype.getAllUser = function () {
        return this.http.get("/security/user/all")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    CoverService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], CoverService);
    return CoverService;
}());



/***/ }),

/***/ "./src/app/service/device.service.ts":
/*!*******************************************!*\
  !*** ./src/app/service/device.service.ts ***!
  \*******************************************/
/*! exports provided: DeviceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceService", function() { return DeviceService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var DeviceService = /** @class */ (function () {
    function DeviceService(http) {
        this.http = http;
    }
    // 城市列表
    DeviceService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = res;
            // data.regions[0].open = true;
            return data;
            // if (res.status === 200) {
            //     const data = res.json();
            //     console.log(data.regions[0]);
            //     data.regions[0].open = true;
            //     // data.regions[0].children[0].open = true;
            //     // data.regions[0].children.map((item, index) => {
            //     //     data.regions[0].children[index].open = true;
            //     // });
            //     return data;
            // } else if (res.status === 400) {
            //     console.log(res.json());
            //     return res.json();
            //     // return res.json().errors.toString();
            // }
        }));
    };
    // 获取所有设备-分页
    DeviceService.prototype.getAllDevice = function (page, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/api/device?page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定型号设备-分页
    DeviceService.prototype.getAllDeviceByModel = function (queryStr, model, page, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/api/device?queryStr=" + queryStr + "&model=" + model + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取所有设备型号-分页
    DeviceService.prototype.getAllDeviceModel = function (type, page, pageSize) {
        return this.http.get("/api/device/model?type=" + type + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 新增设备
    DeviceService.prototype.addNewDevice = function (name, modelId, descr, positionId, lng, lat) {
        return this.http.post('/api/device', {
            'name': name,
            'modelId': modelId,
            'description': descr,
            'positionId': positionId,
            'point': {
                'lat': lat,
                'lng': lng
            }
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 删除设备
    DeviceService.prototype.delDevice = function (id) {
        return this.http.delete("/api/device?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 修改设备
    DeviceService.prototype.updateDevice = function (id, name, modelId, descr, positionId, lng, lat) {
        return this.http.put("/api/device", {
            'id': id,
            'name': name,
            'modelId': modelId,
            'description': descr,
            'positionId': positionId,
            'point': {
                'lat': lat,
                'lng': lng
            }
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 获取指定区域内的所有位置点-分页
    DeviceService.prototype.getAllPosiByRegionId = function (queryStr, regionId, page, pageSize) {
        return this.http.get("/api/position/region/" + regionId + "?queryStr=" + queryStr + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定位置点
    DeviceService.prototype.getPosiById = function (id) {
        return this.http.get("/api/position/" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    DeviceService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], DeviceService);
    return DeviceService;
}());



/***/ }),

/***/ "./src/app/service/dialog.service.ts":
/*!*******************************************!*\
  !*** ./src/app/service/dialog.service.ts ***!
  \*******************************************/
/*! exports provided: DialogService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogService", function() { return DialogService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/ */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


/**
 * Async modal dialog service
 * DialogService makes this app easier to test by faking this service.
 * TODO: better modal implementation that doesn't use window.confirm
 */
var DialogService = /** @class */ (function () {
    function DialogService() {
    }
    /**
     * Ask user to confirm an action. `message` explains the action and choices.
     * Returns observable resolving to `true`=confirm or `false`=cancel
     */
    DialogService.prototype.confirm = function (message) {
        var confirmation = window.confirm(message || 'Is it OK?');
        return Object(rxjs___WEBPACK_IMPORTED_MODULE_1__["of"])(confirmation);
    };
    DialogService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], DialogService);
    return DialogService;
}());

/*
Copyright 2017-2018 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/


/***/ }),

/***/ "./src/app/service/full-screen.service.ts":
/*!************************************************!*\
  !*** ./src/app/service/full-screen.service.ts ***!
  \************************************************/
/*! exports provided: FullScreenService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FullScreenService", function() { return FullScreenService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _windowserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../windowserver */ "./src/app/windowserver.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var FullScreenService = /** @class */ (function () {
    function FullScreenService(winRef) {
        this.winRef = winRef;
    }
    // 进入全屏
    FullScreenService.prototype.enterFullScreen = function () {
        var de;
        de = document.documentElement;
        if (de.requestFullscreen) {
            de.requestFullscreen();
            console.log('1');
        }
        else if (de.mozRequestFullScreen) {
            de.mozRequestFullScreen();
            console.log('2');
        }
        else if (de.webkitRequestFullScreen) {
            de.webkitRequestFullScreen();
            console.log('3');
        }
    };
    // 退出全屏
    FullScreenService.prototype.exitFullScreen = function () {
        var de;
        de = document.documentElement;
        if (de.exitFullscreen) {
            de.exitFullscreen();
            console.log('12');
        }
        else if (de.mozCancelFullScreen) {
            de.mozCancelFullScreen();
            console.log('13');
        }
        else if (de.webkitCancelFullScreen) {
            de.webkitCancelFullScreen();
            console.log('14');
        }
        console.log('15');
    };
    // 全屏
    FullScreenService.prototype.fullScreen = function () {
        var el;
        el = document.documentElement;
        var rfs = el.requestFullScreen || el.webkitRequestFullScreen || el.mozRequestFullScreen || el.msRequestFullscreen;
        if (typeof rfs !== 'undefined' && rfs) {
            rfs.call(el);
        }
        return;
    };
    FullScreenService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_windowserver__WEBPACK_IMPORTED_MODULE_1__["WindowRef"]])
    ], FullScreenService);
    return FullScreenService;
}());



/***/ }),

/***/ "./src/app/service/grad.overlay.ts":
/*!*****************************************!*\
  !*** ./src/app/service/grad.overlay.ts ***!
  \*****************************************/
/*! exports provided: GradOverlar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GradOverlar", function() { return GradOverlar; });
function GradOverlar(center, length, className) {
    this._center = center;
    this._length = length;
    this._className = className;
}
GradOverlar.prototype = new BMap.Overlay();
// 实现初始化方法
GradOverlar.prototype.initialize = function (map) {
    var that = this;
    // 保存map对象实例
    this._map = map;
    // 创建div元素，作为自定义覆盖物的容器
    var div = document.createElement('div');
    div.style.zIndex = '10000';
    div.style.position = 'absolute';
    // 可以根据参数设置元素外观
    div.style.width = this._length + 'px';
    div.style.height = this._length + 'px';
    // div.className = this._className;
    // 将div添加到覆盖物容器中
    map.getPanes().markerPane.appendChild(div);
    // 保存div实例
    this._div = div;
    // console.log(this._className);
    // 需要将div元素作为方法的返回值，当调用该覆盖物的show、
    // hide方法，或者对覆盖物进行移除时，API都将操作此元素。
    var div1 = this._span = document.createElement('div');
    div1.className = this._className;
    // div1.className = 'tag-grad';
    div.appendChild(div1);
    // span.appendChild(document.createTextNode(this._className));
    var arrow = this._arrow = document.createElement('div');
    div.onmouseover = function () {
        this.style.backgroundColor = that._mouseoverColor;
        this.style.zIndex = '1000';
    };
    div.onmouseout = function () {
        this.style.backgroundColor = that._color;
        this.style.zIndex = '999';
    };
    return div;
};
// 实现绘制方法
GradOverlar.prototype.draw = function () {
    // 根据地理坐标转换为像素坐标，并设置给容器
    var position = this._map.pointToOverlayPixel(this._center);
    this._div.style.left = position.x - this._length / 2 + 'px';
    this._div.style.top = position.y - this._length / 2 + 'px';
};
// 实现显示方法
GradOverlar.prototype.show = function () {
    if (this._div) {
        this._div.style.display = '';
    }
};
// 实现隐藏方法
GradOverlar.prototype.hide = function () {
    if (this._div) {
        this._div.style.display = 'none';
    }
};
// 添加自定义方法
GradOverlar.prototype.toggle = function () {
    if (this._div) {
        if (this._div.style.display === '') {
            this.hide();
        }
        else {
            this.show();
        }
    }
};


/***/ }),

/***/ "./src/app/service/led.service.ts":
/*!****************************************!*\
  !*** ./src/app/service/led.service.ts ***!
  \****************************************/
/*! exports provided: LedService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LedService", function() { return LedService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { of } from 'rxjs/';

var LedService = /** @class */ (function () {
    function LedService(http) {
        this.http = http;
    }
    LedService.prototype.gFiles = function (id) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/files/gFiles?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.getProgram = function (id) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/programs/getProgram?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.createUser = function (body) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.post('/led-api/users/createUser', body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.getUsers = function (currentPage, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/users/getUser?pageSize=" + pageSize + "&currentPage=" + currentPage)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.createTask = function (body) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.post('/led-api/tasks/createTask', body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.getTasks = function (currentPage, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/tasks/getTasks?pageSize=" + pageSize + "&currentPage=" + currentPage)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.searchAllTask = function (id, currentPage, pageSize) {
        return this.http.get("/led-api/tasks/searchAllTask?id=" + id + "&pageSize=" + pageSize + "&currentPage=" + currentPage)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.searchTask = function (body) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.post('/led-api/tasks/searchTask', body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.createMedia = function (body) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.post('/led-api/medias/createMedia', body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.getMedias = function (currentPage, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/medias/getMedia?pageSize=" + pageSize + "&currentPage=" + currentPage)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.createProgram = function (body) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.post('/led-api/programs/createProgram', body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService.prototype.getPrograms = function (currentPage, pageSize) {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get("/led-api/programs/getPrograms?pageSize=" + pageSize + "&currentPage=" + currentPage)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    LedService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], LedService);
    return LedService;
}());



/***/ }),

/***/ "./src/app/service/light.service.ts":
/*!******************************************!*\
  !*** ./src/app/service/light.service.ts ***!
  \******************************************/
/*! exports provided: LightService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LightService", function() { return LightService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http, Headers, Response } from '@angular/http';

var LightService = /** @class */ (function () {
    function LightService(http) {
        this.http = http;
    }
    // 获取详细的位置数据
    LightService.prototype.getLights = function (ne, sw) {
        return this.http.post('/api/streetlight/inbounds', {
            'ne': ne,
            'sw': sw
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 临时控制路灯
    LightService.prototype.setLightsContr = function (id, level, stopTime) {
        return this.http.put('/api/streetlight/level', {
            'id': id,
            'level': level,
            'stopTime': stopTime
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 修改路灯控制策略
    LightService.prototype.setStrategyRule = function (id, ruleId) {
        return this.http.put('/api/streetlight/setrule', {
            'id': id,
            'ruleId': ruleId
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 获取策略表
    LightService.prototype.getStrategy = function () {
        return this.http.get("/api/streetlight/rule")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 设置多个指定路灯亮度
    LightService.prototype.setLightsLevel = function (ids, level, stopTime) {
        return this.http.put('/api/streetlight/levels', {
            'ids': ids,
            'level': level,
            'stopTime': stopTime
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 设置多个指定路灯策略并下发
    LightService.prototype.setLightsRule = function (ids, ruleId) {
        return this.http.put('/api/streetlight/setrules', {
            'ids': ids,
            'ruleId': ruleId
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
            // if (res.status === 200) {
            //     const data = { status: 200 };
            //     // console.log(res.json());
            //     return data;
            // } else if (res.status === 202) {
            //     return res.json().code.toString();
            // }
        }));
    };
    LightService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], LightService);
    return LightService;
}());



/***/ }),

/***/ "./src/app/service/mess.service.ts":
/*!*****************************************!*\
  !*** ./src/app/service/mess.service.ts ***!
  \*****************************************/
/*! exports provided: MessService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessService", function() { return MessService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/ */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var MessService = /** @class */ (function () {
    function MessService() {
        this.Source = new rxjs___WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.Status$ = this.Source.asObservable();
    }
    MessService.prototype.StatusMission = function (message) {
        this.Source.next(message);
    };
    MessService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], MessService);
    return MessService;
}());



/***/ }),

/***/ "./src/app/service/monitor.service.ts":
/*!********************************************!*\
  !*** ./src/app/service/monitor.service.ts ***!
  \********************************************/
/*! exports provided: MonitorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonitorService", function() { return MonitorService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http, Headers, Response } from '@angular/http';

var MonitorService = /** @class */ (function () {
    function MonitorService(http) {
        this.http = http;
    }
    // 设备列表
    MonitorService.prototype.getDevice = function () {
        return this.http.get('/api/device/type/all')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 城市列表
    MonitorService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取按区域汇总的位置数据
    MonitorService.prototype.getRegions = function (sw, ne, level, type) {
        return this.http.post("/api/position/inbounds/sum/" + level, {
            'bounds': {
                'ne': ne,
                'sw': sw
            },
            'device_type': type
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取详细的位置数据
    MonitorService.prototype.getDetails = function (sw, ne, zoom, type) {
        return this.http.post('/api/position/inbounds/details', {
            'bounds': {
                'ne': ne,
                'sw': sw
            },
            'device_type': type
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定位置所挂设备参数定义
    MonitorService.prototype.getDeviceDetails = function (positionId, deviceType) {
        return this.http.get("/api/position/device?positionId=" + positionId + "&deviceType=" + deviceType)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    MonitorService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], MonitorService);
    return MonitorService;
}());



/***/ }),

/***/ "./src/app/service/position.service.ts":
/*!*********************************************!*\
  !*** ./src/app/service/position.service.ts ***!
  \*********************************************/
/*! exports provided: PositionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PositionService", function() { return PositionService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PositionService = /** @class */ (function () {
    function PositionService(http) {
        this.http = http;
    }
    // 城市列表
    PositionService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 设备列表
    PositionService.prototype.getDevice = function () {
        return this.http.get('/api/device/type/all')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取位置分页
    PositionService.prototype.getPosition = function (queryStr, type, page, pagesize) {
        return this.http.get("/api/position?queryStr=" + queryStr + "&type=" + type + "&page=" + page + "&pageSize=" + pagesize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 新增位置信息
    //     {
    //     "id": 0,
    //         "installZoneId": 0,
    //             "name": "string",
    //                 "number": "string",
    //                     "point": {
    //         "lat": 0,
    //             "lng": 0
    //     },
    //     "regionId": "string",
    //      "type": 0
    // }
    PositionService.prototype.setPosition = function (installZoneId, regionId, name, number, point, type) {
        return this.http.post("/api/position", {
            'installZoneId': installZoneId,
            'name': name,
            'number': number,
            'point': point,
            'regionId': regionId,
            'type': type
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 删除位置 /api/position?id=1
    PositionService.prototype.delPosition = function (id) {
        return this.http.delete("/api/position?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 修改位置
    PositionService.prototype.updataPosition = function (id, installZoneId, regionId, name, number, point, type) {
        return this.http.put("/api/position", {
            'id': id,
            'installZoneId': installZoneId,
            'name': name,
            'number': number,
            'point': point,
            'regionId': regionId,
            'type': type
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    PositionService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], PositionService);
    return PositionService;
}());



/***/ }),

/***/ "./src/app/service/product.service.ts":
/*!********************************************!*\
  !*** ./src/app/service/product.service.ts ***!
  \********************************************/
/*! exports provided: ProductService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductService", function() { return ProductService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ProductService = /** @class */ (function () {
    function ProductService(http) {
        this.http = http;
    }
    // 城市列表
    ProductService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 设备列表
    ProductService.prototype.getDevice = function () {
        return this.http.get('/api/device/type/all')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取设备型号
    ProductService.prototype.getModel = function (queryStr, type, page, pagesize) {
        return this.http.get("/api/device/model?queryStr=" + queryStr + "&type=" + type + "&page=" + page + "&pageSize=" + pagesize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 新增设备型号
    ProductService.prototype.setModel = function (name, description, type, isGateway) {
        return this.http.post("/api/device/model", {
            'name': name,
            'description': description,
            'type': type,
            'isGateway': isGateway,
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 修改设备型号
    ProductService.prototype.updateModel = function (id, name, description, type, isGateway) {
        return this.http.put("/api/device/model", {
            'id': id,
            'name': name,
            'description': description,
            'type': type,
            'isGateway': isGateway
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 设备型号/api/position?id=1
    ProductService.prototype.delModel = function (id) {
        return this.http.delete("/api/device/model?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    ProductService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], ProductService);
    return ProductService;
}());



/***/ }),

/***/ "./src/app/service/right.service.ts":
/*!******************************************!*\
  !*** ./src/app/service/right.service.ts ***!
  \******************************************/
/*! exports provided: RightService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RightService", function() { return RightService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var RightService = /** @class */ (function () {
    function RightService(http) {
        this.http = http;
    }
    // 获取所有角色 - 分页
    RightService.prototype.getAllRole = function (queryStr, page, pageSize) {
        return this.http.get("/security/role?queryStr=" + queryStr + "&page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            return res;
        }));
    };
    // 新增角色
    RightService.prototype.addNewRole = function (name) {
        return this.http.post('/security/role', {
            'name': name
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            return res;
        }));
    };
    // 修改角色
    RightService.prototype.updateRole = function (id, name) {
        return this.http.put('/security/role', {
            'id': id,
            'name': name
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 删除用户
    RightService.prototype.deleteRole = function (id) {
        return this.http.delete("/security/role?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    RightService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], RightService);
    return RightService;
}());



/***/ }),

/***/ "./src/app/service/servers/baiduApi.ts":
/*!*********************************************!*\
  !*** ./src/app/service/servers/baiduApi.ts ***!
  \*********************************************/
/*! exports provided: BeiduAPIService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BeiduAPIService", function() { return BeiduAPIService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var BeiduAPIService = /** @class */ (function () {
    // private headers: any;
    function BeiduAPIService(http) {
        // this.headers = new Headers();
        this.http = http;
        // this.headers.append("Access-Control-Allow-Origin", "http://172.18.1.133:10001");
    }
    // 'http://api.map.baidu.com/location/ip?ip=&ak=MMOuEtslFs2yppwcggMudtBUtk8CbqnA&coor=bd09ll'
    BeiduAPIService.prototype.getLocation = function (url) {
        return this.http.get(url)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            if (res.status === 200) {
                var data = res.json();
                return data;
            }
            else if (res.status === 202) {
                return res.json().code.toString();
            }
        }));
    };
    BeiduAPIService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_http__WEBPACK_IMPORTED_MODULE_1__["Http"]])
    ], BeiduAPIService);
    return BeiduAPIService;
}());



/***/ }),

/***/ "./src/app/service/servers/baiduMap.ts":
/*!*********************************************!*\
  !*** ./src/app/service/servers/baiduMap.ts ***!
  \*********************************************/
/*! exports provided: BeiduMAPService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BeiduMAPService", function() { return BeiduMAPService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var BeiduMAPService = /** @class */ (function () {
    // private headers: any;
    function BeiduMAPService(http) {
        // this.headers = new Headers();
        this.http = http;
        // this.headers.append("Access-Control-Allow-Origin", "http://172.18.1.133:10001");
    }
    // 'http://api.map.baidu.com/location/ip?ip=&ak=MMOuEtslFs2yppwcggMudtBUtk8CbqnA&coor=bd09ll'
    BeiduMAPService.prototype.getURL = function (url) {
        return this.http.get(url)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            if (res.status === 200) {
                var data = res.json();
                return data;
            }
            else if (res.status === 202) {
                return res.json().code.toString();
            }
        }));
    };
    BeiduMAPService.prototype.postURL = function (url, body) {
        return this.http.post(url, body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            if (res.status === 200) {
                var data = res.json();
                return data;
            }
            else if (res.status === 202) {
                return res.json().code.toString();
            }
        }));
    };
    // 随机向地图添加25个标注
    BeiduMAPService.prototype.addPoint = function (baidumap, fun) {
        var bounds = baidumap.getBounds();
        var sw = bounds.getSouthWest();
        var ne = bounds.getNorthEast();
        var lngSpan = Math.abs(sw.lng - ne.lng);
        var latSpan = Math.abs(ne.lat - sw.lat);
        for (var i = 0; i < 25; i++) {
            var point = new BMap.Point(sw.lng + lngSpan * (Math.random() * 0.7), ne.lat - latSpan * (Math.random() * 0.7));
            // this.addMarker(point);
            fun(point);
        }
    };
    // 浏览器定位
    BeiduMAPService.prototype.addGeolocation = function (baidumap) {
        var geolocation = new BMap.Geolocation();
        geolocation.getCurrentPosition(function (r) {
            if (this.getStatus() === BMAP_STATUS_SUCCESS) {
                // fun(r);
                var mk = new BMap.Marker(r.point);
                baidumap.addOverlay(mk);
                // baidumap.panTo(r.point);
                // console.log('你的位置');
                // console.log(r.point);
                // alert('您的位置：' + r.point.lng + ',' + r.point.lat);
                // that.addInfoWindow(mk);
                return r.point;
            }
            else {
                alert('failed' + this.getStatus());
            }
        }, { enableHighAccuracy: true });
        // 关于状态码
        // BMAP_STATUS_SUCCESS	检索成功。对应数值“0”。
        // BMAP_STATUS_CITY_LIST	城市列表。对应数值“1”。
        // BMAP_STATUS_UNKNOWN_LOCATION	位置结果未知。对应数值“2”。
        // BMAP_STATUS_UNKNOWN_ROUTE	导航结果未知。对应数值“3”。
        // BMAP_STATUS_INVALID_KEY	非法密钥。对应数值“4”。
        // BMAP_STATUS_INVALID_REQUEST	非法请求。对应数值“5”。
        // BMAP_STATUS_PERMISSION_DENIED	没有权限。对应数值“6”。(自 1.1 新增)
        // BMAP_STATUS_SERVICE_UNAVAILABLE	服务不可用。对应数值“7”。(自 1.1 新增)
        // BMAP_STATUS_TIMEOUT	超时。对应数值“8”。(自 1.1 新增)
    };
    // 编写自定义函数,创建标注
    BeiduMAPService.prototype.addMarker = function (baidumap, point) {
        console.log(baidumap);
        var marker = new BMap.Marker(point);
        baidumap.addOverlay(marker);
        // map.panTo(point);
        // this.addInfoWindow(marker);
    };
    // 获取marker的位置
    BeiduMAPService.prototype.getAttr = function (marker) {
        var p = marker.getPosition(); // 获取marker的位置
        alert('marker的位置是' + p.lng + ',' + p.lat);
    };
    // 提供的信息窗口
    BeiduMAPService.prototype.addInfoWindow = function (baidumap, marker) {
        var content = '<div style="margin:0;line-height:20px;padding:2px;">' +
            '<img src="../img/baidu.jpg" alt="" style="float:right;zoom:1;overflow:hidden;width:100px;height:100px;margin-left:3px;"/>' +
            '地址：北京市海淀区上地十街10号<br/>电话：(010)59928888<br/>简介：百度大厦位于北京市海淀区西二旗地铁站附近，为百度公司综合研发及办公总部。' +
            '</div>';
        var infoWindow = new BMap.InfoWindow(content); // 创建信息窗口对象
        marker.addEventListener('click', function () {
            baidumap.openInfoWindow(infoWindow); // 开启信息窗口
        });
    };
    // 创建检索信息窗口对象
    BeiduMAPService.prototype.addSearchInfoWindow = function (baidumap, marker) {
        // 提供的信息窗口
        var content = '<div style="margin:0;line-height:20px;padding:2px;">' +
            '<img src="../img/baidu.jpg" alt="" style="float:right;zoom:1;overflow:hidden;width:100px;height:100px;margin-left:3px;"/>' +
            '地址：北京市海淀区上地十街10号<br/>电话：(010)59928888<br/>简介：百度大厦位于北京市海淀区西二旗地铁站附近，为百度公司综合研发及办公总部。' +
            '</div>';
        // //创建检索信息窗口对象
        var searchInfoWindow = null;
        searchInfoWindow = new BMapLib.SearchInfoWindow(baidumap);
        searchInfoWindow = new BMapLib.SearchInfoWindow(baidumap, content, {
            title: '百度大厦',
            width: 290,
            height: 105,
            panel: 'panel',
            enableAutoPan: true,
            searchTypes: [
                BMAPLIB_TAB_SEARCH,
                BMAPLIB_TAB_TO_HERE,
                BMAPLIB_TAB_FROM_HERE // 从这里出发
            ]
        });
        marker.addEventListener('click', function () {
            searchInfoWindow.open(marker);
        });
    };
    // 根据关键字本地搜索
    BeiduMAPService.prototype.addLocalSearch = function (baidumap) {
        var local = new BMap.LocalSearch(baidumap, {
            renderOptions: { map: baidumap }
        });
        local.search('景点');
    };
    // 根据多关键字本地搜索
    BeiduMAPService.prototype.addSearchInBounds = function (baidumap) {
        var myKeys = ['酒店', '加油站'];
        var local = new BMap.LocalSearch(baidumap, {
            renderOptions: { map: baidumap, panel: 'r-result' },
            pageCapacity: 5
        });
        local.searchInBounds(myKeys, baidumap.getBounds());
    };
    BeiduMAPService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_http__WEBPACK_IMPORTED_MODULE_1__["Http"]])
    ], BeiduMAPService);
    return BeiduMAPService;
}());



/***/ }),

/***/ "./src/app/service/service.module.ts":
/*!*******************************************!*\
  !*** ./src/app/service/service.module.ts ***!
  \*******************************************/
/*! exports provided: ServiceModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceModule", function() { return ServiceModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _full_screen_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./full-screen.service */ "./src/app/service/full-screen.service.ts");
/* harmony import */ var _dialog_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dialog.service */ "./src/app/service/dialog.service.ts");
/* harmony import */ var _servers_baiduApi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./servers/baiduApi */ "./src/app/service/servers/baiduApi.ts");
/* harmony import */ var _servers_baiduMap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./servers/baiduMap */ "./src/app/service/servers/baiduMap.ts");
/* harmony import */ var _monitor_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./monitor.service */ "./src/app/service/monitor.service.ts");
/* harmony import */ var _mess_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mess.service */ "./src/app/service/mess.service.ts");
/* harmony import */ var _url_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./url.service */ "./src/app/service/url.service.ts");
/* harmony import */ var _communicate_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./communicate.service */ "./src/app/service/communicate.service.ts");
/* harmony import */ var _video_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./video.service */ "./src/app/service/video.service.ts");
/* harmony import */ var _light_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./light.service */ "./src/app/service/light.service.ts");
/* harmony import */ var _cover_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cover.service */ "./src/app/service/cover.service.ts");
/* harmony import */ var _camera_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./camera.service */ "./src/app/service/camera.service.ts");
/* harmony import */ var _airmonitor_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./airmonitor.service */ "./src/app/service/airmonitor.service.ts");
/* harmony import */ var _strategy_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./strategy.service */ "./src/app/service/strategy.service.ts");
/* harmony import */ var _device_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./device.service */ "./src/app/service/device.service.ts");
/* harmony import */ var _position_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./position.service */ "./src/app/service/position.service.ts");
/* harmony import */ var _product_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./product.service */ "./src/app/service/product.service.ts");
/* harmony import */ var _led_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./led.service */ "./src/app/service/led.service.ts");
/* harmony import */ var _admin_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./admin.service */ "./src/app/service/admin.service.ts");
/* harmony import */ var _right_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./right.service */ "./src/app/service/right.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






















var ServiceModule = /** @class */ (function () {
    function ServiceModule() {
    }
    ServiceModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]
            ],
            declarations: [],
            providers: [_full_screen_service__WEBPACK_IMPORTED_MODULE_2__["FullScreenService"], _servers_baiduApi__WEBPACK_IMPORTED_MODULE_4__["BeiduAPIService"], _servers_baiduMap__WEBPACK_IMPORTED_MODULE_5__["BeiduMAPService"], _monitor_service__WEBPACK_IMPORTED_MODULE_6__["MonitorService"],
                _light_service__WEBPACK_IMPORTED_MODULE_11__["LightService"], _cover_service__WEBPACK_IMPORTED_MODULE_12__["CoverService"], _airmonitor_service__WEBPACK_IMPORTED_MODULE_14__["AirmonitorService"], _camera_service__WEBPACK_IMPORTED_MODULE_13__["CameraService"], _strategy_service__WEBPACK_IMPORTED_MODULE_15__["StrategyService"],
                _device_service__WEBPACK_IMPORTED_MODULE_16__["DeviceService"], _position_service__WEBPACK_IMPORTED_MODULE_17__["PositionService"], _product_service__WEBPACK_IMPORTED_MODULE_18__["ProductService"], _led_service__WEBPACK_IMPORTED_MODULE_19__["LedService"], _dialog_service__WEBPACK_IMPORTED_MODULE_3__["DialogService"], _admin_service__WEBPACK_IMPORTED_MODULE_20__["AdminService"], _right_service__WEBPACK_IMPORTED_MODULE_21__["RightService"],
                _mess_service__WEBPACK_IMPORTED_MODULE_7__["MessService"], _url_service__WEBPACK_IMPORTED_MODULE_8__["UrlService"], _communicate_service__WEBPACK_IMPORTED_MODULE_9__["CommunicateService"], _video_service__WEBPACK_IMPORTED_MODULE_10__["VideoService"],]
        })
    ], ServiceModule);
    return ServiceModule;
}());



/***/ }),

/***/ "./src/app/service/strategy.service.ts":
/*!*********************************************!*\
  !*** ./src/app/service/strategy.service.ts ***!
  \*********************************************/
/*! exports provided: StrategyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StrategyService", function() { return StrategyService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import { Http, Headers, Response } from '@angular/http';

var StrategyService = /** @class */ (function () {
    function StrategyService(http) {
        this.http = http;
    }
    // 获取策略表
    StrategyService.prototype.getStrategy = function () {
        return this.http.get("/api/streetlight/rule")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 新增策略
    StrategyService.prototype.addStrategy = function (name) {
        return this.http.post("/api/streetlight/rule", {
            'name': name
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 修改策略
    StrategyService.prototype.updateStrategy = function (id, name) {
        return this.http.put("/api/streetlight/rule", {
            'id': id,
            'name': name
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 删除策略
    StrategyService.prototype.delStrategy = function (id) {
        return this.http.delete("/api/streetlight/rule?id=" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 获取指定策略的规则
    StrategyService.prototype.getRules = function (ruleId) {
        return this.http.get("/api/streetlight/rule/" + ruleId)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 新增策略的日期规则
    StrategyService.prototype.addRules = function (ruleId, start, end, workdayRules, holidayRules) {
        return this.http.post("/api/streetlight/rule/" + ruleId, {
            'start': start,
            'end': end,
            'holidayRules': holidayRules,
            'workdayRules': workdayRules
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 更新策略的日期规则
    StrategyService.prototype.updataRules = function (ruleId, ruleDateId, start, end, workdayRules, holidayRules) {
        return this.http.put("/api/streetlight/rule/" + ruleId, {
            'start': start,
            'end': end,
            'id': ruleDateId,
            'holidayRules': holidayRules,
            'workdayRules': workdayRules
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 删除策略的日期规则
    StrategyService.prototype.delRule = function (ruleId, ruleDateId) {
        return this.http.delete("/api/streetlight/rule/" + ruleId + "?ruleDateId=" + ruleDateId)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 策略范围
    // 城市列表
    StrategyService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取指定安装在区域内的路灯
    StrategyService.prototype.getRegionLights = function (regionId, page, pageSize) {
        return this.http.get("/api/streetlight/region/" + regionId + "?page=" + page + "&pageSize=" + pageSize)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 获取策略覆盖区域
    StrategyService.prototype.getRegion = function (ruleId) {
        return this.http.get("/api/streetlight/rule/" + ruleId + "/region")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }));
    };
    // 设置策略覆盖区域
    // [
    //     {
    //         'allDevices': true,
    //         'deviceIds': [
    //             0
    //         ],
    //         'regionId': 'string'
    //     }
    // ]
    StrategyService.prototype.setRegion = function (ruleId, body) {
        return this.http.put("/api/streetlight/rule/" + ruleId + "/region", body)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = { status: 200 };
            return data;
        }));
    };
    // 获取策略覆盖区域
    StrategyService.prototype.getZtreeRegion = function (ruleId) {
        return this.http.get("/api/streetlight/rule/" + ruleId + "/region")
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var data = res.json();
            return data;
        }));
    };
    StrategyService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
    ], StrategyService);
    return StrategyService;
}());



/***/ }),

/***/ "./src/app/service/url.service.ts":
/*!****************************************!*\
  !*** ./src/app/service/url.service.ts ***!
  \****************************************/
/*! exports provided: UrlService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlService", function() { return UrlService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _windowserver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../windowserver */ "./src/app/windowserver.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var UrlService = /** @class */ (function () {
    function UrlService(winRef) {
        this.winRef = winRef;
    }
    // 设置url中参数值
    UrlService.prototype.setURLParam = function (param, value) {
        var query = location.search.substring(1);
        var p = new RegExp('(^|)' + param + '=([^&]*)(|$)');
        if (p.test(query)) {
            var firstParam = query.split(param)[0];
            var secondParam = query.split(param)[1];
            if (secondParam.indexOf('&') > -1) {
                var lastPraam = secondParam.substring(secondParam.indexOf('&') + 1);
                return '?' + firstParam + param + '=' + value + '&' + lastPraam;
            }
            else {
                if (firstParam) {
                    return '?' + firstParam + param + '=' + value;
                }
                else {
                    return '?' + param + '=' + value;
                }
            }
        }
        else {
            if (query === '') {
                return '?' + param + '=' + value;
            }
            else {
                return '?' + query + '&' + param + '=' + value;
            }
        }
    };
    // 在当前浏览器url添加参数
    UrlService.prototype.addURLParam = function (key, value) {
        var url = window.location.href; // 获取当前url
        // let href;
        if (url.indexOf('?') > 0) {
            url = url.split('?')[0];
        }
        window.location.href = url + this.setURLParam(key, value);
        // href = url + this.setURLParam(key, value);
        // return href;
    };
    // 打开新的窗口并url添加参数
    UrlService.prototype.addURLParamAddOpen = function (key, value) {
        var url = window.location.href; // 获取当前url
        var href;
        if (url.indexOf('?') > 0) {
            url = url.split('?')[0];
        }
        // window.location.href = url + this.setParam(key, value);
        href = url + this.setURLParam(key, value);
        // return href;
        window.open(href, '_blank');
    };
    // 获取参数
    UrlService.prototype.getURLParam = function (paraName) {
        var url = document.location.toString();
        var arrObj = url.split('?');
        if (arrObj.length > 1) {
            var arrPara = arrObj[1].split('&');
            var arr = void 0;
            for (var i = 0; i < arrPara.length; i++) {
                arr = arrPara[i].split('=');
                if (arr != null && arr[0] === paraName) {
                    return arr[1];
                }
            }
            return '';
        }
        else {
            return '';
        }
    };
    UrlService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_windowserver__WEBPACK_IMPORTED_MODULE_1__["WindowRef"]])
    ], UrlService);
    return UrlService;
}());



/***/ }),

/***/ "./src/app/service/video.service.ts":
/*!******************************************!*\
  !*** ./src/app/service/video.service.ts ***!
  \******************************************/
/*! exports provided: VideoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoService", function() { return VideoService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var rxjs___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/ */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _data_calamity_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/calamity-list */ "./src/app/data/calamity-list.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var VideoService = /** @class */ (function () {
    function VideoService(http) {
        this.http = http;
    }
    // 城市列表
    VideoService.prototype.getZoneDefault = function () {
        // return Observable.of(ARTICLESTYPE);
        return this.http.get('/api/zone/default')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    VideoService.prototype.getCalamity = function () {
        var _this = this;
        var list = _data_calamity_list__WEBPACK_IMPORTED_MODULE_4__["CALAMITYLIST"].light_list;
        list.map(function (item, i) {
            var val = _this.getRandomIntInclusive(0, 10);
            // console.log(val);
            if (val < 5) {
                list[i].error = 0;
            }
            else {
                list[i].error = 1;
            }
        });
        return Object(rxjs___WEBPACK_IMPORTED_MODULE_2__["of"])(list);
    };
    // 得到一个两数之间的随机整数，包括两个数在内
    VideoService.prototype.getRandomIntInclusive = function (min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min; // The maximum is inclusive and the minimum is inclusive
    };
    VideoService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_http__WEBPACK_IMPORTED_MODULE_1__["Http"]])
    ], VideoService);
    return VideoService;
}());



/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _sq_modal_sq_modal_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sq-modal/sq-modal.component */ "./src/app/shared/sq-modal/sq-modal.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var SharedModule = /** @class */ (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]
            ],
            declarations: [_sq_modal_sq_modal_component__WEBPACK_IMPORTED_MODULE_2__["SqModalComponent"]],
            exports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _sq_modal_sq_modal_component__WEBPACK_IMPORTED_MODULE_2__["SqModalComponent"]
            ]
        })
    ], SharedModule);
    return SharedModule;
}());



/***/ }),

/***/ "./src/app/shared/sq-modal/sq-modal.component.html":
/*!*********************************************************!*\
  !*** ./src/app/shared/sq-modal/sq-modal.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- 删除工作日控制 -->\n<div class=\"modal-header\">\n  <font class=\"modal-title\">删除</font>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"click('cancel')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div>\n    <div>\n      确定要删除该条记录吗？\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"click('ok')\">确定</button>\n  <button type=\"button\" class=\"btn btn-outline-metal\" (click)=\"click('cancel')\">取消</button>\n</div>\n\n"

/***/ }),

/***/ "./src/app/shared/sq-modal/sq-modal.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/shared/sq-modal/sq-modal.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/shared/sq-modal/sq-modal.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/shared/sq-modal/sq-modal.component.ts ***!
  \*******************************************************/
/*! exports provided: SqModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SqModalComponent", function() { return SqModalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SqModalComponent = /** @class */ (function () {
    function SqModalComponent() {
        this.output = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    SqModalComponent.prototype.click = function (mes) {
        this.output.emit(mes);
    };
    SqModalComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])() // 父组件传递值
        ,
        __metadata("design:type", Object)
    ], SqModalComponent.prototype, "input", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])() // 事件传播 子-> 父
        ,
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], SqModalComponent.prototype, "output", void 0);
    SqModalComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-sq-modal',
            template: __webpack_require__(/*! ./sq-modal.component.html */ "./src/app/shared/sq-modal/sq-modal.component.html"),
            styles: [__webpack_require__(/*! ./sq-modal.component.scss */ "./src/app/shared/sq-modal/sq-modal.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], SqModalComponent);
    return SqModalComponent;
}());



/***/ }),

/***/ "./src/app/windowserver.ts":
/*!*********************************!*\
  !*** ./src/app/windowserver.ts ***!
  \*********************************/
/*! exports provided: WindowRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowRef", function() { return WindowRef; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

function _window() {
    // return the native window obj
    return window;
}
var WindowRef = /** @class */ (function () {
    function WindowRef() {
    }
    Object.defineProperty(WindowRef.prototype, "nativeWindow", {
        // public window = window;
        get: function () {
            return _window();
        },
        enumerable: true,
        configurable: true
    });
    WindowRef = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], WindowRef);
    return WindowRef;
}());



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\d0109\smart-city-platform\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map