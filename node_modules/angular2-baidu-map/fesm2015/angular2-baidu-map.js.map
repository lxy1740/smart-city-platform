{"version":3,"file":"angular2-baidu-map.js.map","sources":["ng://angular2-baidu-map/helpers/object.ts","ng://angular2-baidu-map/helpers/transformer.ts","ng://angular2-baidu-map/helpers/validate.ts","ng://angular2-baidu-map/providers/scriptLoader.ts","ng://angular2-baidu-map/types/Map.ts","ng://angular2-baidu-map/providers/mapService.ts","ng://angular2-baidu-map/components/control.component.ts","ng://angular2-baidu-map/components/map.component.ts","ng://angular2-baidu-map/components/marker.component.ts","ng://angular2-baidu-map/components/polyline.component.ts","ng://angular2-baidu-map/components/circle.component.ts","ng://angular2-baidu-map/components/polygon.component.ts","ng://angular2-baidu-map/components/heatmap.component.ts","ng://angular2-baidu-map/components/tilelayer.component.ts","ng://angular2-baidu-map/components/trafficlayer.component.ts","ng://angular2-baidu-map/components/markerClusterer.component.ts","ng://angular2-baidu-map/types/Control.ts","ng://angular2-baidu-map/index.ts"],"sourcesContent":["export function isNull(obj: any) {\n  return obj === null || obj === undefined\n}\n\nexport function isUndefined(obj: any) {\n  return obj === undefined\n}\n\nexport function isBoolean(obj: any): obj is boolean {\n  return Object.prototype.toString.call(obj) === '[object Boolean]'\n}\n\nexport function isFunction(obj: any): obj is boolean {\n  return Object.prototype.toString.call(obj) === '[object Function]'\n}\n\nexport function isString(obj: any): obj is boolean {\n  return Object.prototype.toString.call(obj) === '[object String]'\n}\n\nexport function omit<T>(obj: T, ...keys: Array<string>): T {\n  const rawKeys = Object.keys(obj)\n  const finalKeys = rawKeys.filter(k => keys.indexOf(k) < 0)\n  return finalKeys.reduce(\n    (p, v) => {\n      p[v] = obj[v]\n      return p\n    },\n    <T>{}\n  )\n}\n","import {\n  BGeolocationControlOptions,\n  BMapTypeControlOptions,\n  BNavigationControlOptions,\n  BOverviewMapControlOptions,\n  BScaleControlOptions,\n  GeolocationControlOptions,\n  MapTypeControlOptions,\n  NavigationControlOptions,\n  OverviewMapControlOptions,\n  ScaleControlOptions\n} from '../types/Control'\nimport { BIcon, IconOptions } from '../types/Icon'\nimport { BMarkerOptions, MarkerOptions } from '../types/Marker'\nimport { BPoint, Point } from '../types/Point'\nimport { BSize, Size } from '../types/Size'\n\nimport { isNull } from './object'\nimport { BMarkerClustererOptions, MarkerClustererOptions } from '../types/MarkerClusterer'\nimport { TextIconStyle, BTextIconStyle } from '../types/TextIconOverlay'\n\nexport function toPoint(opts: Point): BPoint {\n  if (!opts) {\n    return new window.BMap.Point()\n  }\n  return new window.BMap.Point(opts.lng, opts.lat)\n}\n\nexport function toPoints(opts: Array<Point>): Array<BPoint> {\n  if (!opts) {\n    return []\n  }\n  return opts.map(p => {\n    return new window.BMap.Point(p.lng, p.lat)\n  })\n}\n\nexport function toSize(opts: Size): BSize {\n  if (!opts) {\n    return new window.BMap.Size()\n  }\n  return new window.BMap.Size(opts.width, opts.height)\n}\n\nexport function toIcon(url: string, size: Size, options: IconOptions): BIcon {\n  if (!size && !options) {\n    return new window.BMap.Icon(url)\n  }\n  if (!size) {\n    return new window.BMap.Icon(url, toSize(size))\n  }\n  const iconOptions: any = {\n    anchor: toSize(options.anchor),\n    imageOffset: toSize(options.imageOffset),\n    infoWindowAnchor: toSize(options.infoWindowAnchor),\n    printImageUrl: options.printImageUrl\n  }\n  const icon = new window.BMap.Icon(url, toSize(size), iconOptions)\n  if (options.imageSize) {\n    icon.setImageSize(toSize(options.imageSize))\n  }\n  return icon\n}\n\nexport function toMarkerOptions(options: MarkerOptions): BMarkerOptions {\n  const opts: BMarkerOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (options.offset) {\n    opts.offset = toSize(options.offset)\n  }\n\n  if (options.icon) {\n    opts.icon = toIcon(options.icon.imageUrl, options.icon.size, options.icon)\n  }\n  if (!isNull(options.enableMassClear)) {\n    opts.enableMassClear = options.enableMassClear\n  }\n  if (!isNull(options.enableDragging)) {\n    opts.enableDragging = options.enableDragging\n  }\n  if (!isNull(options.enableClicking)) {\n    opts.enableClicking = options.enableClicking\n  }\n  if (!isNull(options.raiseOnDrag)) {\n    opts.raiseOnDrag = options.raiseOnDrag\n  }\n  if (!isNull(options.draggingCursor)) {\n    opts.draggingCursor = options.draggingCursor\n  }\n  if (!isNull(options.rotation)) {\n    opts.rotation = options.rotation\n  }\n  if (!isNull(options.title)) {\n    opts.title = options.title\n  }\n  if (!isNull(options.shadow)) {\n    opts.shadow = toIcon(options.shadow.imageUrl, options.shadow.size, options.shadow)\n  }\n\n  return opts\n}\n\nexport function toNavigationControlOptions(options: NavigationControlOptions): BNavigationControlOptions {\n  const opts: BNavigationControlOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (!isNull(options.anchor)) {\n    opts.anchor = options.anchor\n  }\n  if (!isNull(options.enableGeolocation)) {\n    opts.enableGeolocation = options.enableGeolocation\n  }\n  if (!isNull(options.offset)) {\n    opts.offset = toSize(options.offset)\n  }\n  if (!isNull(options.showZoomInfo)) {\n    opts.showZoomInfo = options.showZoomInfo\n  }\n\n  if (!isNull(options.type)) {\n    opts.type = options.type\n  }\n  return opts\n}\n\nexport function toOverviewMapControlOptions(options: OverviewMapControlOptions): BOverviewMapControlOptions {\n  const opts: BOverviewMapControlOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (!isNull(options.anchor)) {\n    opts.anchor = options.anchor\n  }\n  if (!isNull(options.isOpen)) {\n    opts.isOpen = options.isOpen\n  }\n  if (!isNull(options.offset)) {\n    opts.offset = toSize(options.offset)\n  }\n  if (!isNull(options.size)) {\n    opts.size = toSize(options.size)\n  }\n  return opts\n}\n\nexport function toScaleControlOptions(options: ScaleControlOptions): BScaleControlOptions {\n  const opts: BScaleControlOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (!isNull(options.anchor)) {\n    opts.anchor = options.anchor\n  }\n  if (!isNull(options.offset)) {\n    opts.offset = toSize(options.offset)\n  }\n  return opts\n}\n\nexport function toMapTypeControlOptions(options: MapTypeControlOptions): BMapTypeControlOptions {\n  const opts: BMapTypeControlOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (!isNull(options.type)) {\n    opts.type = options.type\n  }\n  return opts\n}\nexport function toGeolocationOptions(options: GeolocationControlOptions): BGeolocationControlOptions {\n  const opts: BGeolocationControlOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (!isNull(options.anchor)) {\n    opts.anchor = options.anchor\n  }\n  if (!isNull(options.offset)) {\n    opts.offset = toSize(options.offset)\n  }\n  if (!isNull(options.enableAutoLocation)) {\n    opts.enableAutoLocation = options.enableAutoLocation\n  }\n  if (!isNull(options.locationIcon)) {\n    opts.locationIcon = toIcon(options.locationIcon.imageUrl, options.locationIcon.size, options.locationIcon)\n  }\n  if (!isNull(options.showAddressBar)) {\n    opts.showAddressBar = options.showAddressBar\n  }\n  return opts\n}\n\nexport function toTextIconStyle(style: TextIconStyle): BTextIconStyle {\n  const realStyle: BTextIconStyle = {\n    url: style.url,\n    size: toSize(style.size)\n  }\n  if (style.anchor) {\n    realStyle.anchor = toSize(style.anchor)\n  }\n  if (style.offset) {\n    realStyle.offset = toSize(style.offset)\n  }\n  if (!isNull(style.textSize)) {\n    realStyle.textSize = style.textSize\n  }\n  if (!isNull(style.textColor)) {\n    realStyle.textColor = style.textColor\n  }\n\n  return realStyle\n}\n\nexport function toMarkerClustererOptions(options: MarkerClustererOptions): BMarkerClustererOptions {\n  const opts: BMarkerClustererOptions = {}\n\n  if (!options) {\n    return opts\n  }\n\n  if (options.markers) {\n    opts.markers = options.markers.map(\n      m => new window.BMap.Marker(toPoint(m.point), toMarkerOptions(m.options))\n    )\n  }\n\n  if (!isNull(options.girdSize)) {\n    opts.girdSize = options.girdSize\n  }\n  if (!isNull(options.maxZoom)) {\n    opts.maxZoom = options.maxZoom\n  }\n  if (!isNull(options.minClusterSize)) {\n    opts.minClusterSize = options.minClusterSize\n  }\n  if (!isNull(options.isAverangeCenter)) {\n    opts.isAverangeCenter = options.isAverangeCenter\n  }\n  if (options.styles) {\n    opts.styles = options.styles.filter(s => s).map(s => toTextIconStyle(s))\n  }\n\n  return opts\n}\n","import { isNull } from './object'\n\nexport function nullCheck(obj: any, msg: string) {\n  if (isNull(obj)) {\n    throw new Error(msg)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { isString } from '../helpers/object'\nimport { ScriptType } from '../types/Script'\n\nexport enum LOADING_STATE {\n  NON = 0,\n  LOADED = 1,\n  LOADING = 2\n}\n\nexport class ScriptLoaderConfig {\n  public ak: string = ''\n}\n\nwindow._scriptLoadState = {}\nwindow._loadingCallbacks = {}\n\n@Injectable()\nexport class ScriptLoader {\n  public load(url: string | ScriptType, isMain: boolean = false, cb: () => void): void {\n    const scriptKey = isString(url) ? url : url['key']\n    const scriptUrls = isString(url) ? [url] : url['scripts']\n\n    if (window._scriptLoadState[scriptKey] === LOADING_STATE.LOADED) {\n      if (isMain) {\n        switchDisplay('baidu-map .baidu-map-instance', 'block')\n        switchDisplay('baidu-map .baidu-map-offline', 'none')\n      }\n      return cb()\n    }\n    if (!window._loadingCallbacks[scriptKey]) {\n      window._loadingCallbacks[scriptKey] = []\n    }\n    if (window._scriptLoadState[scriptKey] === LOADING_STATE.LOADING) {\n      window._loadingCallbacks[scriptKey].push(cb)\n      return\n    }\n    window._scriptLoadState[scriptKey] = LOADING_STATE.LOADING\n    window._loadingCallbacks[scriptKey].push(cb)\n\n    if (isMain) {\n      window.baidumapinit = () => {\n        window._scriptLoadState[scriptKey] = LOADING_STATE.LOADED\n        switchDisplay('baidu-map .baidu-map-instance', 'block')\n        switchDisplay('baidu-map .baidu-map-offline', 'none')\n        window._loadingCallbacks[scriptKey].forEach((c: () => void) => {\n          c()\n        })\n      }\n    }\n    appendScriptsTag(scriptKey, scriptUrls, isMain)\n  }\n}\n\nfunction appendScriptsTag(scriptKey: string, urls: Array<string>, isMain: boolean) {\n  const leftObj = {\n    count: urls.length\n  }\n  urls.forEach(url => {\n    appendScriptTag(scriptKey, url, isMain, leftObj)\n  })\n}\n\nfunction appendScriptTag(scriptKey: string, url: string, isMain: boolean, leftObj: { count: number }) {\n  const script = document.createElement('script')\n  script.type = 'text/javascript'\n  script.src = url\n  script.onerror = () => {\n    if (isMain) {\n      switchDisplay('baidu-map .baidu-map-offline', 'block')\n      switchDisplay('baidu-map .baidu-map-instance', 'none')\n    }\n    document.body.removeChild(script)\n\n    setTimeout(() => {\n      appendScriptTag(scriptKey, url, isMain, leftObj)\n    }, 30000)\n  }\n\n  if (!isMain) {\n    script.onload = () => {\n      leftObj.count--\n      if (leftObj.count) {\n        return\n      }\n      window._scriptLoadState[scriptKey] = LOADING_STATE.LOADED\n      window._loadingCallbacks[scriptKey].forEach((c: () => void) => {\n        c()\n      })\n    }\n  }\n  document.body.appendChild(script)\n}\n\nfunction switchDisplay(selector: string, state: string) {\n  Array.prototype.slice.call(document.querySelectorAll(selector)).forEach((node: HTMLElement) => {\n    node.style.display = state\n  })\n}\n","import { BBounds } from './Bounds'\nimport { BControl } from './Control'\nimport { Overlay } from './Overlay'\nimport { BPoint, Point } from './Point'\nimport { BTileLayer } from './TileLayer'\nimport { isFunction } from '../helpers/object'\nimport { BSize } from './Size'\nimport { BMapType } from './MapType'\n\nexport interface BMapConstructor {\n  new (el: HTMLElement | string, opts: MapOptions): BMapInstance\n}\n\nexport interface BMapInstance {\n  disableDragging(): void\n  enableDragging(): void\n\n  disableScrollWheelZoom(): void\n  enableScrollWheelZoom(): void\n\n  disableDoubleClickZoom(): void\n  enableDoubleClickZoom(): void\n\n  disableKeyboard(): void\n  enableKeyboard(): void\n\n  disableInertialDragging(): void\n  enableInertialDragging(): void\n\n  disableContinuousZoom(): void\n  enableContinuousZoom(): void\n\n  disablePinchToZoom(): void\n  enablePinchToZoom(): void\n\n  disableAutoResize(): void\n  enableAutoResize(): void\n\n  addControl(control: BControl): void\n  removeControl(control: BControl): void\n\n  addOverlay(control: Overlay): void\n  removeOverlay(control: Overlay): void\n  clearOverlays(): void\n\n  addTileLayer(tileLayer: BTileLayer): void\n  removeTileLayer(tileLayer: BTileLayer): void\n\n  setDefaultCursor(cursor: string): void\n  getDefaultCursor(): string\n\n  setDraggingCursor(draggingCursor: string): void\n  getDraggingCursor(): string\n\n  setMinZoom(zoom: number): void\n  setMaxZoom(zoom: number): void\n\n  getBounds(): BBounds\n\n  setCenter(center: BPoint | string): void\n  getCenter(): BPoint\n\n  getDistance(start: BPoint, end: BPoint): number\n\n  setCurrentCity(city: string): void\n  centerAndZoom(center: BPoint, zoom: number): void\n\n  setMapType(mapType: BMapType | MapTypeEnum): void\n  getMapType(): BMapType\n\n  getSize(): BSize\n\n  setZoom(zoom: number): void\n  getZoom(): number\n\n  panTo(center: BPoint, opts: BPanOptions): void\n\n  panBy(x: number, y: number, opts: BPanOptions): void\n\n  reset(): void\n\n  highResolutionEnabled(): boolean\n\n  zoomIn(): void\n  zoomOut(): void\n\n  getContainer(): HTMLElement\n\n  closeInfoWindow(): void\n\n  addEventListener(event: string, handler: (e: any) => void): void\n  removeEventListener(event: string, handler: () => void): void\n}\n\nexport interface MapOptions {\n  minZoom?: number\n  maxZoom?: number\n  enableHighResolution?: boolean\n  enableAutoResize?: boolean\n  enableMapClick?: boolean\n\n  disableDragging?: boolean\n  enableScrollWheelZoom?: boolean\n  disableDoubleClickZoom?: boolean\n  enableKeyboard?: boolean\n  enableInertialDragging?: boolean\n  enableContinuousZoom?: boolean\n  disablePinchToZoom?: boolean\n\n  cursor?: string\n  draggingCursor?: string\n  currentCity?: string\n  centerAndZoom?: CenterAndZoom\n\n  mapType?: BMapType | MapTypeEnum\n}\n\nexport interface CenterAndZoom extends Point {\n  zoom?: number\n}\n\nexport interface BPanOptions {\n  noAnimation: boolean\n}\n\nexport enum MapTypeEnum {\n  BMAP_NORMAL_MAP = 'BMAP_NORMAL_MAP',\n  BMAP_PERSPECTIVE_MAP = 'BMAP_PERSPECTIVE_MAP',\n  BMAP_SATELLITE_MAP = 'BMAP_SATELLITE_MAP',\n  BMAP_HYBRID_MAP = 'BMAP_HYBRID_MAP'\n}\n\nexport function isMapTypeEnum(maptype: MapTypeEnum | BMapType): maptype is MapTypeEnum {\n  return !isFunction((<BMapType>maptype).getTileLayer)\n}\n","import { Injectable, Inject } from '@angular/core'\nimport { isBoolean, isNull, omit } from '../helpers/object'\nimport { nullCheck } from '../helpers/validate'\nimport { BControl } from '../types/Control'\nimport { ScriptLoaderConfig } from './scriptLoader'\nimport { BMapInstance, MapOptions, isMapTypeEnum } from '../types/Map'\nimport { Overlay } from '../types/Overlay'\nimport { BTileLayer } from '../types/TileLayer'\n\nimport { toPoint } from '../helpers/transformer'\n\nimport { ScriptLoader } from './scriptLoader'\n\n@Injectable()\nexport class MapService {\n  private _config: ScriptLoaderConfig\n\n  private _map: Promise<BMapInstance>\n  private _mapResolver: (value: BMapInstance) => void\n\n  constructor(@Inject(ScriptLoaderConfig) config: ScriptLoaderConfig, private _loader: ScriptLoader) {\n    nullCheck(config.ak, 'ak must be provided')\n\n    this._config = config\n\n    this._map = new Promise<BMapInstance>((resolve: () => void) => {\n      this._mapResolver = resolve\n    })\n  }\n\n  public createMap(el: HTMLElement, mapOptions: MapOptions): Promise<BMapInstance> {\n    const URL = `https://api.map.baidu.com/api?v=2.0&ak=${this._config.ak}&callback=baidumapinit&s=1`\n\n    return new Promise(resolve => {\n      this._loader.load(URL, true, () => {\n        const map = new window.BMap.Map(el, omit(mapOptions, 'mapType'))\n        this.setOptions(mapOptions)\n        this._mapResolver(map)\n        resolve(map)\n      })\n    })\n  }\n\n  public setOptions(opts: MapOptions): void {\n    const {\n      disableDragging,\n      enableScrollWheelZoom,\n      disableDoubleClickZoom,\n      enableKeyboard,\n      enableInertialDragging,\n      enableAutoResize,\n      enableContinuousZoom,\n      disablePinchToZoom\n    } = opts\n\n    if (isBoolean(disableDragging)) {\n      this._map.then(map => map[(disableDragging ? 'disable' : 'enable') + 'Dragging']())\n    }\n    if (isBoolean(enableScrollWheelZoom)) {\n      this._map.then(map => map[(enableScrollWheelZoom ? 'enable' : 'disable') + 'ScrollWheelZoom']())\n    }\n    if (isBoolean(enableAutoResize)) {\n      this._map.then(map => map[(enableAutoResize ? 'enable' : 'disable') + 'AutoResize']())\n    }\n    if (isBoolean(disableDoubleClickZoom)) {\n      this._map.then(map => map[(disableDoubleClickZoom ? 'disable' : 'enable') + 'DoubleClickZoom']())\n    }\n    if (isBoolean(enableKeyboard)) {\n      this._map.then(map => map[(enableKeyboard ? 'enable' : 'disable') + 'Keyboard']())\n    }\n    if (isBoolean(enableInertialDragging)) {\n      this._map.then(map => map[(enableInertialDragging ? 'enable' : 'disable') + 'InertialDragging']())\n    }\n    if (isBoolean(enableContinuousZoom)) {\n      this._map.then(map => map[(enableContinuousZoom ? 'enable' : 'disable') + 'ContinuousZoom']())\n    }\n    if (isBoolean(disablePinchToZoom)) {\n      this._map.then(map => map[(disablePinchToZoom ? 'disable' : 'enable') + 'PinchToZoom']())\n    }\n    if (!isNull(opts.cursor)) {\n      this._map.then(map => map.setDefaultCursor(opts.cursor))\n    }\n    if (!isNull(opts.draggingCursor)) {\n      this._map.then(map => map.setDraggingCursor(opts.draggingCursor))\n    }\n    if (!isNull(opts.currentCity)) {\n      this._map.then(map => map.setCurrentCity(opts.currentCity))\n    }\n    if (!isNull(opts.centerAndZoom)) {\n      this._map.then(map => {\n        map.centerAndZoom(toPoint(opts.centerAndZoom), opts.centerAndZoom.zoom)\n      })\n    }\n    if (!isNull(opts.mapType)) {\n      this._map.then(map => {\n        const realType = isMapTypeEnum(opts.mapType) ? window[opts.mapType] : opts.mapType\n        map.setMapType(realType)\n      })\n    }\n  }\n\n  public addOverlay(cb: (map: BMapInstance) => Overlay): Promise<{ map: BMapInstance; overlay: Overlay }> {\n    return this._map.then((map: BMapInstance) => {\n      const overlay = cb(map)\n      map.addOverlay(overlay)\n      return { map, overlay }\n    })\n  }\n\n  public removeOverlay(overlay: Overlay): Promise<void> {\n    return this._map.then((map: BMapInstance) => {\n      map.removeOverlay(overlay)\n    })\n  }\n\n  public addTileLayer(\n    cb: (map: BMapInstance) => BTileLayer\n  ): Promise<{ map: BMapInstance; tilelayer: BTileLayer }> {\n    return this._map.then((map: BMapInstance) => {\n      const tilelayer = cb(map)\n      map.addTileLayer(tilelayer)\n      return { map, tilelayer }\n    })\n  }\n\n  public removeTileLayer(tilelayer: BTileLayer): Promise<void> {\n    return this._map.then((map: BMapInstance) => {\n      map.removeOverlay(tilelayer)\n    })\n  }\n\n  public addControl(cb: (map: BMapInstance) => BControl): Promise<{ map: BMapInstance; control: BControl }> {\n    return this._map.then((map: BMapInstance) => {\n      const control = cb(map)\n      map.addControl(control)\n      return { map, control }\n    })\n  }\n\n  public removeControl(control: BControl): Promise<void> {\n    return this._map.then((map: BMapInstance) => {\n      map.removeControl(control)\n    })\n  }\n\n  public getNativeMap(): Promise<BMapInstance> {\n    return this._map\n  }\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy, OnInit } from '@angular/core'\n\nimport {\n  toGeolocationOptions,\n  toMapTypeControlOptions,\n  toNavigationControlOptions,\n  toOverviewMapControlOptions,\n  toScaleControlOptions\n} from '../helpers/transformer'\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BControl, ControlType } from '../types/Control'\n\n@Directive({\n  selector: 'control'\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  @Input() private type: ControlType\n  @Input() private options: { [key: string]: any }\n\n  @Output() private loaded = new EventEmitter()\n\n  private control: BControl\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.type, 'type is required for <control>')\n\n    this._service\n      .addControl(() => {\n        this.control = this.createControl(this.type, this.options)\n        return this.control\n      })\n      .then(({ control }) => {\n        this.loaded.emit(control)\n      })\n  }\n\n  public ngOnDestroy() {\n    this._service.removeControl(this.control)\n  }\n\n  private createControl(type: ControlType, options: { [key: string]: any }): BControl {\n    if (type === 'navigation') {\n      return new window.BMap.NavigationControl(toNavigationControlOptions(options))\n    }\n    if (type === 'overviewmap') {\n      return new window.BMap.OverviewMapControl(toOverviewMapControlOptions(options))\n    }\n    if (type === 'scale') {\n      return new window.BMap.ScaleControl(toScaleControlOptions(options))\n    }\n    if (type === 'maptype') {\n      return new window.BMap.MapTypeControl(toMapTypeControlOptions(options))\n    }\n    if (type === 'geolocation') {\n      return new window.BMap.GeolocationControl(toGeolocationOptions(options))\n    }\n    if (type === 'panorama') {\n      return new window.BMap.PanoramaControl()\n    }\n    throw new Error(`Unsupported type:${type} of control`)\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChange,\n  ViewChild\n} from '@angular/core'\n\nimport { MapService } from '../providers/mapService'\nimport { BMapInstance, MapOptions } from '../types/Map'\n\nimport { nullCheck } from '../helpers/validate'\n\n@Component({\n  providers: [MapService],\n  selector: 'baidu-map',\n  styles: [\n    `\n        .baidu-map-instance {\n            width: 100%;\n            height: 100%;\n            display: none;\n        }\n        .baidu-map-offline {\n            width: 100%;\n            height: 100%;\n            background-color: #E6E6E6;\n            position: relative;\n            display: none;\n        }\n        .baidu-map-offline label {\n            fontSize: 30px;\n            margin: 0;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            margin-right: -50%;\n            transform: translate(-50%, -50%);\n        }\n        .tranclude-content {\n            display: none;\n        }\n        `\n  ],\n  template: `\n    <div #mapinstance class=\"baidu-map-instance\"></div>\n    <div class=\"baidu-map-offline\">\n        <label>{{ 'NO_NETWORK' }}</label>\n    </div>\n    <div class=\"tranclude-content\">\n        <ng-content></ng-content>\n    </div>\n    `\n})\nexport class MapComponent implements OnInit, OnChanges {\n  @Input() private options: MapOptions\n\n  @Output() private loaded = new EventEmitter()\n  @Output() private clicked = new EventEmitter()\n\n  @ViewChild('mapinstance') private mapInstance: ElementRef\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.options, 'options is required for <baidu-map>')\n    nullCheck(this.options.centerAndZoom, 'options.centerAndZoom is required for <baidu-map>')\n\n    this._service\n      .createMap(this.mapInstance.nativeElement, this.options)\n      .then(map => {\n        this.loaded.emit(map)\n        return map\n      })\n      .then(map => {\n        this.addListener(map)\n      })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    const opts = changes.options.currentValue as MapOptions\n    if (!opts) {\n      return console.warn('MapOptions change was ignored since you are passing empty value')\n    }\n    this._service.setOptions(opts)\n  }\n\n  public ngOnDestroy() {\n    console.log('on map destroy')\n  }\n\n  private addListener(map: BMapInstance) {\n    map.addEventListener('click', (e: any) => {\n      this.clicked.emit(e)\n    })\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { isNull } from '../helpers/object'\nimport { toIcon, toMarkerOptions, toPoint, toSize } from '../helpers/transformer'\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BMapInstance } from '../types/Map'\nimport { BMarker, MarkerOptions } from '../types/Marker'\nimport { Point } from '../types/Point'\n\n@Directive({\n  selector: 'marker'\n})\nexport class MarkerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private point: Point\n  @Input() private options: MarkerOptions\n\n  @Output() private loaded = new EventEmitter()\n  @Output() private clicked = new EventEmitter()\n\n  private marker: BMarker\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.point, 'point is required for <marker>')\n\n    this._service\n      .addOverlay(() => {\n        return (this.marker = new window.BMap.Marker(toPoint(this.point), toMarkerOptions(this.options)))\n      })\n      .then(({ map }) => {\n        this.loaded.emit(this.marker)\n        this.addListener(this.marker, map)\n      })\n      .then(() => {\n        // workaround: it's weird that postion is set while constructing phase will make click event not working\n        this.marker.setPosition(new window.BMap.Point(this.point.lng, this.point.lat))\n      })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.point && !changes.point.isFirstChange()) {\n      this.marker.setPosition(toPoint(changes.point.currentValue))\n    }\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.setOptions(changes.options.currentValue)\n    }\n  }\n\n  public ngOnDestroy() {\n    this._service.removeOverlay(this.marker)\n  }\n\n  private setOptions(options: MarkerOptions): void {\n    if (isNull(options)) {\n      return\n    }\n    if (!isNull(options.offset)) {\n      this.marker.setOffset(toSize(options.offset))\n    }\n    if (!isNull(options.icon)) {\n      this.marker.setIcon(toIcon(options.icon.imageUrl, options.icon.size, options.icon))\n    }\n    if (!isNull(options.enableMassClear)) {\n      this.marker[(options.enableMassClear ? 'enable' : 'disable') + 'MassClear']()\n    }\n    if (!isNull(options.enableDragging)) {\n      this.marker[(options.enableDragging ? 'enable' : 'disable') + 'Dragging']()\n    }\n    if (!isNull(options.rotation)) {\n      this.marker.setRotation(options.rotation)\n    }\n    if (!isNull(options.shadow)) {\n      this.marker.setShadow(toIcon(options.shadow.imageUrl, options.shadow.size, options.shadow))\n    }\n    if (!isNull(options.title)) {\n      this.marker.setTitle(options.title)\n    }\n  }\n\n  private addListener(marker: BMarker, map: BMapInstance) {\n    marker.addEventListener('click', (e: any) => {\n      this.clicked.emit({\n        e,\n        map,\n        marker\n      })\n    })\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { isNull, isUndefined } from '../helpers/object'\nimport { toPoints } from '../helpers/transformer'\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BPolyline, PolylineOptions } from '../types/Polyline'\nimport { Point } from '../types/Point'\n\n@Directive({\n  selector: 'polyline'\n})\nexport class PolylineComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private points: Array<Point>\n  @Input() private options: PolylineOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private polyline: BPolyline\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.points, 'points is required for <polyline>')\n\n    this._service\n      .addOverlay(() => {\n        return (this.polyline = new window.BMap.Polyline(toPoints(this.points), this.options))\n      })\n      .then(() => {\n        this.loaded.emit(this.polyline)\n      })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.points && !changes.points.isFirstChange()) {\n      this.polyline.setPath(toPoints(changes.points.currentValue))\n    }\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.setOptions(changes.options.currentValue)\n    }\n  }\n\n  public ngOnDestroy() {\n    this._service.removeOverlay(this.polyline)\n  }\n\n  private setOptions(options: PolylineOptions): void {\n    if (isNull(options)) {\n      return\n    }\n    if (!isUndefined(options.enableEditing)) {\n      if (options.enableEditing) {\n        this.polyline.enableEditing()\n      } else {\n        this.polyline.disableEditing()\n      }\n    }\n    if (!isUndefined(options.enableMassClear)) {\n      if (options.enableEditing) {\n        this.polyline.enableMassClear()\n      } else {\n        this.polyline.disableMassClear()\n      }\n    }\n    if (!isUndefined(options.strokeColor)) {\n      this.polyline.setStrokeColor(options.strokeColor)\n    }\n    if (!isUndefined(options.strokeOpacity)) {\n      this.polyline.setStrokeOpacity(options.strokeOpacity)\n    }\n    if (!isUndefined(options.strokeStyle)) {\n      this.polyline.setStrokeStyle(options.strokeStyle)\n    }\n    if (!isUndefined(options.strokeWeight)) {\n      this.polyline.setStrokeWeight(options.strokeWeight)\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { isNull, isUndefined } from '../helpers/object'\nimport { toPoint } from '../helpers/transformer'\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BCircle, CircleOptions } from '../types/Circle'\nimport { Point } from '../types/Point'\n\n@Directive({\n  selector: 'circle'\n})\nexport class CircleComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private center: Point\n  @Input() private radius: number\n  @Input() private options: CircleOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private circle: BCircle\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.center, 'center is required for <circle>')\n    nullCheck(this.radius, 'center is required for <circle>')\n\n    this._service\n      .addOverlay(() => {\n        return (this.circle = new window.BMap.Circle(toPoint(this.center), this.radius, this.options))\n      })\n      .then(() => {\n        this.loaded.emit(this.circle)\n      })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.center && !changes.center.isFirstChange()) {\n      this.circle.setCenter(toPoint(changes.center.currentValue))\n    }\n    if (changes.radius && !changes.radius.isFirstChange()) {\n      this.circle.setRadius(changes.radius.currentValue)\n    }\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.setOptions(changes.options.currentValue)\n    }\n  }\n\n  public ngOnDestroy() {\n    this._service.removeOverlay(this.circle)\n  }\n\n  private setOptions(options: CircleOptions): void {\n    if (isNull(options)) {\n      return\n    }\n    if (!isUndefined(options.enableEditing)) {\n      if (options.enableEditing) {\n        this.circle.enableEditing()\n      } else {\n        this.circle.disableEditing()\n      }\n    }\n    if (!isUndefined(options.enableMassClear)) {\n      if (options.enableEditing) {\n        this.circle.enableMassClear()\n      } else {\n        this.circle.disableMassClear()\n      }\n    }\n    if (!isUndefined(options.strokeColor)) {\n      this.circle.setStrokeColor(options.strokeColor)\n    }\n    if (!isUndefined(options.fillColor)) {\n      this.circle.setFillColor(options.fillColor)\n    }\n    if (!isUndefined(options.strokeOpacity)) {\n      this.circle.setStrokeOpacity(options.strokeOpacity)\n    }\n    if (!isUndefined(options.fillOpacity)) {\n      this.circle.setFillOpacity(options.fillOpacity)\n    }\n    if (!isUndefined(options.strokeStyle)) {\n      this.circle.setStrokeStyle(options.strokeStyle)\n    }\n    if (!isUndefined(options.strokeWeight)) {\n      this.circle.setStrokeWeight(options.strokeWeight)\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { isNull, isUndefined } from '../helpers/object'\nimport { toPoints } from '../helpers/transformer'\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BPolygon, PolygonOptions } from '../types/Polygon'\nimport { Point } from '../types/Point'\n\n@Directive({\n  selector: 'polygon'\n})\nexport class PolygonComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private points: Array<Point>\n  @Input() private options: PolygonOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private polygon: BPolygon\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    nullCheck(this.points, 'points is required for <polygon>')\n\n    this._service\n      .addOverlay(() => {\n        return (this.polygon = new window.BMap.Polygon(toPoints(this.points), this.options))\n      })\n      .then(() => {\n        this.loaded.emit(this.polygon)\n      })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.points && !changes.points.isFirstChange()) {\n      this.polygon.setPath(toPoints(changes.points.currentValue))\n    }\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.setOptions(changes.options.currentValue)\n    }\n  }\n\n  public ngOnDestroy() {\n    this._service.removeOverlay(this.polygon)\n  }\n\n  private setOptions(options: PolygonOptions): void {\n    if (isNull(options)) {\n      return\n    }\n    if (!isUndefined(options.enableEditing)) {\n      if (options.enableEditing) {\n        this.polygon.enableEditing()\n      } else {\n        this.polygon.disableEditing()\n      }\n    }\n    if (!isUndefined(options.enableMassClear)) {\n      if (options.enableEditing) {\n        this.polygon.enableMassClear()\n      } else {\n        this.polygon.disableMassClear()\n      }\n    }\n    if (!isUndefined(options.strokeColor)) {\n      this.polygon.setStrokeColor(options.strokeColor)\n    }\n    if (!isUndefined(options.fillColor)) {\n      this.polygon.setFillColor(options.fillColor)\n    }\n    if (!isUndefined(options.strokeOpacity)) {\n      this.polygon.setStrokeOpacity(options.strokeOpacity)\n    }\n    if (!isUndefined(options.fillOpacity)) {\n      this.polygon.setFillOpacity(options.fillOpacity)\n    }\n    if (!isUndefined(options.strokeStyle)) {\n      this.polygon.setStrokeStyle(options.strokeStyle)\n    }\n    if (!isUndefined(options.strokeWeight)) {\n      this.polygon.setStrokeWeight(options.strokeWeight)\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { nullCheck } from '../helpers/validate'\nimport { MapService } from '../providers/mapService'\nimport { BHeatmap, HeatmapOptions, HeatmapData } from '../types/Heatmap'\nimport { ScriptLoader } from '../providers/scriptLoader'\n\nconst LIB_URL = `https://api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js`\n\n@Directive({\n  selector: 'heatmap'\n})\nexport class HeatmapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private dataset: HeatmapData\n  @Input() private options: HeatmapOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private heatmap: BHeatmap\n\n  constructor(private _service: MapService, private scriptLoader: ScriptLoader) {}\n\n  public ngOnInit() {\n    nullCheck(this.dataset, 'dataset is required for <heatmap>')\n\n    this._service.getNativeMap().then(() => {\n      return this.scriptLoader.load(LIB_URL, false, () => {\n        this._service\n          .addOverlay(() => {\n            return (this.heatmap = new window.BMapLib.HeatmapOverlay(this.options))\n          })\n          .then(() => {\n            this.loaded.emit(this.heatmap)\n            if (this.dataset) {\n              this.heatmap.setDataSet(this.dataset)\n            }\n          })\n      })\n    })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.dataset && !changes.dataset.isFirstChange()) {\n      this.heatmap.setDataSet(changes.dataset.currentValue)\n    }\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.heatmap.setOptions(changes.options.currentValue)\n    }\n  }\n\n  public ngOnDestroy() {\n    this._service.removeOverlay(this.heatmap)\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core'\n\nimport { MapService } from '../providers/mapService'\nimport { BTileLayer, TileLayerOptions, getTilesUrlFunc } from '../types/TileLayer'\nimport { BPixel } from '../types/Pixel'\n\n@Directive({\n  selector: 'tilelayer'\n})\nexport class TileLayderComponent implements OnInit, OnDestroy {\n  @Input() private getTilesUrl: getTilesUrlFunc\n  @Input() private options: TileLayerOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private tilelayer: BTileLayer\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    const func = this.getTilesUrl\n\n    this._service\n      .addTileLayer(() => {\n        this.tilelayer = new window.BMap.TileLayer(this.options)\n\n        if (this.getTilesUrl) {\n          this.tilelayer.getTilesUrl = function(tileCoord: BPixel, zoom: number) {\n            return func(tileCoord, zoom)\n          }\n        }\n        return this.tilelayer\n      })\n      .then(() => {\n        this.loaded.emit(this.tilelayer)\n      })\n  }\n\n  public ngOnDestroy() {\n    this._service.removeTileLayer(this.tilelayer)\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core'\n\nimport { MapService } from '../providers/mapService'\nimport { BTrafficLayer, TrafficLayerOptions } from '../types/TrafficLayer'\n\n@Directive({\n  selector: 'trafficlayer'\n})\nexport class TrafficLayderComponent implements OnInit, OnDestroy {\n  @Input() private options: TrafficLayerOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private trafficlayer: BTrafficLayer\n\n  constructor(private _service: MapService) {}\n\n  public ngOnInit() {\n    this._service\n      .addTileLayer(() => {\n        this.trafficlayer = new window.BMap.TrafficLayer(this.options)\n        return this.trafficlayer\n      })\n      .then(() => {\n        this.loaded.emit(this.trafficlayer)\n      })\n  }\n\n  public ngOnDestroy() {\n    this._service.removeTileLayer(this.trafficlayer)\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange\n} from '@angular/core'\n\nimport { nullCheck } from '../helpers/validate'\nimport { isUndefined } from '../helpers/object'\nimport { toMarkerClustererOptions, toPoint, toMarkerOptions, toTextIconStyle } from '../helpers/transformer'\nimport { MapService } from '../providers/mapService'\nimport { MarkerClustererOptions, BMarkerClusterer } from '../types/MarkerClusterer'\nimport { ScriptLoader } from '../providers/scriptLoader'\nimport { BMapInstance } from '../types/Map'\n\nconst LIB_URLS = {\n  key: 'markerClusterer',\n  scripts: [\n    'https://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js',\n    'https://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js'\n  ]\n}\n\n@Directive({\n  selector: 'marker-clusterer'\n})\nexport class MarkerClustererComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() private options: MarkerClustererOptions\n\n  @Output() private loaded = new EventEmitter()\n\n  private markerClusterer: BMarkerClusterer\n\n  constructor(private _service: MapService, private scriptLoader: ScriptLoader) {}\n\n  public ngOnInit() {\n    nullCheck(this.options, 'options is required for <marker-clusterer>')\n\n    this._service.getNativeMap().then((map: BMapInstance) => {\n      return this.scriptLoader.load(LIB_URLS, false, () => {\n        this.markerClusterer = new window.BMapLib.MarkerClusterer(map, toMarkerClustererOptions(this.options))\n\n        this.loaded.emit(this.markerClusterer)\n      })\n    })\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.options && !changes.options.isFirstChange()) {\n      this.resetOptions(changes.options.currentValue)\n    }\n  }\n\n  private resetOptions(options: MarkerClustererOptions) {\n    if (options.markers) {\n      this.markerClusterer.clearMarkers()\n      this.markerClusterer.addMarkers(\n        options.markers.map(m => new window.BMap.Marker(toPoint(m.point), toMarkerOptions(m.options)))\n      )\n    }\n    if (!isUndefined(options.girdSize)) {\n      this.markerClusterer.setGridSize(options.girdSize)\n    }\n    if (!isUndefined(options.maxZoom)) {\n      this.markerClusterer.setMaxZoom(options.maxZoom)\n    }\n    if (options.styles) {\n      this.markerClusterer.setStyles(options.styles.filter(s => s).map(s => toTextIconStyle(s)))\n    }\n  }\n\n  public ngOnDestroy() {\n    this.markerClusterer.clearMarkers()\n  }\n}\n","import { BIcon, Icon } from './Icon'\nimport { BSize, Size } from './Size'\n\nexport interface BControlConstructor {\n  new (opts: any): BControl\n}\n\nexport interface BControl {}\n\nexport interface BNavigationControlConstructor extends BControlConstructor {\n  new (opts: BNavigationControlOptions): BNavigationControl\n}\n\nexport interface BOverviewMapControlConstructor extends BControlConstructor {\n  new (opts: BOverviewMapControlOptions): BOverviewMapControl\n}\n\nexport interface BScaleControlConstructor extends BControlConstructor {\n  new (opts: BScaleControlOptions): BScaleControl\n}\n\nexport interface BMapTypeControlConstructor extends BControlConstructor {\n  new (opts: BMapTypeControlOptions): BMapTypeControl\n}\n\nexport interface BGeolocationConstructor extends BControlConstructor {\n  new (opts: BGeolocationControlOptions): BGeolocationControl\n}\n\nexport interface BPanoramaControlConstructor extends BControlConstructor {\n  new (): BPanoramaControlControl\n}\n\nexport interface BNavigationControl extends BControl {\n  getType(): NavigationControlType\n  setType(type: NavigationControlType): void\n}\n\nexport interface BOverviewMapControl extends BControl {\n  changeView(): void\n  setSize(size: BSize): void\n  getSize(): BSize\n}\n\nexport interface BScaleControl extends BControl {\n  getUnit(): LengthUnit\n  setUnit(unit: LengthUnit): void\n}\n\nexport interface BMapTypeControl extends BControl {}\n\nexport interface BGeolocationControl extends BControl {\n  location(): void\n  getAddressComponent(): AddressComponent\n}\n\nexport interface BPanoramaControlControl extends BControl {}\n\nexport interface ControlOptions {\n  anchor?: ControlAnchor\n  offset?: Size\n}\n\nexport interface BControlOptions {\n  anchor?: ControlAnchor\n  offset?: BSize\n}\n\nexport interface NavigationControlOptions extends ControlOptions {\n  type?: NavigationControlType\n  showZoomInfo?: boolean\n  enableGeolocation?: boolean\n}\n\nexport interface BNavigationControlOptions extends BControlOptions {\n  type?: NavigationControlType\n  showZoomInfo?: boolean\n  enableGeolocation?: boolean\n}\n\nexport interface OverviewMapControlOptions extends ControlOptions {\n  size?: Size\n  isOpen?: boolean\n}\n\nexport interface BOverviewMapControlOptions extends BControlOptions {\n  size?: BSize\n  isOpen?: boolean\n}\n\nexport interface ScaleControlOptions extends ControlOptions {}\n\nexport interface BScaleControlOptions extends BControlOptions {}\n\nexport interface MapTypeControlOptions {\n  type?: MapTypeControlType\n}\n\nexport interface BMapTypeControlOptions {\n  type?: MapTypeControlType\n}\n\nexport interface GeolocationControlOptions extends ControlOptions {\n  showAddressBar?: boolean\n  enableAutoLocation?: boolean\n  locationIcon?: Icon\n}\n\nexport interface BGeolocationControlOptions extends BControlOptions {\n  showAddressBar?: boolean\n  enableAutoLocation?: boolean\n  locationIcon?: BIcon\n}\n\nexport enum ControlAnchor {\n  BMAP_ANCHOR_TOP_LEFT = 0,\n  BMAP_ANCHOR_TOP_RIGHT = 1,\n  BMAP_ANCHOR_BOTTOM_LEFT = 2,\n  BMAP_ANCHOR_BOTTOM_RIGHT = 3\n}\n\nexport enum NavigationControlType {\n  BMAP_NAVIGATION_CONTROL_LARGE = 0,\n  BMAP_NAVIGATION_CONTROL_SMALL = 1,\n  BMAP_NAVIGATION_CONTROL_PAN = 2,\n  BMAP_NAVIGATION_CONTROL_ZOOM = 3\n}\n\nexport enum MapTypeControlType {\n  BMAP_MAPTYPE_CONTROL_HORIZONTAL = 0,\n  BMAP_MAPTYPE_CONTROL_DROPDOWN = 1,\n  BMAP_MAPTYPE_CONTROL_MAP = 2\n}\n\nexport enum LengthUnit {\n  BMAP_UNIT_METRIC = 'metric',\n  BMAP_UNIT_IMPERIAL = 'us'\n}\n\nexport interface AddressComponent {\n  streetNumber: string\n  street: string\n  district: string\n  city: string\n  province: string\n}\n\nexport type ControlType = 'navigation' | 'overviewmap' | 'scale' | 'maptype' | 'geolocation' | 'panorama'\n","import { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { ControlComponent } from './components/control.component'\nimport { MapComponent } from './components/map.component'\nimport { MarkerComponent } from './components/marker.component'\nimport { PolylineComponent } from './components/polyline.component'\nimport { CircleComponent } from './components/circle.component'\nimport { PolygonComponent } from './components/polygon.component'\nimport { HeatmapComponent } from './components/heatmap.component'\nimport { TileLayderComponent } from './components/tilelayer.component'\nimport { TrafficLayderComponent } from './components/trafficlayer.component'\nimport { MarkerClustererComponent } from './components/markerClusterer.component'\nimport { LOADING_STATE, ScriptLoader, ScriptLoaderConfig } from './providers/scriptLoader'\n\nimport { BMap } from './types/BMap'\nimport { BMapLib } from './types/BMapLib'\n\n@NgModule({\n  declarations: [\n    MapComponent,\n    MarkerComponent,\n    ControlComponent,\n    PolylineComponent,\n    CircleComponent,\n    PolygonComponent,\n    HeatmapComponent,\n    TileLayderComponent,\n    TrafficLayderComponent,\n    MarkerClustererComponent\n  ],\n  exports: [\n    MapComponent,\n    MarkerComponent,\n    ControlComponent,\n    PolylineComponent,\n    CircleComponent,\n    PolygonComponent,\n    HeatmapComponent,\n    TileLayderComponent,\n    TrafficLayderComponent,\n    MarkerClustererComponent\n  ]\n})\nexport class BaiduMapModule {\n  public static forRoot(_config?: ScriptLoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: BaiduMapModule,\n      providers: [{ provide: ScriptLoaderConfig, useValue: _config }, ScriptLoader]\n    }\n  }\n}\n\nexport { BMapInstance, MapOptions, MapTypeEnum } from './types/Map'\nexport { BMapType } from './types/MapType'\nexport { BProjection } from './types/Projection'\nexport { Point } from './types/Point'\nexport { BMarker, Marker, MarkerOptions } from './types/Marker'\nexport { BPolyline, PolylineOptions } from './types/Polyline'\nexport { BCircle, CircleOptions } from './types/Circle'\nexport { BPolygon, PolygonOptions } from './types/Polygon'\nexport { BHeatmap, HeatmapOptions, HeatmapData } from './types/Heatmap'\nexport { BTileLayer, TileLayerOptions, getTilesUrlFunc } from './types/TileLayer'\nexport { BTrafficLayer, TrafficLayerOptions, PredictDate } from './types/TrafficLayer'\nexport { BMarkerClusterer, MarkerClustererOptions } from './types/MarkerClusterer'\nexport { TextIconStyle } from './types/TextIconOverlay'\nexport {\n  BControl,\n  BNavigationControl,\n  BOverviewMapControl,\n  BScaleControl,\n  BMapTypeControl,\n  BGeolocationControl,\n  BPanoramaControlControl,\n  ControlType,\n  ControlAnchor,\n  GeolocationControlOptions,\n  LengthUnit,\n  NavigationControlOptions,\n  NavigationControlType,\n  OverviewMapControlOptions,\n  ScaleControlOptions,\n  MapTypeControlOptions,\n  MapTypeControlType\n} from './types/Control'\nexport { BInfoWindowConstructor, BInfoWindowOptions } from './types/InfoWindow'\n\ndeclare global {\n  interface Window {\n    _scriptLoadState: { [url: string]: LOADING_STATE }\n    _loadingCallbacks: { [url: string]: Array<() => void> }\n    BMap: BMap\n    BMapLib: BMapLib\n    baidumapinit: () => void\n    BMAP_PERSPECTIVE_MAP: any\n  }\n}\n"],"names":[],"mappings":"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"}
