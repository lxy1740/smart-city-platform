/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { isBoolean, isNull, omit } from '../helpers/object';
import { nullCheck } from '../helpers/validate';
import { ScriptLoaderConfig } from './scriptLoader';
import { isMapTypeEnum } from '../types/Map';
import { toPoint } from '../helpers/transformer';
import { ScriptLoader } from './scriptLoader';
var MapService = /** @class */ (function () {
    function MapService(config, _loader) {
        var _this = this;
        this._loader = _loader;
        nullCheck(config.ak, 'ak must be provided');
        this._config = config;
        this._map = new Promise(function (resolve) {
            _this._mapResolver = resolve;
        });
    }
    /**
     * @param {?} el
     * @param {?} mapOptions
     * @return {?}
     */
    MapService.prototype.createMap = /**
     * @param {?} el
     * @param {?} mapOptions
     * @return {?}
     */
    function (el, mapOptions) {
        var _this = this;
        var /** @type {?} */ URL = "https://api.map.baidu.com/api?v=2.0&ak=" + this._config.ak + "&callback=baidumapinit&s=1";
        return new Promise(function (resolve) {
            _this._loader.load(URL, true, function () {
                var /** @type {?} */ map = new window.BMap.Map(el, omit(mapOptions, 'mapType'));
                _this.setOptions(mapOptions);
                _this._mapResolver(map);
                resolve(map);
            });
        });
    };
    /**
     * @param {?} opts
     * @return {?}
     */
    MapService.prototype.setOptions = /**
     * @param {?} opts
     * @return {?}
     */
    function (opts) {
        var disableDragging = opts.disableDragging, enableScrollWheelZoom = opts.enableScrollWheelZoom, disableDoubleClickZoom = opts.disableDoubleClickZoom, enableKeyboard = opts.enableKeyboard, enableInertialDragging = opts.enableInertialDragging, enableAutoResize = opts.enableAutoResize, enableContinuousZoom = opts.enableContinuousZoom, disablePinchToZoom = opts.disablePinchToZoom;
        if (isBoolean(disableDragging)) {
            this._map.then(function (map) { return map[(disableDragging ? 'disable' : 'enable') + 'Dragging'](); });
        }
        if (isBoolean(enableScrollWheelZoom)) {
            this._map.then(function (map) { return map[(enableScrollWheelZoom ? 'enable' : 'disable') + 'ScrollWheelZoom'](); });
        }
        if (isBoolean(enableAutoResize)) {
            this._map.then(function (map) { return map[(enableAutoResize ? 'enable' : 'disable') + 'AutoResize'](); });
        }
        if (isBoolean(disableDoubleClickZoom)) {
            this._map.then(function (map) { return map[(disableDoubleClickZoom ? 'disable' : 'enable') + 'DoubleClickZoom'](); });
        }
        if (isBoolean(enableKeyboard)) {
            this._map.then(function (map) { return map[(enableKeyboard ? 'enable' : 'disable') + 'Keyboard'](); });
        }
        if (isBoolean(enableInertialDragging)) {
            this._map.then(function (map) { return map[(enableInertialDragging ? 'enable' : 'disable') + 'InertialDragging'](); });
        }
        if (isBoolean(enableContinuousZoom)) {
            this._map.then(function (map) { return map[(enableContinuousZoom ? 'enable' : 'disable') + 'ContinuousZoom'](); });
        }
        if (isBoolean(disablePinchToZoom)) {
            this._map.then(function (map) { return map[(disablePinchToZoom ? 'disable' : 'enable') + 'PinchToZoom'](); });
        }
        if (!isNull(opts.cursor)) {
            this._map.then(function (map) { return map.setDefaultCursor(opts.cursor); });
        }
        if (!isNull(opts.draggingCursor)) {
            this._map.then(function (map) { return map.setDraggingCursor(opts.draggingCursor); });
        }
        if (!isNull(opts.currentCity)) {
            this._map.then(function (map) { return map.setCurrentCity(opts.currentCity); });
        }
        if (!isNull(opts.centerAndZoom)) {
            this._map.then(function (map) {
                map.centerAndZoom(toPoint(opts.centerAndZoom), opts.centerAndZoom.zoom);
            });
        }
        if (!isNull(opts.mapType)) {
            this._map.then(function (map) {
                var /** @type {?} */ realType = isMapTypeEnum(opts.mapType) ? window[opts.mapType] : opts.mapType;
                map.setMapType(realType);
            });
        }
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    MapService.prototype.addOverlay = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        return this._map.then(function (map) {
            var /** @type {?} */ overlay = cb(map);
            map.addOverlay(overlay);
            return { map: map, overlay: overlay };
        });
    };
    /**
     * @param {?} overlay
     * @return {?}
     */
    MapService.prototype.removeOverlay = /**
     * @param {?} overlay
     * @return {?}
     */
    function (overlay) {
        return this._map.then(function (map) {
            map.removeOverlay(overlay);
        });
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    MapService.prototype.addTileLayer = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        return this._map.then(function (map) {
            var /** @type {?} */ tilelayer = cb(map);
            map.addTileLayer(tilelayer);
            return { map: map, tilelayer: tilelayer };
        });
    };
    /**
     * @param {?} tilelayer
     * @return {?}
     */
    MapService.prototype.removeTileLayer = /**
     * @param {?} tilelayer
     * @return {?}
     */
    function (tilelayer) {
        return this._map.then(function (map) {
            map.removeOverlay(tilelayer);
        });
    };
    /**
     * @param {?} cb
     * @return {?}
     */
    MapService.prototype.addControl = /**
     * @param {?} cb
     * @return {?}
     */
    function (cb) {
        return this._map.then(function (map) {
            var /** @type {?} */ control = cb(map);
            map.addControl(control);
            return { map: map, control: control };
        });
    };
    /**
     * @param {?} control
     * @return {?}
     */
    MapService.prototype.removeControl = /**
     * @param {?} control
     * @return {?}
     */
    function (control) {
        return this._map.then(function (map) {
            map.removeControl(control);
        });
    };
    /**
     * @return {?}
     */
    MapService.prototype.getNativeMap = /**
     * @return {?}
     */
    function () {
        return this._map;
    };
    MapService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    MapService.ctorParameters = function () { return [
        { type: ScriptLoaderConfig, decorators: [{ type: Inject, args: [ScriptLoaderConfig,] },] },
        { type: ScriptLoader, },
    ]; };
    return MapService;
}());
export { MapService };
function MapService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MapService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MapService.ctorParameters;
    /** @type {?} */
    MapService.prototype._config;
    /** @type {?} */
    MapService.prototype._map;
    /** @type {?} */
    MapService.prototype._mapResolver;
    /** @type {?} */
    MapService.prototype._loader;
}

//# sourceMappingURL=data:application/json;base64,