/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { MapService } from '../providers/mapService';
var TrafficLayderComponent = /** @class */ (function () {
    function TrafficLayderComponent(_service) {
        this._service = _service;
        this.loaded = new EventEmitter();
    }
    /**
     * @return {?}
     */
    TrafficLayderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._service
            .addTileLayer(function () {
            _this.trafficlayer = new window.BMap.TrafficLayer(_this.options);
            return _this.trafficlayer;
        })
            .then(function () {
            _this.loaded.emit(_this.trafficlayer);
        });
    };
    /**
     * @return {?}
     */
    TrafficLayderComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._service.removeTileLayer(this.trafficlayer);
    };
    TrafficLayderComponent.decorators = [
        { type: Directive, args: [{
                    selector: 'trafficlayer'
                },] },
    ];
    /** @nocollapse */
    TrafficLayderComponent.ctorParameters = function () { return [
        { type: MapService, },
    ]; };
    TrafficLayderComponent.propDecorators = {
        "options": [{ type: Input },],
        "loaded": [{ type: Output },],
    };
    return TrafficLayderComponent;
}());
export { TrafficLayderComponent };
function TrafficLayderComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    TrafficLayderComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    TrafficLayderComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    TrafficLayderComponent.propDecorators;
    /** @type {?} */
    TrafficLayderComponent.prototype.options;
    /** @type {?} */
    TrafficLayderComponent.prototype.loaded;
    /** @type {?} */
    TrafficLayderComponent.prototype.trafficlayer;
    /** @type {?} */
    TrafficLayderComponent.prototype._service;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhZmZpY2xheWVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXIyLWJhaWR1LW1hcC8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdHJhZmZpY2xheWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFFekYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFBOztJQWFsRCxnQ0FBb0IsUUFBb0I7UUFBcEIsYUFBUSxHQUFSLFFBQVEsQ0FBWTtzQkFKYixJQUFJLFlBQVksRUFBRTtLQUlEOzs7O0lBRXJDLHlDQUFROzs7OztRQUNiLElBQUksQ0FBQyxRQUFRO2FBQ1YsWUFBWSxDQUFDO1lBQ1osS0FBSSxDQUFDLFlBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtZQUM5RCxNQUFNLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQTtTQUN6QixDQUFDO2FBQ0QsSUFBSSxDQUFDO1lBQ0osS0FBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQyxDQUFBO1NBQ3BDLENBQUMsQ0FBQTs7Ozs7SUFHQyw0Q0FBVzs7OztRQUNoQixJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUE7OztnQkF4Qm5ELFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztpQkFDekI7Ozs7Z0JBTFEsVUFBVTs7OzRCQU9oQixLQUFLOzJCQUVMLE1BQU07O2lDQVhUOztTQVFhLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5cbmltcG9ydCB7IE1hcFNlcnZpY2UgfSBmcm9tICcuLi9wcm92aWRlcnMvbWFwU2VydmljZSdcbmltcG9ydCB7IEJUcmFmZmljTGF5ZXIsIFRyYWZmaWNMYXllck9wdGlvbnMgfSBmcm9tICcuLi90eXBlcy9UcmFmZmljTGF5ZXInXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ3RyYWZmaWNsYXllcidcbn0pXG5leHBvcnQgY2xhc3MgVHJhZmZpY0xheWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgQElucHV0KCkgcHJpdmF0ZSBvcHRpb25zOiBUcmFmZmljTGF5ZXJPcHRpb25zXG5cbiAgQE91dHB1dCgpIHByaXZhdGUgbG9hZGVkID0gbmV3IEV2ZW50RW1pdHRlcigpXG5cbiAgcHJpdmF0ZSB0cmFmZmljbGF5ZXI6IEJUcmFmZmljTGF5ZXJcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zZXJ2aWNlOiBNYXBTZXJ2aWNlKSB7fVxuXG4gIHB1YmxpYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLl9zZXJ2aWNlXG4gICAgICAuYWRkVGlsZUxheWVyKCgpID0+IHtcbiAgICAgICAgdGhpcy50cmFmZmljbGF5ZXIgPSBuZXcgd2luZG93LkJNYXAuVHJhZmZpY0xheWVyKHRoaXMub3B0aW9ucylcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhZmZpY2xheWVyXG4gICAgICB9KVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLmxvYWRlZC5lbWl0KHRoaXMudHJhZmZpY2xheWVyKVxuICAgICAgfSlcbiAgfVxuXG4gIHB1YmxpYyBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl9zZXJ2aWNlLnJlbW92ZVRpbGVMYXllcih0aGlzLnRyYWZmaWNsYXllcilcbiAgfVxufVxuIl19