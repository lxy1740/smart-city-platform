{"remainingRequest":"D:\\d0109\\smart-city-platform\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\d0109\\smart-city-platform\\node_modules\\rxjs\\_esm5\\internal\\observable\\fromObservable.js","dependencies":[{"path":"D:\\d0109\\smart-city-platform\\node_modules\\rxjs\\_esm5\\internal\\observable\\fromObservable.js","mtime":1548727019209},{"path":"D:\\d0109\\smart-city-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548727013264},{"path":"D:\\d0109\\smart-city-platform\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548727008862}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map\n",null]}