{"remainingRequest":"D:\\dev\\smart-city-platform\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\dev\\smart-city-platform\\node_modules\\core-js\\modules\\es6.function.has-instance.js","dependencies":[{"path":"D:\\dev\\smart-city-platform\\node_modules\\core-js\\modules\\es6.function.has-instance.js","mtime":1547002987594},{"path":"D:\\dev\\smart-city-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547002986676},{"path":"D:\\dev\\smart-city-platform\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1547002982984}],"contextDependencies":[],"result":["'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n",null]}